{"src": "<digit> source dispersers for sub polynomial entropy and ramsey graphs beating the frankl wilson construction . <sep> the main result of this paper is an explicit disperser for two independent sources on n bits , each of entropy k n explicit n n boolean matrices for which no k k sub matrix is monochromatic . viewed as adjacency matrices of bipartite graphs , this gives an explicit construction of k ramsey bipartite graphs of size n . this greatly improves the previous bound of k o ( n ) of barak , kindler , shaltiel , sudakov and wigderson <digit> . it also significantly improves the <digit> year record of k o ( n ) on the special case of ramsey graphs , due to frankl and wilson <digit> . the construction uses ( besides classical extractor ideas ) almost all of the machinery developed in the last couple of years for extraction from independent sources , including bourgain ' s extractor for <digit> independent sources of some entropy rate lt <digit> <digit> <digit> raz ' s extractor for <digit> independent sources , one of which has any entropy rate gt <digit> <digit> <digit> rao ' s extractor for <digit> independent block sources of entropy the challenge response mechanism for detecting entropy concentration of <digit> . the main novelty comes in a bootstrap procedure which allows the challenge response mechanism of <digit> to be used with sources of less and less entropy , using recursive calls to itself . subtleties arise since the success of this mechanism depends on restricting the given sources , and so recursion constantly changes the original sources . these are resolved via a new construct , in between a disperser and an extractor , which behaves like an extractor on sufficiently large subsources of the given ones . categories and subject descriptors g . <digit> . <digit> mathematics of computing discrete mathematics graph algorithms general terms theory , algorithms", "tokenized_src": [32101, 1391, 1028, 4660, 277, 21, 769, 4251, 3114, 23, 138, 3, 35, 12395, 63, 11, 3, 2375, 7, 15, 63, 8373, 7, 16201, 8, 3, 89, 6254, 40, 3, 210, 173, 739, 1449, 3, 5, 32100, 8, 711, 741, 13, 48, 1040, 19, 46, 17623, 1028, 4660, 49, 21, 192, 2547, 2836, 30, 3, 29, 14120, 3, 6, 284, 13, 3, 35, 12395, 63, 3, 157, 3, 29, 17623, 3, 29, 3, 29, 3, 12840, 109, 152, 3, 20705, 15, 7, 21, 84, 150, 3, 157, 3, 157, 769, 16826, 19, 7414, 25620, 447, 3, 5, 3, 4931, 38, 19181, 9, 75, 4392, 3, 20705, 15, 7, 13, 2647, 2274, 155, 15, 8373, 7, 3, 6, 48, 1527, 46, 17623, 1449, 13, 3, 157, 3, 2375, 7, 15, 63, 2647, 2274, 155, 15, 8373, 7, 13, 812, 3, 29, 3, 5, 48, 6891, 1172, 7, 8, 1767, 8120, 13, 3, 157, 3, 32, 41, 3, 29, 3, 61, 13, 1207, 1639, 3, 6, 773, 1171, 3, 6, 3, 7, 5019, 23, 15, 40, 3, 6, 8411, 9, 9789, 11, 3, 14143, 26, 13515, 32101, 3, 5, 34, 92, 4019, 1172, 7, 8, 32101, 215, 1368, 13, 3, 157, 3, 32, 41, 3, 29, 3, 61, 30, 8, 534, 495, 13, 3, 2375, 7, 15, 63, 8373, 7, 3, 6, 788, 12, 3, 89, 6254, 40, 11, 3, 210, 173, 739, 32101, 3, 5, 8, 1449, 2284, 41, 3, 15262, 11702, 5819, 127, 912, 3, 61, 966, 66, 13, 8, 13226, 1597, 16, 8, 336, 1158, 13, 203, 21, 16629, 45, 2547, 2836, 3, 6, 379, 3, 21054, 9, 77, 3, 31, 3, 7, 5819, 127, 21, 32101, 2547, 2836, 13, 128, 3, 35, 12395, 63, 1080, 3, 40, 17, 32101, 32101, 32101, 3, 7275, 3, 31, 3, 7, 5819, 127, 21, 32101, 2547, 2836, 3, 6, 80, 13, 84, 65, 136, 3, 35, 12395, 63, 1080, 3, 122, 17, 32101, 32101, 32101, 3, 52, 9, 32, 3, 31, 3, 7, 5819, 127, 21, 32101, 2547, 2463, 2836, 13, 3, 35, 12395, 63, 8, 1921, 1773, 8557, 21, 3, 29782, 3, 35, 12395, 63, 6145, 13, 32101, 3, 5, 8, 711, 30372, 639, 16, 3, 9, 10427, 16081, 3979, 84, 1250, 8, 1921, 1773, 8557, 13, 32101, 12, 36, 261, 28, 2836, 13, 705, 11, 705, 3, 35, 12395, 63, 3, 6, 338, 3, 60, 15983, 757, 3088, 12, 1402, 3, 5, 9240, 3010, 7931, 437, 8, 1269, 13, 48, 8557, 5619, 30, 18395, 53, 8, 787, 2836, 3, 6, 11, 78, 3, 60, 3663, 1938, 4259, 1112, 8, 926, 2836, 3, 5, 175, 33, 13803, 1009, 3, 9, 126, 6774, 3, 6, 16, 344, 3, 9, 1028, 4660, 49, 11, 46, 5819, 127, 3, 6, 84, 19790, 7, 114, 46, 5819, 127, 30, 23750, 508, 769, 7928, 7, 13, 8, 787, 2102, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 122, 3, 5, 32101, 3, 5, 32101, 17082, 13, 10937, 19217, 15, 17082, 8373, 16783, 879, 1353, 4516, 3, 6, 16783, 1], "trg": "dispersers;disperser;entropy;ramsey graphs;ramsey graph;ramsey graphs;explicit disperser;independent sources;independent source;independent sources;bipartite graph;extractors;extractors;extractor;block sources;recursion;subsource;algorithms;structure;subsource somewhere extractor;polynomial time computable disperser;construction of disperser;termination;sum product theorem;tools;theorem;deficiency;randomness extraction;resiliency;distribution", "tokenized_trg": [1028, 4660, 277, 32100, 1028, 4660, 49, 32100, 3, 35, 12395, 63, 32100, 3, 2375, 7, 15, 63, 8373, 7, 32100, 3, 2375, 7, 15, 63, 8373, 32100, 3, 2375, 7, 15, 63, 8373, 7, 32100, 17623, 1028, 4660, 49, 32100, 2547, 2836, 32100, 2547, 1391, 32100, 2547, 2836, 32100, 2647, 2274, 155, 15, 8373, 32100, 5819, 127, 7, 32100, 5819, 127, 7, 32100, 5819, 127, 32100, 2463, 2836, 32100, 3, 60, 3663, 1938, 32100, 769, 7928, 32100, 16783, 32100, 1809, 32100, 769, 7928, 5775, 5819, 127, 32100, 4251, 3114, 23, 138, 97, 2890, 76, 3869, 1028, 4660, 49, 32100, 1449, 13, 1028, 4660, 49, 32100, 18739, 32100, 4505, 556, 8, 127, 15, 51, 32100, 1339, 32100, 8, 127, 15, 51, 32100, 20, 4638, 23, 4392, 32100, 6504, 655, 16629, 32100, 3, 60, 10578, 4392, 32100, 3438, 1]}
{"src": "a frequency based and a poisson based definition of the probability of being informative . <sep> this paper reports on theoretical investigations about the assumptions underlying the inverse document frequency ( idf ) . we show that an intuitive idf based probability function for the probability of a term being informative assumes disjoint document events . by assuming documents to be independent rather than disjoint , we arrive at a poisson based probability of being informative . the framework is useful for understanding and deciding the parameter estimation and combination in probabilistic retrieval models . categories and subject descriptors h . <digit> . <digit> information search and retrieval retrieval models general terms theory", "tokenized_src": [3, 9, 7321, 3, 390, 11, 3, 9, 22676, 3, 390, 4903, 13, 8, 15834, 13, 271, 11152, 3, 5, 32100, 48, 1040, 2279, 30, 13605, 17032, 81, 8, 20298, 3, 10067, 8, 3, 23536, 1708, 7321, 41, 3, 23, 26, 89, 3, 61, 3, 5, 62, 504, 24, 46, 12954, 3, 23, 26, 89, 3, 390, 15834, 1681, 21, 8, 15834, 13, 3, 9, 1657, 271, 11152, 5344, 7, 1028, 1927, 77, 17, 1708, 984, 3, 5, 57, 3, 15433, 2691, 12, 36, 2547, 1066, 145, 1028, 1927, 77, 17, 3, 6, 62, 3658, 44, 3, 9, 22676, 3, 390, 15834, 13, 271, 11152, 3, 5, 8, 4732, 19, 1934, 21, 1705, 11, 3, 12053, 8, 15577, 22781, 11, 2711, 16, 9551, 3040, 24515, 138, 2250, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 960, 11, 24515, 138, 24515, 138, 2250, 879, 1353, 4516, 1], "trg": "probability of being informative;assumptions;inverse document frequency;inverse document frequency;inverse document frequency;document frequency;disjoint documents;poisson based probability of being informative;poisson based probability;probabilistic retrieval models;information search;probability theories;independence assumption;information theory;maximal informative signal;relevance based ranking of retrieved objects;normalisation;probabilistic information retrieval;term frequency;computer science;frequency based probability;information theory;poisson distribution;document retrieval;document space;entropy;independent documents;frequency based term noise probability;noise probability;independent and disjoint documents;collection space", "tokenized_trg": [15834, 13, 271, 11152, 32100, 20298, 32100, 3, 23536, 1708, 7321, 32100, 3, 23536, 1708, 7321, 32100, 3, 23536, 1708, 7321, 32100, 1708, 7321, 32100, 1028, 1927, 77, 17, 2691, 32100, 22676, 3, 390, 15834, 13, 271, 11152, 32100, 22676, 3, 390, 15834, 32100, 9551, 3040, 24515, 138, 2250, 32100, 251, 960, 32100, 15834, 16348, 32100, 12315, 20662, 32100, 251, 4516, 32100, 13393, 11152, 3240, 32100, 20208, 3, 390, 11592, 13, 3, 31340, 4820, 32100, 1389, 2121, 32100, 9551, 3040, 251, 24515, 138, 32100, 1657, 7321, 32100, 1218, 2056, 32100, 7321, 3, 390, 15834, 32100, 251, 4516, 32100, 22676, 3438, 32100, 1708, 24515, 138, 32100, 1708, 628, 32100, 3, 35, 12395, 63, 32100, 2547, 2691, 32100, 7321, 3, 390, 1657, 4661, 15834, 32100, 4661, 15834, 32100, 2547, 11, 1028, 1927, 77, 17, 2691, 32100, 1232, 628, 1]}
{"src": "high performance crawling system . <sep> in the present paper , we will describe the design and implementation of a real time distributed system of web crawling running on a cluster of machines . the system crawls several thousands of pages every second , includes a high performance fault manager , is platform independent and is able to adapt transparently to a wide range of configurations without incurring additional hardware expenditure . we will then provide details of the system architecture and describe the technical choices for very high performance crawling . finally , we will discuss the experimental results obtained , comparing them with other documented systems . categories and subject descriptors d . <digit> . <digit> concurrent programming distributed programming c . <digit> performance of systems fault tolerance h . <digit> . <digit> digital libraries systems issues", "tokenized_src": [306, 821, 18639, 53, 358, 3, 5, 32100, 16, 8, 915, 1040, 3, 6, 62, 56, 5530, 8, 408, 11, 4432, 13, 3, 9, 490, 97, 8308, 358, 13, 765, 18639, 53, 1180, 30, 3, 9, 9068, 13, 4096, 3, 5, 8, 358, 18639, 7, 633, 2909, 13, 1688, 334, 511, 3, 6, 963, 3, 9, 306, 821, 7828, 2743, 3, 6, 19, 1585, 2547, 11, 19, 3, 179, 12, 3374, 7237, 120, 12, 3, 9, 1148, 620, 13, 5298, 7, 406, 18663, 1007, 1151, 4214, 15700, 3, 5, 62, 56, 258, 370, 1030, 13, 8, 358, 4648, 11, 5530, 8, 2268, 3703, 21, 182, 306, 821, 18639, 53, 3, 5, 2031, 3, 6, 62, 56, 2497, 8, 11082, 772, 5105, 3, 6, 3, 14622, 135, 28, 119, 15552, 1002, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 18964, 6020, 8308, 6020, 3, 75, 3, 5, 32101, 821, 13, 1002, 7828, 17313, 3, 107, 3, 5, 32101, 3, 5, 32101, 1125, 12256, 1002, 807, 1], "trg": "high performance crawling system;crawling system;real time distributed system;fault tolerance;erlang development kit;high availability;breadth first crawling;dominos process;dominos nodes;targeted crawling;maintaiability and configurability;deep web crawling;web crawler;dominos rpc concurrent;high availability system;dominos distributed database;limiting disk access;document fingerprint;deep web crawling;repetitive crawling;breadth first crawling;random walks and sampling;hierarchical cooperation;url caching;dominos generic server", "tokenized_trg": [306, 821, 18639, 53, 358, 32100, 18639, 53, 358, 32100, 490, 97, 8308, 358, 32100, 7828, 17313, 32100, 3, 49, 4612, 606, 3650, 32100, 306, 5576, 32100, 4109, 189, 166, 18639, 53, 32100, 10138, 32, 7, 433, 32100, 10138, 32, 7, 150, 1395, 32100, 7774, 18639, 53, 32100, 711, 17, 9, 23, 2020, 11, 975, 9178, 2020, 32100, 1659, 765, 18639, 53, 32100, 765, 18639, 49, 32100, 10138, 32, 7, 3, 52, 102, 75, 18964, 32100, 306, 5576, 358, 32100, 10138, 32, 7, 8308, 3501, 32100, 3, 17979, 8987, 592, 32100, 1708, 21759, 32100, 1659, 765, 18639, 53, 32100, 24869, 18639, 53, 32100, 4109, 189, 166, 18639, 53, 32100, 6504, 10681, 11, 17222, 32100, 1382, 7064, 1950, 8494, 32100, 3, 16137, 212, 8509, 32100, 10138, 32, 7, 8165, 2460, 1]}
{"src": "hiperlan <digit> public access interworking with 3g cellular systems . <sep> this paper presents a technical overview of the hiperlan <digit> 3g interworking concept . it does not attempt to provide any business justification or plan for public access operation . after a brief resume of public access operation below , section <digit> then introduces an overview of the technologies concerned . section <digit> describes the system approach and presents the current reference architecture used within the bran standardisation activity . section <digit> then goes on to cover in more detail the primary functions of the system such as authentication , mobility , quality of service ( qos ) and subscription . it is worth noting that since the japanese wlan standard <unk> is very similar to hiperlan <digit> , much of the technical information within this paper is directly applicable to this system , albeit with some minor changes to the authentication scheme . additionally the high level 3g and external network interworking reference architecture is also applicable to ieee <digit> . <digit> . finally , section <digit> briefly introduces the standardisation relationships between etsi bran , wig , 3gpp , ietf , ieee <digit> . <digit> and mmac <unk> .", "tokenized_src": [5436, 49, 1618, 32101, 452, 592, 1413, 9238, 28, 220, 122, 3, 10791, 1002, 3, 5, 32100, 48, 1040, 6621, 3, 9, 2268, 8650, 13, 8, 5436, 49, 1618, 32101, 220, 122, 1413, 9238, 2077, 3, 5, 34, 405, 59, 3332, 12, 370, 136, 268, 131, 2420, 42, 515, 21, 452, 592, 2986, 3, 5, 227, 3, 9, 4456, 4258, 13, 452, 592, 2986, 666, 3, 6, 1375, 32101, 258, 4277, 7, 46, 8650, 13, 8, 2896, 4376, 3, 5, 1375, 32101, 8788, 8, 358, 1295, 11, 6621, 8, 750, 2848, 4648, 261, 441, 8, 3858, 29, 1068, 2121, 1756, 3, 5, 1375, 32101, 258, 1550, 30, 12, 1189, 16, 72, 2736, 8, 2329, 3621, 13, 8, 358, 224, 38, 20188, 3, 6, 12337, 3, 6, 463, 13, 313, 41, 3, 1824, 32, 7, 3, 61, 11, 7644, 3, 5, 34, 19, 1494, 59, 53, 24, 437, 8, 2662, 2837, 15, 7, 15, 3, 210, 1618, 1068, 2, 19, 182, 1126, 12, 5436, 49, 1618, 32101, 3, 6, 231, 13, 8, 2268, 251, 441, 48, 1040, 19, 1461, 5383, 12, 48, 358, 3, 6, 3, 22154, 28, 128, 4012, 1112, 12, 8, 20188, 5336, 3, 5, 11700, 8, 306, 593, 220, 122, 11, 3866, 1229, 1413, 9238, 2848, 4648, 19, 92, 5383, 12, 3, 23, 15, 15, 15, 32101, 3, 5, 32101, 3, 5, 2031, 3, 6, 1375, 32101, 16964, 4277, 7, 8, 1068, 2121, 3079, 344, 3, 15, 17, 7, 23, 3858, 29, 3, 6, 3, 14143, 3, 6, 220, 122, 1572, 3, 6, 3, 23, 15, 17, 89, 3, 6, 3, 23, 15, 15, 15, 32101, 3, 5, 32101, 11, 3, 51, 11101, 2, 3, 5, 1], "trg": "hiperlan <digit>;public access;interworking;3g;bran;etsi;wig", "tokenized_trg": [5436, 49, 1618, 32101, 32100, 452, 592, 32100, 1413, 9238, 32100, 220, 122, 32100, 3858, 29, 32100, 3, 15, 17, 7, 23, 32100, 3, 14143, 1]}
{"src": "2d information displays . <sep> many exploration and manipulation tasks benefit from a coherent integration of multiple views onto complex information spaces . this paper proposes the concept of illustrative shadows for a tight integration of interactive 3d graphics and schematic depictions using the shadow metaphor . the shadow metaphor provides an intuitive visual link between 3d and 2d visualizations integrating the different displays into one combined information display . users interactively explore spatial relations in realistic shaded virtual models while functional correlations and additional textual information are presented on additional projection layers using a semantic network approach . manipulations of one visualization immediately influence the others , resulting in an in <unk> and perceptibly coherent presentation . categories and subject descriptors h . <digit> . <digit> information interface and presentation user interfaces screen design i . <digit> . <digit> artificial intelligence knowledge representation formalisms and methods semantic networks i . <digit> . <digit> computer graphics methodology and techniques interaction techniques general terms design , human factors", "tokenized_src": [204, 26, 251, 8397, 3, 5, 32100, 186, 9740, 11, 18175, 4145, 1656, 45, 3, 9, 28911, 5660, 13, 1317, 2441, 2400, 1561, 251, 4856, 3, 5, 48, 1040, 4230, 7, 8, 2077, 13, 3, 173, 10008, 52, 1528, 8552, 7, 21, 3, 9, 4095, 5660, 13, 6076, 220, 26, 6484, 11, 28810, 9850, 2865, 338, 8, 8552, 21253, 3, 5, 8, 8552, 21253, 795, 46, 12954, 3176, 1309, 344, 220, 26, 11, 204, 26, 21744, 7, 3, 20030, 8, 315, 8397, 139, 80, 3334, 251, 1831, 3, 5, 1105, 6076, 120, 2075, 15208, 5836, 16, 9555, 7891, 26, 4291, 2250, 298, 5014, 18712, 7, 11, 1151, 1499, 3471, 251, 33, 2569, 30, 1151, 13440, 7500, 338, 3, 9, 27632, 1229, 1295, 3, 5, 18175, 7, 13, 80, 21744, 2017, 2860, 8, 717, 3, 6, 3, 5490, 16, 46, 16, 2, 11, 399, 6873, 15596, 28911, 3831, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 3459, 11, 3831, 1139, 3459, 7, 1641, 408, 3, 23, 3, 5, 32101, 3, 5, 32101, 7353, 6123, 1103, 6497, 607, 6835, 7, 11, 2254, 27632, 5275, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 15663, 11, 2097, 6565, 2097, 879, 1353, 408, 3, 6, 936, 2580, 1], "trg": "information visualization;spreading activation", "tokenized_trg": [251, 21744, 32100, 16436, 5817, 257, 1]}
{"src": "impedance coupling in content targeted advertising . <sep> the current boom of the web is associated with the revenues originated from on line advertising . while search based advertising is dominant , the association of ads with a web page ( during user navigation ) is becoming increasingly important . in this work , we study the problem of associating ads with a web page , referred to as content targeted advertising , from a computer science perspective . we assume that we have access to the text of the web page , the keywords declared by an advertiser , and a text associated with the advertiser ' s business . using no other information and operating in fully automatic fashion , we propose ten strategies for solving the problem and evaluate their effectiveness . our methods indicate that a matching strategy that takes into account the semantics of the problem ( referred to as aak for ads and keywords ) can yield gains in average precision figures of <digit> % compared to a trivial vector based strategy . further , a more sophisticated impedance coupling strategy , which expands the text of the web page to reduce vocabulary impedance with regard to an advertisement , can yield extra gains in average precision of <digit> % . these are first results . they suggest that great accuracy in content targeted advertising can be attained with appropriate algorithms . categories and subject descriptors h . <digit> . <digit> information storage and retrieval information search and retrieval i . <digit> . <digit> pattern recognition applications text processing general terms algorithms , experimentation", "tokenized_src": [256, 3138, 663, 4897, 697, 16, 738, 7774, 3662, 3, 5, 32100, 8, 750, 13997, 13, 8, 765, 19, 1968, 28, 8, 14609, 23809, 45, 30, 689, 3662, 3, 5, 298, 960, 3, 390, 3662, 19, 12613, 3, 6, 8, 6028, 13, 6543, 28, 3, 9, 765, 543, 41, 383, 1139, 8789, 3, 61, 19, 2852, 5684, 359, 3, 5, 16, 48, 161, 3, 6, 62, 810, 8, 682, 13, 38, 5444, 1014, 6543, 28, 3, 9, 765, 543, 3, 6, 3, 4822, 12, 38, 738, 7774, 3662, 3, 6, 45, 3, 9, 1218, 2056, 3503, 3, 5, 62, 5344, 24, 62, 43, 592, 12, 8, 1499, 13, 8, 765, 543, 3, 6, 8, 12545, 10126, 57, 46, 17123, 52, 3, 6, 11, 3, 9, 1499, 1968, 28, 8, 17123, 52, 3, 31, 3, 7, 268, 3, 5, 338, 150, 119, 251, 11, 2699, 16, 1540, 6569, 2934, 3, 6, 62, 4230, 3, 324, 3266, 21, 11795, 8, 682, 11, 6825, 70, 9570, 3, 5, 69, 2254, 6360, 24, 3, 9, 8150, 1998, 24, 1217, 139, 905, 8, 27632, 7, 13, 8, 682, 41, 3, 4822, 12, 38, 3, 9, 1639, 21, 6543, 11, 12545, 3, 61, 54, 6339, 11391, 16, 1348, 11723, 5638, 13, 32101, 3, 1454, 3, 2172, 12, 3, 9, 22377, 40, 12938, 3, 390, 1998, 3, 5, 856, 3, 6, 3, 9, 72, 8732, 256, 3138, 663, 4897, 697, 1998, 3, 6, 84, 4405, 7, 8, 1499, 13, 8, 765, 543, 12, 1428, 19067, 256, 3138, 663, 28, 3553, 12, 46, 21592, 3, 6, 54, 6339, 996, 11391, 16, 1348, 11723, 13, 32101, 3, 1454, 3, 5, 175, 33, 166, 772, 3, 5, 79, 3130, 24, 248, 7452, 16, 738, 7774, 3662, 54, 36, 44, 10733, 28, 2016, 16783, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 3, 23, 3, 5, 32101, 3, 5, 32101, 3275, 5786, 1564, 1499, 3026, 879, 1353, 16783, 3, 6, 5016, 257, 1], "trg": "impedance coupling;content targeted advertising;advertisements;advertising;web;matching;knn;triggering page;bayesian networks", "tokenized_trg": [256, 3138, 663, 4897, 697, 32100, 738, 7774, 3662, 32100, 20356, 32100, 3662, 32100, 765, 32100, 8150, 32100, 3, 157, 29, 29, 32100, 3, 31783, 543, 32100, 10210, 15, 10488, 5275, 1]}
{"src": "implementing the it fundamentals knowledge area . <sep> the recently promulgated it model curriculum contains it fundamentals as one of its knowledge areas . it is intended to give students a broad understanding of ( <digit> ) the it profession and the skills that students must develop to become successful it professionals and ( <digit> ) the academic discipline of it and its relationship to other disciplines . as currently defined , the it fundamentals knowledge area requires <digit> lecture hours to complete . the model curriculum recommends that the material relevant to the it fundamentals knowledge area be offered early in the curriculum , for example in an introduction to it course however , many institutions will have to include additional material in an introductory it course . for example , the introduction of it course at georgia southern university is used to introduce students to the available second disciplines ( an important part of the georgia southern it curriculum aimed at providing students with in depth knowledge of an it application domain ) , some productivity tools , and sql . for many programs there may be too much material in an introductory it course . this paper describes how georgia southern university resolved this dilemma . categories and subject descriptors k . <digit> . <digit> computer and information science education curriculum general terms human factors", "tokenized_src": [3, 10311, 8, 34, 4431, 7, 1103, 616, 3, 5, 32100, 8, 1310, 15207, 83, 5339, 26, 34, 825, 7850, 2579, 34, 4431, 7, 38, 80, 13, 165, 1103, 844, 3, 5, 34, 19, 3855, 12, 428, 481, 3, 9, 4358, 1705, 13, 41, 32101, 3, 61, 8, 34, 6945, 11, 8, 1098, 24, 481, 398, 1344, 12, 582, 1574, 34, 2481, 11, 41, 32101, 3, 61, 8, 2705, 7998, 13, 34, 11, 165, 1675, 12, 119, 15015, 3, 5, 38, 1083, 4802, 3, 6, 8, 34, 4431, 7, 1103, 616, 2311, 32101, 7177, 716, 12, 743, 3, 5, 8, 825, 7850, 1568, 7, 24, 8, 1037, 2193, 12, 8, 34, 4431, 7, 1103, 616, 36, 1860, 778, 16, 8, 7850, 3, 6, 21, 677, 16, 46, 5302, 12, 34, 503, 983, 3, 6, 186, 4222, 56, 43, 12, 560, 1151, 1037, 16, 46, 3, 23594, 34, 503, 3, 5, 21, 677, 3, 6, 8, 5302, 13, 34, 503, 44, 873, 1677, 23, 9, 7518, 3819, 19, 261, 12, 4277, 481, 12, 8, 347, 511, 15015, 41, 46, 359, 294, 13, 8, 873, 1677, 23, 9, 7518, 34, 7850, 3, 8287, 44, 1260, 481, 28, 16, 4963, 1103, 13, 46, 34, 917, 3303, 3, 61, 3, 6, 128, 7596, 1339, 3, 6, 11, 11820, 40, 3, 5, 21, 186, 1356, 132, 164, 36, 396, 231, 1037, 16, 46, 3, 23594, 34, 503, 3, 5, 48, 1040, 8788, 149, 873, 1677, 23, 9, 7518, 3819, 13803, 48, 23760, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 157, 3, 5, 32101, 3, 5, 32101, 1218, 11, 251, 2056, 1073, 7850, 879, 1353, 936, 2580, 1], "trg": "it fundamentals knowledge area;it model curriculum", "tokenized_trg": [34, 4431, 7, 1103, 616, 32100, 34, 825, 7850, 1]}
{"src": "implicit user modeling for personalized search . <sep> information retrieval systems ( e . g . , web search engines ) are critical for overcoming information overload . a major deficiency of existing retrieval systems is that they generally lack user modeling and are not adaptive to individual users , resulting in inherently non optimal retrieval performance . for example , a tourist and a programmer may use the same word java to search for different information , but the current search systems would return the same results . in this paper , we study how to infer a user ' s interest from the user ' s search context and use the inferred implicit user model for personalized search . we present a decision theoretic framework and develop techniques for implicit user modeling in information retrieval . we develop an intelligent client side web search agent ( ucair ) that can perform eager implicit feedback , e . g . , query expansion based on previous queries and immediate result reranking based on clickthrough information . experiments on web search show that our search agent can improve search accuracy over the popular google search engine . categories and subject descriptors h . <digit> . <digit> information search and retrieval retrieval models , relevance feedback , search process general terms algorithms", "tokenized_src": [21773, 1139, 15309, 21, 9354, 960, 3, 5, 32100, 251, 24515, 138, 1002, 41, 3, 15, 3, 5, 3, 122, 3, 5, 3, 6, 765, 960, 7277, 3, 61, 33, 2404, 21, 3, 29297, 251, 26343, 3, 5, 3, 9, 779, 20, 4638, 23, 4392, 13, 1895, 24515, 138, 1002, 19, 24, 79, 2389, 2136, 1139, 15309, 11, 33, 59, 25326, 12, 928, 1105, 3, 6, 3, 5490, 16, 16, 29112, 529, 6624, 24515, 138, 821, 3, 5, 21, 677, 3, 6, 3, 9, 8548, 11, 3, 9, 2486, 52, 164, 169, 8, 337, 1448, 3, 27578, 12, 960, 21, 315, 251, 3, 6, 68, 8, 750, 960, 1002, 133, 1205, 8, 337, 772, 3, 5, 16, 48, 1040, 3, 6, 62, 810, 149, 12, 16, 1010, 3, 9, 1139, 3, 31, 3, 7, 1046, 45, 8, 1139, 3, 31, 3, 7, 960, 2625, 11, 169, 8, 16, 1010, 1271, 21773, 1139, 825, 21, 9354, 960, 3, 5, 62, 915, 3, 9, 1357, 8, 127, 7578, 4732, 11, 1344, 2097, 21, 21773, 1139, 15309, 16, 251, 24515, 138, 3, 5, 62, 1344, 46, 7951, 1188, 596, 765, 960, 3102, 41, 3, 76, 75, 2256, 3, 61, 24, 54, 1912, 10876, 21773, 3160, 3, 6, 3, 15, 3, 5, 3, 122, 3, 5, 3, 6, 11417, 5919, 3, 390, 30, 1767, 13154, 11, 5299, 741, 3, 60, 6254, 53, 3, 390, 30, 1214, 11258, 251, 3, 5, 12341, 30, 765, 960, 504, 24, 69, 960, 3102, 54, 1172, 960, 7452, 147, 8, 1012, 10283, 960, 1948, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 960, 11, 24515, 138, 24515, 138, 2250, 3, 6, 20208, 3160, 3, 6, 960, 433, 879, 1353, 16783, 1], "trg": "user modelling;user model;personalized search;information retrieval systems;ucair;implicit feedback;clickthrough information;interactive retrieval;retrieval accuracy", "tokenized_trg": [1139, 24716, 32100, 1139, 825, 32100, 9354, 960, 32100, 251, 24515, 138, 1002, 32100, 3, 76, 75, 2256, 32100, 21773, 3160, 32100, 1214, 11258, 251, 32100, 6076, 24515, 138, 32100, 24515, 138, 7452, 1]}
{"src": "improvements of tlaesa nearest neighbour search algorithm and extension to approximation search . <sep> nearest neighbour ( nn ) searches and k nearest neighbour ( k nn ) searches are widely used in pattern recognition and image retrieval . an nn ( k nn ) search finds the closest object ( closest k objects ) to a query object . although the definition of the distance between objects depends on applications , its computation is generally complicated and time consuming . it is therefore important to reduce the number of distance computations . tlaesa ( tree linear approximating and eliminating search algorithm ) is one of the fastest algorithms for nn searches . this method reduces distance computations by using a branch and bound algorithm . in this paper we improve both the data structure and the search algorithm of tlaesa . the proposed method greatly reduces the number of distance computations . moreover , we extend the improved method to an approximation search algorithm which ensures the quality of solutions . experimental results show that the proposed method is efficient and finds an approximate solution with a very low error rate .", "tokenized_src": [6867, 13, 3, 17, 521, 15, 7, 9, 13012, 14245, 960, 12628, 11, 4924, 12, 1120, 12907, 603, 257, 960, 3, 5, 32100, 13012, 14245, 41, 3, 29, 29, 3, 61, 14397, 11, 3, 157, 13012, 14245, 41, 3, 157, 3, 29, 29, 3, 61, 14397, 33, 5456, 261, 16, 3275, 5786, 11, 1023, 24515, 138, 3, 5, 46, 3, 29, 29, 41, 3, 157, 3, 29, 29, 3, 61, 960, 12902, 8, 12257, 3735, 41, 12257, 3, 157, 4820, 3, 61, 12, 3, 9, 11417, 3735, 3, 5, 2199, 8, 4903, 13, 8, 2357, 344, 4820, 5619, 30, 1564, 3, 6, 165, 29761, 19, 2389, 6446, 11, 97, 3, 10862, 3, 5, 34, 19, 2459, 359, 12, 1428, 8, 381, 13, 2357, 29761, 7, 3, 5, 3, 17, 521, 15, 7, 9, 41, 2195, 13080, 1120, 12907, 603, 1014, 11, 17323, 960, 12628, 3, 61, 19, 80, 13, 8, 10391, 16783, 21, 3, 29, 29, 14397, 3, 5, 48, 1573, 1428, 7, 2357, 29761, 7, 57, 338, 3, 9, 6421, 11, 8120, 12628, 3, 5, 16, 48, 1040, 62, 1172, 321, 8, 331, 1809, 11, 8, 960, 12628, 13, 3, 17, 521, 15, 7, 9, 3, 5, 8, 4382, 1573, 6891, 1428, 7, 8, 381, 13, 2357, 29761, 7, 3, 5, 72, 1890, 3, 6, 62, 4285, 8, 3798, 1573, 12, 46, 1120, 12907, 603, 257, 960, 12628, 84, 766, 7, 8, 463, 13, 1275, 3, 5, 11082, 772, 504, 24, 8, 4382, 1573, 19, 2918, 11, 12902, 46, 24672, 1127, 28, 3, 9, 182, 731, 3505, 1080, 3, 5, 1], "trg": "tlaesa;nearest neighbour search;approximation search;distance computaion;k nearest neighbour search", "tokenized_trg": [3, 17, 521, 15, 7, 9, 32100, 13012, 14245, 960, 32100, 1120, 12907, 603, 257, 960, 32100, 2357, 3, 287, 2562, 9, 23, 106, 32100, 3, 157, 13012, 14245, 960, 1]}
{"src": "improving the static analysis of embedded languages via partial evaluation . <sep> programs in embedded languages contain invariants that are not automatically detected or enforced by their host language . we show how to use macros to easily implement partial evaluation of embedded interpreters in order to capture invariants encoded in embedded programs and render them explicit in the terms of their host language . we demonstrate the effectiveness of this technique in improving the results of a value flow analysis . categories and subject descriptors d . <digit> . <digit> software engineering testing and debugging debugging aids d . <digit> . <digit> programming languages language constructs and features macros d . <digit> . <digit> programming languages processors code generation , debuggers , interpreters general terms reliability , languages", "tokenized_src": [4863, 8, 14491, 1693, 13, 13612, 8024, 1009, 11807, 5002, 3, 5, 32100, 1356, 16, 13612, 8024, 3480, 16, 9504, 2366, 24, 33, 59, 3269, 14619, 42, 13321, 26, 57, 70, 2290, 1612, 3, 5, 62, 504, 149, 12, 169, 11663, 7, 12, 1153, 4028, 11807, 5002, 13, 13612, 7280, 277, 16, 455, 12, 4105, 16, 9504, 2366, 23734, 26, 16, 13612, 1356, 11, 16061, 135, 17623, 16, 8, 1353, 13, 70, 2290, 1612, 3, 5, 62, 5970, 8, 9570, 13, 48, 3317, 16, 4863, 8, 772, 13, 3, 9, 701, 2537, 1693, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 889, 3867, 2505, 11, 20, 14588, 3896, 20, 14588, 3896, 3052, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 6020, 8024, 1612, 6774, 7, 11, 753, 11663, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 6020, 8024, 7502, 7, 1081, 3381, 3, 6, 20, 3007, 6938, 7, 3, 6, 7280, 277, 879, 1353, 10581, 3, 6, 8024, 1], "trg": "embedded language;embedded languages;partial evaluation;partial evaluation;macros;interpreter;value flow analysis;flow analysis;set based analysis;regular expression;scheme", "tokenized_trg": [13612, 1612, 32100, 13612, 8024, 32100, 11807, 5002, 32100, 11807, 5002, 32100, 11663, 7, 32100, 7280, 49, 32100, 701, 2537, 1693, 32100, 2537, 1693, 32100, 356, 3, 390, 1693, 32100, 1646, 3893, 32100, 5336, 1]}
{"src": "incspan incremental mining of sequential patterns in large database . <sep> many real life sequence databases grow incrementally . it is undesirable to mine sequential patterns from scratch each time when a small set of sequences grow , or when some new sequences are added into the database . incremental algorithm should be developed for sequential pattern mining so that mining can be adapted to incremental database updates . however , it is nontrivial to mine sequential patterns incrementally , especially when the existing sequences grow incrementally because such growth may lead to the generation of many new patterns due to the interactions of the growing subsequences with the original ones . in this study , we develop an efficient algorithm , incspan , for incremental mining of sequential patterns , by exploring some interesting properties . our performance study shows that incspan outperforms some previously proposed incremental algorithms as well as a non incremental one with a wide margin . categories and subject descriptors h . <digit> . <digit> database management database applications data mining general terms algorithms , performance , experimentation", "tokenized_src": [16, 75, 7, 2837, 28351, 5558, 13, 29372, 4264, 16, 508, 3501, 3, 5, 32100, 186, 490, 280, 5932, 16961, 1604, 28351, 120, 3, 5, 34, 19, 30995, 12, 2000, 29372, 4264, 45, 8629, 284, 97, 116, 3, 9, 422, 356, 13, 5932, 7, 1604, 3, 6, 42, 116, 128, 126, 5932, 7, 33, 974, 139, 8, 3501, 3, 5, 28351, 12628, 225, 36, 1597, 21, 29372, 3275, 5558, 78, 24, 5558, 54, 36, 3, 13842, 12, 28351, 3501, 3864, 3, 5, 983, 3, 6, 34, 19, 529, 1788, 5907, 40, 12, 2000, 29372, 4264, 28351, 120, 3, 6, 902, 116, 8, 1895, 5932, 7, 1604, 28351, 120, 250, 224, 1170, 164, 991, 12, 8, 3381, 13, 186, 126, 4264, 788, 12, 8, 9944, 13, 8, 1710, 769, 7, 15, 835, 3772, 7, 28, 8, 926, 2102, 3, 5, 16, 48, 810, 3, 6, 62, 1344, 46, 2918, 12628, 3, 6, 16, 75, 7, 2837, 3, 6, 21, 28351, 5558, 13, 29372, 4264, 3, 6, 57, 6990, 128, 1477, 2605, 3, 5, 69, 821, 810, 1267, 24, 16, 75, 7, 2837, 91, 883, 2032, 7, 128, 3150, 4382, 28351, 16783, 38, 168, 38, 3, 9, 529, 28351, 80, 28, 3, 9, 1148, 6346, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 3501, 1564, 331, 5558, 879, 1353, 16783, 3, 6, 821, 3, 6, 5016, 257, 1], "trg": "incremental mining;sequential pattern;sequence database;database updates;reverse pattern matching;frequent itemsets;optimization;shared projection;buffering patterns;buffering pattern", "tokenized_trg": [28351, 5558, 32100, 29372, 3275, 32100, 5932, 3501, 32100, 3501, 3864, 32100, 7211, 3275, 8150, 32100, 8325, 1173, 15, 17, 7, 32100, 11295, 32100, 2471, 13440, 32100, 17164, 53, 4264, 32100, 17164, 53, 3275, 1]}
{"src": "index structures and algorithms for querying distributed rdf repositories . <sep> a technical infrastructure for storing , querying and managing rdf data is a key element in the current semantic web development . systems like jena , sesame or the ics forth rdf suite are widely used for building semantic web applications . currently , none of these systems supports the integrated querying of distributed rdf repositories . we consider this a major shortcoming since the semantic web is distributed by nature . in this paper we present an architecture for querying distributed rdf repositories by extending the existing sesame system . we discuss the implications of our architecture and propose an index structure as well as algorithms for query processing and optimization in such a distributed context . categories and subject descriptors e . <digit> data data structures distributed data structures h . <digit> . <digit> information systems database management sys tems distributed databases , query processing general terms algorithms , performance , design motivation the need for handling multiple sources of knowledge and information is quite obvious in the context of semantic web applications . first of all we have the duality of schema and information content where multiple information sources can adhere to the same schema . further , the re use , extension and combination of multiple schema files is considered to be common practice on the semantic web <digit> . despite the inherently distributed nature of the semantic web , most current rdf infrastructures ( for example <digit> ) store information locally as a single knowledge repository , i . e . , rdf models from remote sources are replicated locally and merged into a single model . distribution is virtually retained through the use of namespaces to distinguish between different models . we argue that many interesting applications on the semantic web would benefit from or even require an rdf infrastructure that supports real distribution of information sources that can be accessed from a single point . beyond the argument of conceptual adequacy , there are a number of technical reasons for real distribution in the spirit of distributed databases freshness the commonly used approach of using a local copy of a remote source suffers from the problem of changing information . directly using the remote source frees us from the need of managing change as we are always working with the original . flexibility keeping different sources separate from each other provides us with a greater flexibility concerning the addition and removal of sources . in the distributed setting , we only have to adjust the corresponding system parameters . in many cases , it will even be unavoidable to adopt a distributed architecture , for example in scenarios in which the data is not owned by the person querying it . in this case , it will often not be permitted to copy the data . more and more information providers , however , create interfaces that can be used to query the information . the same holds for cases where the information sources are too large to just create a single model containing all the information , but they still can be queried using a special interface ( musicbrainz is an example of this case ) . further , we might want to include sources that are not available in rdf , but that can be wrapped to produce query results in rdf format . a typical example is the use of a free text index as one source of information . sometimes there is not even a fixed model that could be stored in rdf , because the result of a query is only calculated at runtime ( google , for instance , provides a programming interface that could be wrapped into an rdf source ) . in all these scenarios , we are forced to access external information sources from an rdf infrastructure without being able to create a local copy of the information we want to query . on the semantic web , we almost always want to combine such external sources with each other and with additional schema knowledge . this confirms the need to consider an rdf infrastructure that deals with information sources that are actually distributed across different locations . in this paper , we address the problem of integrated access to distributed rdf repositories from a practical point of view . in particular , starting from a real life use case where we are considering a number of distributed sources that contain research results in the form of publications , we take the existing rdf storage and retrieval system sesame and describe how the architecture and the query processing methods of the system have to be extended in order to move to a distributed setting . the paper is structured as follows . in section <digit> we present an extension of the sesame architecture to multiple , distributed repositories and discuss basic assumptions and implications of the architecture . section <digit> presents source index hierarchies as suitable mechanisms to support the localization of relevant data during query processing . in section <digit> we introduce a cost model for processing queries in the distributed architecture , and show its use in optimizing query execution as a basis for the two phase optimization heuristics for join ordering . section <digit> reviews previous work on index structures for object oriented data bases . it also summarizes related work on query optimization particularly focusing on the join ordering problem . we conclude with a discussion of open problems and future work .", "tokenized_src": [5538, 5278, 11, 16783, 21, 11417, 53, 8308, 3, 52, 26, 89, 14173, 15467, 15, 7, 3, 5, 32100, 3, 9, 2268, 3620, 21, 3, 17445, 3, 6, 11417, 53, 11, 5037, 3, 52, 26, 89, 331, 19, 3, 9, 843, 3282, 16, 8, 750, 27632, 765, 606, 3, 5, 1002, 114, 528, 29, 9, 3, 6, 1394, 265, 15, 42, 8, 3, 447, 7, 7444, 3, 52, 26, 89, 3132, 33, 5456, 261, 21, 740, 27632, 765, 1564, 3, 5, 1083, 3, 6, 5839, 13, 175, 1002, 4951, 8, 4580, 11417, 53, 13, 8308, 3, 52, 26, 89, 14173, 15467, 15, 7, 3, 5, 62, 1099, 48, 3, 9, 779, 710, 10622, 437, 8, 27632, 765, 19, 8308, 57, 1405, 3, 5, 16, 48, 1040, 62, 915, 46, 4648, 21, 11417, 53, 8308, 3, 52, 26, 89, 14173, 15467, 15, 7, 57, 3, 16878, 8, 1895, 1394, 265, 15, 358, 3, 5, 62, 2497, 8, 12418, 13, 69, 4648, 11, 4230, 46, 5538, 1809, 38, 168, 38, 16783, 21, 11417, 3026, 11, 11295, 16, 224, 3, 9, 8308, 2625, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 15, 3, 5, 32101, 331, 331, 5278, 8308, 331, 5278, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1002, 3501, 758, 3, 7, 63, 7, 3, 3524, 7, 8308, 16961, 3, 6, 11417, 3026, 879, 1353, 16783, 3, 6, 821, 3, 6, 408, 6620, 8, 174, 21, 5834, 1317, 2836, 13, 1103, 11, 251, 19, 882, 4813, 16, 8, 2625, 13, 27632, 765, 1564, 3, 5, 166, 13, 66, 62, 43, 8, 146, 10355, 13, 26622, 11, 251, 738, 213, 1317, 251, 2836, 54, 13859, 12, 8, 337, 26622, 3, 5, 856, 3, 6, 8, 3, 60, 169, 3, 6, 4924, 11, 2711, 13, 1317, 26622, 2073, 19, 1702, 12, 36, 1017, 1032, 30, 8, 27632, 765, 32101, 3, 5, 3, 3565, 8, 16, 29112, 8308, 1405, 13, 8, 27632, 765, 3, 6, 167, 750, 3, 52, 26, 89, 3620, 7, 41, 21, 677, 32101, 3, 61, 1078, 251, 8428, 38, 3, 9, 712, 1103, 22109, 3, 6, 3, 23, 3, 5, 3, 15, 3, 5, 3, 6, 3, 52, 26, 89, 2250, 45, 4322, 2836, 33, 18526, 26, 8428, 11, 3, 21726, 139, 3, 9, 712, 825, 3, 5, 3438, 19, 9114, 19346, 190, 8, 169, 13, 564, 6633, 7, 12, 15849, 344, 315, 2250, 3, 5, 62, 9409, 24, 186, 1477, 1564, 30, 8, 27632, 765, 133, 1656, 45, 42, 237, 1457, 46, 3, 52, 26, 89, 3620, 24, 4951, 490, 3438, 13, 251, 2836, 24, 54, 36, 3, 11282, 45, 3, 9, 712, 500, 3, 5, 1909, 8, 5464, 13, 17428, 3, 9, 221, 2436, 4710, 3, 6, 132, 33, 3, 9, 381, 13, 2268, 2081, 21, 490, 3438, 16, 8, 3564, 13, 8308, 16961, 1434, 655, 8, 5871, 261, 1295, 13, 338, 3, 9, 415, 2405, 13, 3, 9, 4322, 1391, 5696, 7, 45, 8, 682, 13, 2839, 251, 3, 5, 1461, 338, 8, 4322, 1391, 339, 7, 178, 45, 8, 174, 13, 5037, 483, 38, 62, 33, 373, 464, 28, 8, 926, 3, 5, 6461, 2627, 315, 2836, 2450, 45, 284, 119, 795, 178, 28, 3, 9, 2123, 6461, 6238, 8, 811, 11, 4614, 13, 2836, 3, 5, 16, 8, 8308, 1898, 3, 6, 62, 163, 43, 12, 6142, 8, 3, 9921, 358, 8755, 3, 5, 16, 186, 1488, 3, 6, 34, 56, 237, 36, 73, 9, 12186, 179, 12, 4693, 3, 9, 8308, 4648, 3, 6, 21, 677, 16, 13911, 16, 84, 8, 331, 19, 59, 4157, 57, 8, 568, 11417, 53, 34, 3, 5, 16, 48, 495, 3, 6, 34, 56, 557, 59, 36, 10548, 12, 2405, 8, 331, 3, 5, 72, 11, 72, 251, 3580, 3, 6, 983, 3, 6, 482, 3459, 7, 24, 54, 36, 261, 12, 11417, 8, 251, 3, 5, 8, 337, 4532, 21, 1488, 213, 8, 251, 2836, 33, 396, 508, 12, 131, 482, 3, 9, 712, 825, 3, 6443, 66, 8, 251, 3, 6, 68, 79, 341, 54, 36, 238, 9889, 338, 3, 9, 534, 3459, 41, 723, 1939, 77, 172, 19, 46, 677, 13, 48, 495, 3, 61, 3, 5, 856, 3, 6, 62, 429, 241, 12, 560, 2836, 24, 33, 59, 347, 16, 3, 52, 26, 89, 3, 6, 68, 24, 54, 36, 11972, 12, 1759, 11417, 772, 16, 3, 52, 26, 89, 1910, 3, 5, 3, 9, 4541, 677, 19, 8, 169, 13, 3, 9, 339, 1499, 5538, 38, 80, 1391, 13, 251, 3, 5, 1664, 132, 19, 59, 237, 3, 9, 3599, 825, 24, 228, 36, 5816, 16, 3, 52, 26, 89, 3, 6, 250, 8, 741, 13, 3, 9, 11417, 19, 163, 11338, 44, 661, 715, 41, 10283, 3, 6, 21, 3421, 3, 6, 795, 3, 9, 6020, 3459, 24, 228, 36, 11972, 139, 46, 3, 52, 26, 89, 1391, 3, 61, 3, 5, 16, 66, 175, 13911, 3, 6, 62, 33, 5241, 12, 592, 3866, 251, 2836, 45, 46, 3, 52, 26, 89, 3620, 406, 271, 3, 179, 12, 482, 3, 9, 415, 2405, 13, 8, 251, 62, 241, 12, 11417, 3, 5, 30, 8, 27632, 765, 3, 6, 62, 966, 373, 241, 12, 5148, 224, 3866, 2836, 28, 284, 119, 11, 28, 1151, 26622, 1103, 3, 5, 48, 3606, 7, 8, 174, 12, 1099, 46, 3, 52, 26, 89, 3620, 24, 3694, 28, 251, 2836, 24, 33, 700, 8308, 640, 315, 3248, 3, 5, 16, 48, 1040, 3, 6, 62, 1115, 8, 682, 13, 4580, 592, 12, 8308, 3, 52, 26, 89, 14173, 15467, 15, 7, 45, 3, 9, 3236, 500, 13, 903, 3, 5, 16, 1090, 3, 6, 1684, 45, 3, 9, 490, 280, 169, 495, 213, 62, 33, 4014, 3, 9, 381, 13, 8308, 2836, 24, 3480, 585, 772, 16, 8, 607, 13, 10142, 3, 6, 62, 240, 8, 1895, 3, 52, 26, 89, 1606, 11, 24515, 138, 358, 1394, 265, 15, 11, 5530, 149, 8, 4648, 11, 8, 11417, 3026, 2254, 13, 8, 358, 43, 12, 36, 4760, 16, 455, 12, 888, 12, 3, 9, 8308, 1898, 3, 5, 8, 1040, 19, 14039, 38, 6963, 3, 5, 16, 1375, 32101, 62, 915, 46, 4924, 13, 8, 1394, 265, 15, 4648, 12, 1317, 3, 6, 8308, 14173, 15467, 15, 7, 11, 2497, 1857, 20298, 11, 12418, 13, 8, 4648, 3, 5, 1375, 32101, 6621, 1391, 5538, 1382, 7064, 725, 38, 3255, 12009, 12, 380, 8, 415, 1707, 13, 2193, 331, 383, 11417, 3026, 3, 5, 16, 1375, 32101, 62, 4277, 3, 9, 583, 825, 21, 3026, 13154, 16, 8, 8308, 4648, 3, 6, 11, 504, 165, 169, 16, 19769, 53, 11417, 9328, 38, 3, 9, 1873, 21, 8, 192, 3944, 11295, 3, 88, 450, 3040, 7, 21, 1715, 12320, 3, 5, 1375, 32101, 2456, 1767, 161, 30, 5538, 5278, 21, 3735, 3, 9442, 331, 14701, 3, 5, 34, 92, 21603, 7, 1341, 161, 30, 11417, 11295, 1989, 3, 7388, 30, 8, 1715, 12320, 682, 3, 5, 62, 12692, 28, 3, 9, 3071, 13, 539, 982, 11, 647, 161, 3, 5, 1], "trg": "index structures;index structure;rdf;repositories;infrastructure;semantic web;optimization;distributed architecture;external sources;query optimization;join ordering problem;rdf querying", "tokenized_trg": [5538, 5278, 32100, 5538, 1809, 32100, 3, 52, 26, 89, 32100, 14173, 15467, 15, 7, 32100, 3620, 32100, 27632, 765, 32100, 11295, 32100, 8308, 4648, 32100, 3866, 2836, 32100, 11417, 11295, 32100, 1715, 12320, 682, 32100, 3, 52, 26, 89, 11417, 53, 1]}
{"src": "a functional correspondence between evaluators and abstract machines . <sep> we bridge the gap between functional evaluators and abstract machines for the calculus , using closure conversion , transformation into continuation passing style , and defunctionalization . we illustrate this approach by deriving krivine ' s abstract machine from an ordinary call by name evaluator and by deriving an ordinary call by value evaluator from felleisen et al . ' s cek machine . the first derivation is strikingly simpler than what can be found in the literature . the second one is new . together , they show that krivine ' s abstract machine and the cek machine correspond to the call by name and call by value facets of an ordinary evaluator for the calculus . we then reveal the denotational content of hannan and miller ' s cls machine and of landin ' s secd machine . we formally compare the corresponding evaluators and we illustrate some degrees of freedom in the design spaces of evaluators and of abstract machines for the calculus with computational effects . finally , we consider the categorical abstract machine and the extent to which it is more of a virtual machine than an abstract machine categories and subject descriptors d . <digit> . <digit> software programming techniques applicative ( functional ) programming d . <digit> . <digit> programming languages proces sors interpreters general terms design , languages .", "tokenized_src": [3, 9, 5014, 17215, 344, 3, 15, 7480, 6230, 11, 9838, 4096, 3, 5, 32100, 62, 4716, 8, 6813, 344, 5014, 3, 15, 7480, 6230, 11, 9838, 4096, 21, 8, 7779, 302, 3, 6, 338, 12493, 6113, 3, 6, 6586, 139, 25192, 5792, 869, 3, 6, 11, 20, 21601, 1707, 3, 5, 62, 11485, 48, 1295, 57, 20, 5927, 53, 3, 10648, 8402, 3, 31, 3, 7, 9838, 1437, 45, 46, 9495, 580, 57, 564, 3, 15, 7480, 1016, 11, 57, 20, 5927, 53, 46, 9495, 580, 57, 701, 3, 15, 7480, 1016, 45, 4728, 15, 159, 35, 3, 15, 17, 491, 3, 5, 3, 31, 3, 7, 197, 157, 1437, 3, 5, 8, 166, 20, 5927, 257, 19, 11214, 120, 15673, 145, 125, 54, 36, 435, 16, 8, 6678, 3, 5, 8, 511, 80, 19, 126, 3, 5, 544, 3, 6, 79, 504, 24, 3, 10648, 8402, 3, 31, 3, 7, 9838, 1437, 11, 8, 197, 157, 1437, 10423, 12, 8, 580, 57, 564, 11, 580, 57, 701, 3, 27841, 13, 46, 9495, 3, 15, 7480, 1016, 21, 8, 7779, 302, 3, 5, 62, 258, 6731, 8, 20, 2264, 257, 138, 738, 13, 3, 2618, 29, 152, 11, 3293, 49, 3, 31, 3, 7, 3, 75, 40, 7, 1437, 11, 13, 1322, 77, 3, 31, 3, 7, 4220, 26, 1437, 3, 5, 62, 3, 19448, 4048, 8, 3, 9921, 3, 15, 7480, 6230, 11, 62, 11485, 128, 4526, 13, 4333, 16, 8, 408, 4856, 13, 3, 15, 7480, 6230, 11, 13, 9838, 4096, 21, 8, 7779, 302, 28, 25850, 1951, 3, 5, 2031, 3, 6, 62, 1099, 8, 9624, 11498, 1489, 9838, 1437, 11, 8, 5996, 12, 84, 34, 19, 72, 13, 3, 9, 4291, 1437, 145, 46, 9838, 1437, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 889, 6020, 2097, 1120, 2176, 1528, 41, 5014, 3, 61, 6020, 3, 26, 3, 5, 32101, 3, 5, 32101, 6020, 8024, 6345, 78, 52, 7, 7280, 277, 879, 1353, 408, 3, 6, 8024, 3, 5, 1], "trg": "evaluator;abstract machines;abstract machine;closure conversion;transformation into continuation passing style;defunctionalization;call by name;call by value;interpreters", "tokenized_trg": [3, 15, 7480, 1016, 32100, 9838, 4096, 32100, 9838, 1437, 32100, 12493, 6113, 32100, 6586, 139, 25192, 5792, 869, 32100, 20, 21601, 1707, 32100, 580, 57, 564, 32100, 580, 57, 701, 32100, 7280, 277, 1]}
{"src": "indexing multi dimensional time series with support for multiple distance measures . <sep> although most time series data mining research has concentrated on providing solutions for a single distance function , in this work we motivate the need for a single index structure that can support multiple distance measures . our specific area of interest is the efficient retrieval and analysis of trajectory similarities . trajectory datasets are very common in environmental applications , mobility experiments , video surveillance and are especially important for the discovery of certain biological patterns . our primary similarity measure is based on the longest common subsequence ( lcss ) model , that offers enhanced robustness , particularly for noisy data , which are encountered very often in real world applications . however , our index is able to accommodate other distance measures as well , including the ubiquitous euclidean distance , and the increasingly popular dynamic time warping ( dtw ) . while other researchers have advocated one or other of these similarity measures , a major contribution of our work is the ability to support all these measures without the need to restructure the index . our framework guarantees no false dismissals and can also be tailored to provide much faster response time at the expense of slightly reduced precision recall . the experimental results demonstrate that our index can help speed up the computation of expensive similarity measures such as the lcss and the dtw . categories and subject descriptors h . <digit> . <digit> database management database applications , data mining", "tokenized_src": [5538, 53, 1249, 3, 11619, 97, 939, 28, 380, 21, 1317, 2357, 3629, 3, 5, 32100, 2199, 167, 97, 939, 331, 5558, 585, 65, 18054, 30, 1260, 1275, 21, 3, 9, 712, 2357, 1681, 3, 6, 16, 48, 161, 62, 18198, 8, 174, 21, 3, 9, 712, 5538, 1809, 24, 54, 380, 1317, 2357, 3629, 3, 5, 69, 806, 616, 13, 1046, 19, 8, 2918, 24515, 138, 11, 1693, 13, 29912, 25758, 3, 5, 29912, 17953, 7, 33, 182, 1017, 16, 3262, 1564, 3, 6, 12337, 12341, 3, 6, 671, 12305, 11, 33, 902, 359, 21, 8, 9087, 13, 824, 11432, 4264, 3, 5, 69, 2329, 1126, 485, 3613, 19, 3, 390, 30, 8, 14783, 1017, 769, 7, 15, 835, 3772, 41, 3, 40, 75, 7, 7, 3, 61, 825, 3, 6, 24, 704, 8358, 6268, 655, 3, 6, 1989, 21, 26847, 331, 3, 6, 84, 33, 15110, 182, 557, 16, 490, 296, 1564, 3, 5, 983, 3, 6, 69, 5538, 19, 3, 179, 12, 6563, 119, 2357, 3629, 38, 168, 3, 6, 379, 8, 29840, 3, 15, 76, 14758, 221, 152, 2357, 3, 6, 11, 8, 5684, 1012, 4896, 97, 615, 2462, 41, 3, 26, 17, 210, 3, 61, 3, 5, 298, 119, 4768, 43, 11223, 26, 80, 42, 119, 13, 175, 1126, 485, 3629, 3, 6, 3, 9, 779, 6275, 13, 69, 161, 19, 8, 1418, 12, 380, 66, 175, 3629, 406, 8, 174, 12, 3, 60, 16180, 8, 5538, 3, 5, 69, 4732, 16935, 150, 6136, 16708, 5405, 11, 54, 92, 36, 11051, 12, 370, 231, 3627, 1773, 97, 44, 8, 8225, 13, 3300, 3915, 11723, 7881, 3, 5, 8, 11082, 772, 5970, 24, 69, 5538, 54, 199, 1634, 95, 8, 29761, 13, 2881, 1126, 485, 3629, 224, 38, 8, 3, 40, 75, 7, 7, 11, 8, 3, 26, 17, 210, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 3501, 1564, 3, 6, 331, 5558, 1], "trg": "indexing;measure;distance function;trajectory;trajectories;similarity;longest common subsequence;longest common subsequence;dynamic time warping;dynamic time warping", "tokenized_trg": [5538, 53, 32100, 3613, 32100, 2357, 1681, 32100, 29912, 32100, 3, 1313, 11827, 32, 2593, 32100, 1126, 485, 32100, 14783, 1017, 769, 7, 15, 835, 3772, 32100, 14783, 1017, 769, 7, 15, 835, 3772, 32100, 4896, 97, 615, 2462, 32100, 4896, 97, 615, 2462, 1]}
{"src": "information retrieval for language tutoring an overview of the reap project . <sep> h . <digit> . <digit> information search and retrieval retrieval models . general terms algorithms , design , human factors . <unk> typical web search engines are designed to run short queries against a huge collection of hyperlinked documents quickly and cheaply , and are often tuned for the types of queries people submit most often <digit> . many other types of applications exist for which large , open collections like the web would be a valuable resource . however , these applications may require much more advanced support from information retrieval technology than is currently available . in particular , an application may have to describe more complex information needs , with a varied set of properties and data models , including aspects of the user ' s context and goals . in this paper we present an overview of one such application , the reap project , whose main purpose is to provide reader specific practice for improved reading comprehension . ( reap stands for reader specific practice . ) a key component of reap is an advanced search model that can find documents satisfying a set of diverse and possibly complex lexical constraints , including a passage ' s topic , reading level ( e . g . 3rd grade ) , use of syntax ( simple vs . complex sentence structures ) , and vocabulary that is known or unknown to the student . searching is performed on a database of documents automatically gathered from the web which have been analyzed and annotated with a rich set of linguistic metadata . the web is a potentially valuable resource for providing reading material of interest to the student because of its extent , variety , and currency for popular topics .", "tokenized_src": [251, 24515, 138, 21, 1612, 11179, 53, 46, 8650, 13, 8, 22993, 516, 3, 5, 32100, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 960, 11, 24515, 138, 24515, 138, 2250, 3, 5, 879, 1353, 16783, 3, 6, 408, 3, 6, 936, 2580, 3, 5, 2, 4541, 765, 960, 7277, 33, 876, 12, 661, 710, 13154, 581, 3, 9, 1450, 1232, 13, 29588, 15, 26, 2691, 1224, 11, 2877, 120, 3, 6, 11, 33, 557, 14007, 21, 8, 1308, 13, 13154, 151, 4237, 167, 557, 32101, 3, 5, 186, 119, 1308, 13, 1564, 3223, 21, 84, 508, 3, 6, 539, 8274, 114, 8, 765, 133, 36, 3, 9, 3435, 3487, 3, 5, 983, 3, 6, 175, 1564, 164, 1457, 231, 72, 2496, 380, 45, 251, 24515, 138, 748, 145, 19, 1083, 347, 3, 5, 16, 1090, 3, 6, 46, 917, 164, 43, 12, 5530, 72, 1561, 251, 523, 3, 6, 28, 3, 9, 10535, 356, 13, 2605, 11, 331, 2250, 3, 6, 379, 3149, 13, 8, 1139, 3, 31, 3, 7, 2625, 11, 1766, 3, 5, 16, 48, 1040, 62, 915, 46, 8650, 13, 80, 224, 917, 3, 6, 8, 22993, 516, 3, 6, 3, 2544, 711, 1730, 19, 12, 370, 5471, 806, 1032, 21, 3798, 1183, 27160, 3, 5, 41, 22993, 5024, 21, 5471, 806, 1032, 3, 5, 3, 61, 3, 9, 843, 3876, 13, 22993, 19, 46, 2496, 960, 825, 24, 54, 253, 2691, 16156, 3, 9, 356, 13, 2399, 11, 3673, 1561, 3, 30949, 138, 17765, 3, 6, 379, 3, 9, 5454, 3, 31, 3, 7, 2859, 3, 6, 1183, 593, 41, 3, 15, 3, 5, 3, 122, 3, 5, 220, 52, 26, 2769, 3, 61, 3, 6, 169, 13, 28230, 41, 650, 3, 208, 7, 3, 5, 1561, 7142, 5278, 3, 61, 3, 6, 11, 19067, 24, 19, 801, 42, 7752, 12, 8, 1236, 3, 5, 4549, 19, 3032, 30, 3, 9, 3501, 13, 2691, 3269, 3, 9094, 45, 8, 765, 84, 43, 118, 3, 16466, 11, 46, 2264, 920, 28, 3, 9, 2354, 356, 13, 3, 24703, 26686, 3, 5, 8, 765, 19, 3, 9, 6149, 3435, 3487, 21, 1260, 1183, 1037, 13, 1046, 12, 8, 1236, 250, 13, 165, 5996, 3, 6, 1196, 3, 6, 11, 7481, 21, 1012, 4064, 3, 5, 1], "trg": "information retrieval;information retrieval;searching;reading comprehension;user model;computer assisted learning", "tokenized_trg": [251, 24515, 138, 32100, 251, 24515, 138, 32100, 4549, 32100, 1183, 27160, 32100, 1139, 825, 32100, 1218, 11752, 1036, 1]}
{"src": "categorizing web queries according to geographical locality . <sep> web pages ( and resources , in general ) can be characterized according to their geographical locality . for example , a web page with general information about wildflowers could be considered a global page , likely to be of interest to a ge <unk> broad audience . in contrast , a web page with listings on houses for sale in a specific city could be regarded as a local page , likely to be of interest only to an audience in a relatively narrow region . similarly , some search engine queries ( implicitly ) target global pages , while other queries are after local pages . for example , the best results for query wildflowers are probably global pages about wildflowers such as the one discussed above . however , local pages that are relevant to , say , san francisco are likely to be good matches for a query houses for sale that was issued by a san francisco resident or by somebody moving to that city . unfortunately , search engines do not analyze the geographical locality of queries and users , and hence often produce sub optimal results . thus query wildflowers might return pages that discuss wildflowers in specific u . s . states ( and not general information about wildflowers ) , while query houses for sale might return pages with real estate listings for locations other than that of interest to the person who issued the query . deciding whether an unseen query should produce mostly local or global pages without placing this burden on the search engine users is an important and challenging problem , because queries are often ambiguous or underspecify the information they are after . in this paper , we address this problem by first defining how to categorize queries according to their ( often implicit ) geographical locality . we then introduce several alternatives for automatically and efficiently categorizing queries in our scheme , using a variety of state of the art machine learning tools . we report a thorough evaluation of our classifiers using a large sample of queries from a real web search engine , and conclude by discussing how our query categorization approach can help improve query result quality . categories and subject descriptors h . <digit> information storage and retrieval information search and retrieval query formulation , search process general terms algorithms , experimentation , human factors", "tokenized_src": [9624, 11498, 8128, 765, 13154, 1315, 12, 20187, 415, 485, 3, 5, 32100, 765, 1688, 41, 11, 1438, 3, 6, 16, 879, 3, 61, 54, 36, 3, 16730, 1315, 12, 70, 20187, 415, 485, 3, 5, 21, 677, 3, 6, 3, 9, 765, 543, 28, 879, 251, 81, 3645, 14923, 7, 228, 36, 1702, 3, 9, 1252, 543, 3, 6, 952, 12, 36, 13, 1046, 12, 3, 9, 873, 2, 4358, 2417, 3, 5, 16, 4656, 3, 6, 3, 9, 765, 543, 28, 11070, 30, 4790, 21, 1048, 16, 3, 9, 806, 690, 228, 36, 3, 12327, 38, 3, 9, 415, 543, 3, 6, 952, 12, 36, 13, 1046, 163, 12, 46, 2417, 16, 3, 9, 4352, 5658, 1719, 3, 5, 19467, 3, 6, 128, 960, 1948, 13154, 41, 21773, 120, 3, 61, 2387, 1252, 1688, 3, 6, 298, 119, 13154, 33, 227, 415, 1688, 3, 5, 21, 677, 3, 6, 8, 200, 772, 21, 11417, 3645, 14923, 7, 33, 1077, 1252, 1688, 81, 3645, 14923, 7, 224, 38, 8, 80, 5172, 756, 3, 5, 983, 3, 6, 415, 1688, 24, 33, 2193, 12, 3, 6, 497, 3, 6, 3, 7, 152, 2515, 11389, 3523, 33, 952, 12, 36, 207, 6407, 21, 3, 9, 11417, 4790, 21, 1048, 24, 47, 4683, 57, 3, 9, 3, 7, 152, 2515, 11389, 3523, 8141, 42, 57, 10843, 1735, 12, 24, 690, 3, 5, 12050, 3, 6, 960, 7277, 103, 59, 8341, 8, 20187, 415, 485, 13, 13154, 11, 1105, 3, 6, 11, 10321, 557, 1759, 769, 6624, 772, 3, 5, 2932, 11417, 3645, 14923, 7, 429, 1205, 1688, 24, 2497, 3645, 14923, 7, 16, 806, 3, 76, 3, 5, 3, 7, 3, 5, 2315, 41, 11, 59, 879, 251, 81, 3645, 14923, 7, 3, 61, 3, 6, 298, 11417, 4790, 21, 1048, 429, 1205, 1688, 28, 490, 2052, 11070, 21, 3248, 119, 145, 24, 13, 1046, 12, 8, 568, 113, 4683, 8, 11417, 3, 5, 3, 12053, 823, 46, 1149, 15, 35, 11417, 225, 1759, 3323, 415, 42, 1252, 1688, 406, 9308, 48, 9054, 30, 8, 960, 1948, 1105, 19, 46, 359, 11, 4421, 682, 3, 6, 250, 13154, 33, 557, 3, 24621, 1162, 42, 365, 7576, 4921, 8, 251, 79, 33, 227, 3, 5, 16, 48, 1040, 3, 6, 62, 1115, 48, 682, 57, 166, 3, 16123, 149, 12, 9624, 11498, 776, 13154, 1315, 12, 70, 41, 557, 21773, 3, 61, 20187, 415, 485, 3, 5, 62, 258, 4277, 633, 10336, 21, 3269, 11, 8877, 9624, 11498, 8128, 13154, 16, 69, 5336, 3, 6, 338, 3, 9, 1196, 13, 538, 13, 8, 768, 1437, 1036, 1339, 3, 5, 62, 934, 3, 9, 9517, 5002, 13, 69, 853, 7903, 7, 338, 3, 9, 508, 3106, 13, 13154, 45, 3, 9, 490, 765, 960, 1948, 3, 6, 11, 12692, 57, 12104, 149, 69, 11417, 9624, 122, 127, 1707, 1295, 54, 199, 1172, 11417, 741, 463, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 11417, 20029, 3, 6, 960, 433, 879, 1353, 16783, 3, 6, 5016, 257, 3, 6, 936, 2580, 1], "trg": "web queries;geographical locality;global page;local page;search engines;search engine;web search;query classification;categorization scheme;query categorization query classification;information retrieval;query modification", "tokenized_trg": [765, 13154, 32100, 20187, 415, 485, 32100, 1252, 543, 32100, 415, 543, 32100, 960, 7277, 32100, 960, 1948, 32100, 765, 960, 32100, 11417, 13774, 32100, 9624, 122, 127, 1707, 5336, 32100, 11417, 9624, 122, 127, 1707, 11417, 13774, 32100, 251, 24515, 138, 32100, 11417, 12767, 1]}
{"src": "information revelation and privacy in online social networks . <sep> participation in social networking sites has dramatically increased in recent years . services such as friendster , tribe , or the facebook allow millions of individuals to create online profiles and share personal information with vast networks of friends and , often , unknown numbers of strangers . in this paper we study patterns of information revelation in online social networks and their privacy implications . we analyze the online behavior of more than <digit> , <digit> carnegie mellon university students who have joined a popular social networking site catered to colleges . we evaluate the amount of information they disclose and study their usage of the site ' s privacy settings . we highlight potential attacks on various aspects of their privacy , and we show that only a minimal percentage of users changes the highly permeable privacy preferences . categories and subject descriptors k . <digit> . <digit> computer and society public policy issues privacy general terms human factors", "tokenized_src": [251, 20022, 11, 4570, 16, 367, 569, 5275, 3, 5, 32100, 5178, 16, 569, 7607, 1471, 65, 13464, 1936, 16, 1100, 203, 3, 5, 364, 224, 38, 803, 449, 3, 6, 14430, 3, 6, 42, 8, 13301, 995, 4040, 13, 1742, 12, 482, 367, 10958, 11, 698, 525, 251, 28, 4248, 5275, 13, 803, 11, 3, 6, 557, 3, 6, 7752, 2302, 13, 13037, 7, 3, 5, 16, 48, 1040, 62, 810, 4264, 13, 251, 20022, 16, 367, 569, 5275, 11, 70, 4570, 12418, 3, 5, 62, 8341, 8, 367, 3889, 13, 72, 145, 32101, 3, 6, 32101, 15460, 4044, 140, 195, 106, 3819, 481, 113, 43, 3311, 3, 9, 1012, 569, 7607, 353, 212, 11196, 12, 12936, 3, 5, 62, 6825, 8, 866, 13, 251, 79, 14765, 11, 810, 70, 4742, 13, 8, 353, 3, 31, 3, 7, 4570, 3803, 3, 5, 62, 6481, 1055, 6032, 30, 796, 3149, 13, 70, 4570, 3, 6, 11, 62, 504, 24, 163, 3, 9, 6211, 5294, 13, 1105, 1112, 8, 1385, 399, 526, 179, 4570, 11177, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 157, 3, 5, 32101, 3, 5, 32101, 1218, 11, 2710, 452, 1291, 807, 4570, 879, 1353, 936, 2580, 1], "trg": "information revelation;privacy;online social networking;social networking sites;facebook;online behavior;college;data visibility;online privacy;privacy risk;information relevation;stalking;privacy perference;social network theory;re identification", "tokenized_trg": [251, 20022, 32100, 4570, 32100, 367, 569, 7607, 32100, 569, 7607, 1471, 32100, 13301, 32100, 367, 3889, 32100, 1900, 32100, 331, 12435, 32100, 367, 4570, 32100, 4570, 1020, 32100, 251, 22560, 257, 32100, 24161, 53, 32100, 4570, 399, 11788, 32100, 569, 1229, 4516, 32100, 3, 60, 10356, 1]}
{"src": "integrating the document object model with hyperlinks for enhanced topic distillation and information extraction . <sep> topic distillation is the process of finding authoritative web pages and comprehensive hubs which reciprocally endorse each other and are relevant to a given query . hyperlink based topic distillation has been traditionally applied to a macroscopic web model where documents are nodes in a directed graph and hyperlinks are edges . macroscopic models miss valuable clues such as banners , navigation panels , and template based inclusions , which are embedded in html pages using markup tags . consequently , results of macroscopic distillation algorithms have been deteriorating in quality as web pages are becoming more complex . we propose a uniform fine grained model for the web in which pages are represented by their tag trees ( also called their document object models or doms ) and these dom trees are interconnected by ordinary hyperlinks . surprisingly , macroscopic distillation algorithms do not work in the fine grained scenario . we present a new algorithm suitable for the fine grained model . it can dis aggregate hubs into coherent regions by segmenting their <unk> . mutual endorsement between hubs and authorities involve these regions , rather than single nodes representing complete hubs . anecdotes and measurements using a <digit> query , <digit> document benchmark suite , used in earlier topic distillation research , reveal two benefits from the new algorithm distillation quality improves , and a by product of distillation is the ability to extract relevant snippets from hubs which are only partially relevant to the query .", "tokenized_src": [3, 20030, 8, 1708, 3735, 825, 28, 29588, 7, 21, 8358, 2859, 20487, 257, 11, 251, 16629, 3, 5, 32100, 2859, 20487, 257, 19, 8, 433, 13, 2342, 30838, 765, 1688, 11, 3452, 7801, 7, 84, 22882, 1427, 24861, 284, 119, 11, 33, 2193, 12, 3, 9, 787, 11417, 3, 5, 29588, 3, 390, 2859, 20487, 257, 65, 118, 16910, 2930, 12, 3, 9, 11486, 52, 23643, 765, 825, 213, 2691, 33, 150, 1395, 16, 3, 9, 6640, 8373, 11, 29588, 7, 33, 9804, 3, 5, 11486, 52, 23643, 2250, 3041, 3435, 11354, 7, 224, 38, 11662, 7, 3, 6, 8789, 7065, 3, 6, 11, 3847, 3, 390, 11980, 7, 3, 6, 84, 33, 13612, 16, 3, 10500, 1688, 338, 3946, 413, 12391, 3, 5, 21612, 120, 3, 6, 772, 13, 11486, 52, 23643, 20487, 257, 16783, 43, 118, 3, 18687, 53, 16, 463, 38, 765, 1688, 33, 2852, 72, 1561, 3, 5, 62, 4230, 3, 9, 7117, 1399, 3, 122, 10761, 825, 21, 8, 765, 16, 84, 1688, 33, 7283, 57, 70, 7860, 3124, 41, 92, 718, 70, 1708, 3735, 2250, 42, 3, 5012, 7, 3, 61, 11, 175, 3, 5012, 3124, 33, 1413, 19386, 57, 9495, 29588, 7, 3, 5, 3, 12713, 3, 6, 11486, 52, 23643, 20487, 257, 16783, 103, 59, 161, 16, 8, 1399, 3, 122, 10761, 8616, 3, 5, 62, 915, 3, 9, 126, 12628, 3255, 21, 8, 1399, 3, 122, 10761, 825, 3, 5, 34, 54, 1028, 12955, 7801, 7, 139, 28911, 6266, 57, 5508, 53, 70, 2, 3, 5, 8543, 22324, 344, 7801, 7, 11, 5779, 7789, 175, 6266, 3, 6, 1066, 145, 712, 150, 1395, 9085, 743, 7801, 7, 3, 5, 46, 15, 75, 26, 32, 1422, 11, 11110, 338, 3, 9, 32101, 11417, 3, 6, 32101, 1708, 15705, 3132, 3, 6, 261, 16, 2283, 2859, 20487, 257, 585, 3, 6, 6731, 192, 1393, 45, 8, 126, 12628, 20487, 257, 463, 1172, 7, 3, 6, 11, 3, 9, 57, 556, 13, 20487, 257, 19, 8, 1418, 12, 5819, 2193, 3, 20317, 4995, 7, 45, 7801, 7, 84, 33, 163, 14610, 2193, 12, 8, 11417, 3, 5, 1], "trg": "document object model;hyperlink;topic distillation;topic distillation;dom;segmentation;xml;pagerank algorithm;google;hits;link localization;microscopic distillation;hub fragmentation;text analysis;minimum description length principle", "tokenized_trg": [1708, 3735, 825, 32100, 29588, 32100, 2859, 20487, 257, 32100, 2859, 20487, 257, 32100, 3, 5012, 32100, 5508, 257, 32100, 3, 226, 51, 40, 32100, 543, 6254, 12628, 32100, 10283, 32100, 8046, 32100, 1309, 415, 1707, 32100, 6647, 52, 23643, 20487, 257, 32100, 7801, 12071, 257, 32100, 1499, 1693, 32100, 2559, 4210, 2475, 8454, 1]}
{"src": "integration of information assurance and security into the it2005 model curriculum . <sep> in this paper we present the context of the work of the curriculum committee on it2005 , the it curriculum volume described in the overview draft document of the joint task force for computing curriculum <digit> . we also provide a brief introduction to the history and work of the information assurance education community . these two perspectives provide the foundation for the main thrust of the paper , which is a description of the information assurance and security ( ias ) component of the it2005 document . finally , we end the paper with an example of how ias is being implemented at byu as a pervasive theme that is woven throughout the curriculum and conclude with some observations about the first year ' s experience . categories and subject descriptors k . <digit> . <digit> computer and information science education accreditation general terms management , security", "tokenized_src": [5660, 13, 251, 12203, 11, 1034, 139, 8, 34, 22594, 825, 7850, 3, 5, 32100, 16, 48, 1040, 62, 915, 8, 2625, 13, 8, 161, 13, 8, 7850, 4492, 30, 34, 22594, 3, 6, 8, 34, 7850, 2908, 3028, 16, 8, 8650, 6488, 1708, 13, 8, 4494, 2491, 2054, 21, 10937, 7850, 32101, 3, 5, 62, 92, 370, 3, 9, 4456, 5302, 12, 8, 892, 11, 161, 13, 8, 251, 12203, 1073, 573, 3, 5, 175, 192, 14013, 370, 8, 3361, 21, 8, 711, 25547, 13, 8, 1040, 3, 6, 84, 19, 3, 9, 4210, 13, 8, 251, 12203, 11, 1034, 41, 3, 23, 9, 7, 3, 61, 3876, 13, 8, 34, 22594, 1708, 3, 5, 2031, 3, 6, 62, 414, 8, 1040, 28, 46, 677, 13, 149, 3, 23, 9, 7, 19, 271, 6960, 44, 57, 76, 38, 3, 9, 399, 9856, 757, 3800, 24, 19, 3, 16846, 1019, 8, 7850, 11, 12692, 28, 128, 14181, 81, 8, 166, 215, 3, 31, 3, 7, 351, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 157, 3, 5, 32101, 3, 5, 32101, 1218, 11, 251, 2056, 1073, 24513, 879, 1353, 758, 3, 6, 1034, 1], "trg": "information assurance;information assurance;it2005;it;education;ia;ias;pervasive themes;security knowledge;sigite curriculum committee;information technology;committee on national security systems;cc2005;it2005 volume;nietp program;training standards;byu curriculum;in service training development;citc <digit>", "tokenized_trg": [251, 12203, 32100, 251, 12203, 32100, 34, 22594, 32100, 34, 32100, 1073, 32100, 3, 23, 9, 32100, 3, 23, 9, 7, 32100, 399, 9856, 757, 8334, 32100, 1034, 1103, 32100, 108, 12651, 15, 7850, 4492, 32100, 251, 748, 32100, 4492, 30, 1157, 1034, 1002, 32100, 3, 75, 75, 22594, 32100, 34, 22594, 2908, 32100, 6691, 17, 102, 478, 32100, 761, 2443, 32100, 57, 76, 7850, 32100, 16, 313, 761, 606, 32100, 6895, 75, 32101, 1]}
{"src": "interactive machine learning . <sep> perceptual user interfaces ( puis ) are an important part of ubiquitous computing . creating such interfaces is difficult because of the image and signal processing knowledge required for creating classifiers . we propose an interactive machine learning ( iml ) model that allows users to train , classify view and correct the classifications . the concept and implementation details of iml are discussed and contrasted with classical machine learning models . evaluations of two algorithms are also presented . we also briefly describe image processing with crayons ( crayons ) , which is a tool for creating new camera based interfaces using a simple painting metaphor . the crayons tool embodies our notions of interactive machine learning . categories h . <digit> . <digit> , d . <digit> . <digit> general terms design , experimentation", "tokenized_src": [6076, 1437, 1036, 3, 5, 32100, 399, 6873, 3471, 1139, 3459, 7, 41, 4851, 3, 61, 33, 46, 359, 294, 13, 29840, 10937, 3, 5, 1577, 224, 3459, 7, 19, 1256, 250, 13, 8, 1023, 11, 3240, 3026, 1103, 831, 21, 1577, 853, 7903, 7, 3, 5, 62, 4230, 46, 6076, 1437, 1036, 41, 256, 40, 3, 61, 825, 24, 1250, 1105, 12, 2412, 3, 6, 853, 4921, 903, 11, 2024, 8, 13774, 7, 3, 5, 8, 2077, 11, 4432, 1030, 13, 256, 40, 33, 5172, 11, 4656, 15, 26, 28, 11702, 1437, 1036, 2250, 3, 5, 5002, 7, 13, 192, 16783, 33, 92, 2569, 3, 5, 62, 92, 16964, 5530, 1023, 3026, 28, 29072, 7, 41, 29072, 7, 3, 61, 3, 6, 84, 19, 3, 9, 1464, 21, 1577, 126, 1861, 3, 390, 3459, 7, 338, 3, 9, 650, 3924, 21253, 3, 5, 8, 29072, 7, 1464, 3, 24973, 7, 69, 9347, 7, 13, 6076, 1437, 1036, 3, 5, 5897, 3, 107, 3, 5, 32101, 3, 5, 32101, 3, 6, 3, 26, 3, 5, 32101, 3, 5, 32101, 879, 1353, 408, 3, 6, 5016, 257, 1], "trg": "interaction;interactive machine learning;machine learning;classification;classical machine learning;image processing;image processing with crayons;perceptual user iinterfaces;crayons design process;predict correct behaviour;crayons prototype;perceptual interface;classification design loop;image pixel classifier;perceptive user interfaces", "tokenized_trg": [6565, 32100, 6076, 1437, 1036, 32100, 1437, 1036, 32100, 13774, 32100, 11702, 1437, 1036, 32100, 1023, 3026, 32100, 1023, 3026, 28, 29072, 7, 32100, 399, 6873, 3471, 1139, 3, 23, 3870, 4861, 7, 32100, 29072, 7, 408, 433, 32100, 9689, 2024, 7916, 32100, 29072, 7, 14402, 32100, 399, 6873, 3471, 3459, 32100, 13774, 408, 6494, 32100, 1023, 3, 14251, 853, 7903, 32100, 399, 6873, 757, 1139, 3459, 7, 1]}
{"src": "interestingness of frequent itemsets using bayesian networks as background knowledge . <sep> the paper presents a method for pruning frequent itemsets based on background knowledge represented by a bayesian network . the interestingness of an itemset is defined as the absolute difference between its support estimated from data and from the bayesian network . efficient algorithms are presented for finding interestingness of a collection of frequent itemsets , and for finding all attribute sets with a given minimum interestingness . practical usefulness of the algorithms and their efficiency have been verified experimentally . categories and subject descriptors h . <digit> . <digit> database management database applications data mining general terms algorithms", "tokenized_src": [1477, 655, 13, 8325, 1173, 15, 17, 7, 338, 10210, 15, 10488, 5275, 38, 2458, 1103, 3, 5, 32100, 8, 1040, 6621, 3, 9, 1573, 21, 31858, 8325, 1173, 15, 17, 7, 3, 390, 30, 2458, 1103, 7283, 57, 3, 9, 10210, 15, 10488, 1229, 3, 5, 8, 1477, 655, 13, 46, 1173, 15, 17, 19, 4802, 38, 8, 6097, 1750, 344, 165, 380, 5861, 45, 331, 11, 45, 8, 10210, 15, 10488, 1229, 3, 5, 2918, 16783, 33, 2569, 21, 2342, 1477, 655, 13, 3, 9, 1232, 13, 8325, 1173, 15, 17, 7, 3, 6, 11, 21, 2342, 66, 15816, 3369, 28, 3, 9, 787, 2559, 1477, 655, 3, 5, 3236, 1934, 655, 13, 8, 16783, 11, 70, 3949, 43, 118, 17087, 11082, 120, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 3501, 1564, 331, 5558, 879, 1353, 16783, 1], "trg": "interestingness;frequent itemset;frequent itemsets;bayesian network;background knowledge;emerging pattern;association rule;association rules", "tokenized_trg": [1477, 655, 32100, 8325, 1173, 15, 17, 32100, 8325, 1173, 15, 17, 7, 32100, 10210, 15, 10488, 1229, 32100, 2458, 1103, 32100, 7821, 3275, 32100, 6028, 3356, 32100, 6028, 2219, 1]}
{"src": "interference evaluation of bluetooth and ieee <digit> . 11b systems . <sep> abstract . the emergence of several radio technologies , such as bluetooth and ieee <digit> . <digit> , operating in the <digit> . <digit> ghz unlicensed ism frequency band , may lead to signal interference and result in significant performance degradation when devices are colocated in the same environment . the main goal of this paper is to evaluate the effect of mutual interference on the performance of bluetooth and ieee <digit> . 11b systems . we develop a simulation framework for modeling interference based on detailed mac and phy models . first , we use a simple simulation scenario to highlight the effects of parameters , such as transmission power , offered load , and traffic type . we then turn to more complex scenarios involving multiple bluetooth piconets and wlan devices .", "tokenized_src": [20511, 5002, 13, 31327, 11, 3, 23, 15, 15, 15, 32101, 3, 5, 850, 115, 1002, 3, 5, 32100, 9838, 3, 5, 8, 3, 25120, 13, 633, 2252, 2896, 3, 6, 224, 38, 31327, 11, 3, 23, 15, 15, 15, 32101, 3, 5, 32101, 3, 6, 2699, 16, 8, 32101, 3, 5, 32101, 3, 122, 107, 172, 73, 28062, 26, 19, 51, 7321, 1928, 3, 6, 164, 991, 12, 3240, 20511, 11, 741, 16, 1516, 821, 26644, 116, 1904, 33, 576, 5133, 920, 16, 8, 337, 1164, 3, 5, 8, 711, 1288, 13, 48, 1040, 19, 12, 6825, 8, 1504, 13, 8543, 20511, 30, 8, 821, 13, 31327, 11, 3, 23, 15, 15, 15, 32101, 3, 5, 850, 115, 1002, 3, 5, 62, 1344, 3, 9, 11108, 4732, 21, 15309, 20511, 3, 390, 30, 3117, 11486, 11, 3, 6941, 2250, 3, 5, 166, 3, 6, 62, 169, 3, 9, 650, 11108, 8616, 12, 6481, 8, 1951, 13, 8755, 3, 6, 224, 38, 5790, 579, 3, 6, 1860, 4002, 3, 6, 11, 2117, 686, 3, 5, 62, 258, 919, 12, 72, 1561, 13911, 3, 6475, 1317, 31327, 6686, 782, 17, 7, 11, 3, 210, 1618, 1904, 3, 5, 1], "trg": "interference;evaluation;bluetooth;ieee <digit> . 11b;performance degradation;simulation framework;offered load;wlan;wpans;tranmission power;packet loss;hop rate;topology", "tokenized_trg": [20511, 32100, 5002, 32100, 31327, 32100, 3, 23, 15, 15, 15, 32101, 3, 5, 850, 115, 32100, 821, 26644, 32100, 11108, 4732, 32100, 1860, 4002, 32100, 3, 210, 1618, 32100, 3, 210, 2837, 7, 32100, 3, 11665, 5451, 579, 32100, 13531, 1453, 32100, 13652, 1080, 32100, 420, 1863, 1]}
{"src": "is a picture worth a thousand words . <sep> what makes a peripheral or ambient display more effective at presenting awareness information than another presently , little is known in this regard and techniques for evaluating these types of displays are just beginning to be developed . in this article , we focus on one aspect of a peripheral display ' s effectiveness its ability to communicate information at a glance . we conducted an evaluation of the infocanvas , a peripheral display that conveys awareness information graphically as a form of information art , by assessing how well people recall information when it is presented for a brief period of time . we compare performance of the infocanvas to two other electronic information displays , a web portal style and a text based display , when each display was viewed for a short period of time . we found that participants noted and recalled significantly more information when presented by the infocanvas than by either of the other displays despite having to learn the additional graphical representations employed by the infocanvas .", "tokenized_src": [19, 3, 9, 1554, 1494, 3, 9, 7863, 1234, 3, 5, 32100, 125, 656, 3, 9, 22586, 42, 21128, 1831, 72, 1231, 44, 3, 12072, 4349, 251, 145, 430, 3, 25390, 3, 6, 385, 19, 801, 16, 48, 3553, 11, 2097, 21, 3, 17768, 175, 1308, 13, 8397, 33, 131, 1849, 12, 36, 1597, 3, 5, 16, 48, 1108, 3, 6, 62, 992, 30, 80, 2663, 13, 3, 9, 22586, 1831, 3, 31, 3, 7, 9570, 165, 1418, 12, 4521, 251, 44, 3, 9, 15963, 3, 5, 62, 4468, 46, 5002, 13, 8, 2845, 1608, 9856, 3, 6, 3, 9, 22586, 1831, 24, 11770, 7, 4349, 251, 7693, 1427, 38, 3, 9, 607, 13, 251, 768, 3, 6, 57, 3, 20861, 149, 168, 151, 7881, 251, 116, 34, 19, 2569, 21, 3, 9, 4456, 1059, 13, 97, 3, 5, 62, 4048, 821, 13, 8, 2845, 1608, 9856, 12, 192, 119, 3031, 251, 8397, 3, 6, 3, 9, 765, 8948, 869, 11, 3, 9, 1499, 3, 390, 1831, 3, 6, 116, 284, 1831, 47, 3, 4931, 21, 3, 9, 710, 1059, 13, 97, 3, 5, 62, 435, 24, 3008, 4466, 11, 3, 24312, 4019, 72, 251, 116, 2569, 57, 8, 2845, 1608, 9856, 145, 57, 893, 13, 8, 119, 8397, 3, 3565, 578, 12, 669, 8, 1151, 3, 16982, 6497, 7, 8152, 57, 8, 2845, 1608, 9856, 3, 5, 1], "trg": "ambient display;awareness information;evaluation;peripheral display;peripheral display;text based display;graphical representation;information conveyance;web portal like display;information recall;infocanvas display;information visualization;empirical evaluation", "tokenized_trg": [21128, 1831, 32100, 4349, 251, 32100, 5002, 32100, 22586, 1831, 32100, 22586, 1831, 32100, 1499, 3, 390, 1831, 32100, 3, 16982, 6497, 32100, 251, 31117, 15, 32100, 765, 8948, 114, 1831, 32100, 251, 7881, 32100, 2845, 1608, 9856, 1831, 32100, 251, 21744, 32100, 23941, 5002, 1]}
{"src": "a geometric constraint library for 3d graphical applications . <sep> recent computer technologies have enabled fast high quality 3d graphics on personal computers , and also have made the development of 3d graphical applications easier . however , most of such technologies do not sufficiently support layout and behavior aspects of 3d graphics . geometric constraints are , in general , a powerful tool for specifying layouts and behaviors of graphical objects , and have been applied to 2d graphical user interfaces and specialized 3d graphics packages . in this paper , we present chorus3d , a geometric constraint library for 3d graphical applications . it enables programmers to use geometric constraints for various purposes such as geometric layout , constrained dragging , and inverse kinematics . its novel feature is to handle scene graphs by processing coordinate transformations in geometric constraint satisfaction . we demonstrate the usefulness of chorus3d by presenting sample constraint based 3d graphical applications .", "tokenized_src": [3, 9, 21910, 27354, 17, 3595, 21, 220, 26, 3, 16982, 1564, 3, 5, 32100, 1100, 1218, 2896, 43, 9367, 1006, 306, 463, 220, 26, 6484, 30, 525, 7827, 3, 6, 11, 92, 43, 263, 8, 606, 13, 220, 26, 3, 16982, 1564, 1842, 3, 5, 983, 3, 6, 167, 13, 224, 2896, 103, 59, 23750, 380, 5315, 11, 3889, 3149, 13, 220, 26, 6484, 3, 5, 21910, 17765, 33, 3, 6, 16, 879, 3, 6, 3, 9, 2021, 1464, 21, 11610, 53, 5315, 7, 11, 15400, 13, 3, 16982, 4820, 3, 6, 11, 43, 118, 2930, 12, 204, 26, 3, 16982, 1139, 3459, 7, 11, 3, 8689, 220, 26, 6484, 6307, 3, 5, 16, 48, 1040, 3, 6, 62, 915, 26681, 519, 26, 3, 6, 3, 9, 21910, 27354, 17, 3595, 21, 220, 26, 3, 16982, 1564, 3, 5, 34, 3, 7161, 478, 5567, 12, 169, 21910, 17765, 21, 796, 3659, 224, 38, 21910, 5315, 3, 6, 975, 22418, 3, 29985, 3, 6, 11, 3, 23536, 3, 2917, 15, 4992, 7, 3, 5, 165, 3714, 1451, 19, 12, 2174, 3112, 8373, 7, 57, 3026, 11639, 6586, 7, 16, 21910, 27354, 17, 5044, 3, 5, 62, 5970, 8, 1934, 655, 13, 26681, 519, 26, 57, 3, 12072, 3106, 27354, 17, 3, 390, 220, 26, 3, 16982, 1564, 3, 5, 1], "trg": "geometric constraints;3d graphical applications;3d graphics;layout;behaviors;graphical objects;geometric layout;scene graphs;coordinate transformation;constraint satisfaction", "tokenized_trg": [21910, 17765, 32100, 220, 26, 3, 16982, 1564, 32100, 220, 26, 6484, 32100, 5315, 32100, 15400, 32100, 3, 16982, 4820, 32100, 21910, 5315, 32100, 3112, 8373, 7, 32100, 11639, 6586, 32100, 27354, 17, 5044, 1]}
{"src": "kddcs a load balanced in network data centric storage scheme for sensor networks . <sep> we propose an in network data centric storage ( <unk> ) scheme for answering ad hoc queries in sensor networks . previously proposed in network storage ( ins ) schemes suffered from storage hot spots that are formed if either the sensors ' locations are not uniformly distributed over the coverage area , or the distribution of sensor readings is not uniform over the range of possible reading values . our k d tree based data centric storage ( kddcs ) scheme maintains the invariant that the storage of events is distributed reasonably uniformly among the sensors . kddcs is composed of a set of distributed algorithms whose running time is within a poly log factor of the diameter of the network . the number of messages any sensor has to send , as well as the bits in those messages , is poly logarithmic in the number of sensors . load balancing in kddcs is based on defining and distributively solving a theoretical problem that we call the weighted split median problem . in addition to analytical bounds on kddcs individual algorithms , we provide experimental evidence of our scheme ' s general efficiency , as well as its ability to avoid the formation of storage hot spots of various sizes , unlike all previous <unk> schemes . categories and subject descriptors h . <digit> . <digit> database management systems distributed databases , query processing general terms algorithms , design , experimentation , performance", "tokenized_src": [3, 157, 26, 26, 75, 7, 3, 9, 4002, 8965, 16, 1229, 331, 3, 17456, 1606, 5336, 21, 7824, 5275, 3, 5, 32100, 62, 4230, 46, 16, 1229, 331, 3, 17456, 1606, 41, 2, 3, 61, 5336, 21, 18243, 3, 9, 26, 3, 24344, 13154, 16, 7824, 5275, 3, 5, 3150, 4382, 16, 1229, 1606, 41, 16, 7, 3, 61, 15171, 8151, 45, 1606, 1312, 6883, 24, 33, 5147, 3, 99, 893, 8, 12237, 3, 31, 3248, 33, 59, 7117, 120, 8308, 147, 8, 2591, 616, 3, 6, 42, 8, 3438, 13, 7824, 1183, 7, 19, 59, 7117, 147, 8, 620, 13, 487, 1183, 2620, 3, 5, 69, 3, 157, 3, 26, 2195, 3, 390, 331, 3, 17456, 1606, 41, 3, 157, 26, 26, 75, 7, 3, 61, 5336, 1961, 7, 8, 16, 9504, 288, 24, 8, 1606, 13, 984, 19, 8308, 13145, 7117, 120, 859, 8, 12237, 3, 5, 3, 157, 26, 26, 75, 7, 19, 10431, 13, 3, 9, 356, 13, 8308, 16783, 3, 2544, 1180, 97, 19, 441, 3, 9, 4251, 4303, 2945, 13, 8, 9260, 13, 8, 1229, 3, 5, 8, 381, 13, 4175, 136, 7824, 65, 12, 1299, 3, 6, 38, 168, 38, 8, 14120, 16, 273, 4175, 3, 6, 19, 4251, 4303, 9, 30922, 3113, 16, 8, 381, 13, 12237, 3, 5, 4002, 3, 10810, 4733, 16, 3, 157, 26, 26, 75, 7, 19, 3, 390, 30, 3, 16123, 11, 11266, 17, 13830, 11795, 3, 9, 13605, 682, 24, 62, 580, 8, 1293, 15, 26, 5679, 15572, 682, 3, 5, 16, 811, 12, 18355, 8120, 7, 30, 3, 157, 26, 26, 75, 7, 928, 16783, 3, 6, 62, 370, 11082, 2084, 13, 69, 5336, 3, 31, 3, 7, 879, 3949, 3, 6, 38, 168, 38, 165, 1418, 12, 1792, 8, 3239, 13, 1606, 1312, 6883, 13, 796, 4342, 3, 6, 9770, 66, 1767, 2, 15171, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 1002, 8308, 16961, 3, 6, 11417, 3026, 879, 1353, 16783, 3, 6, 408, 3, 6, 5016, 257, 3, 6, 821, 1], "trg": "kddcs;sensor network;sensor network;ad hoc queries;storage hot spots;distributed algorithms;weighted split median problem;dim;quality of data;power aware;data persistence;energy saving;routing algorithm", "tokenized_trg": [3, 157, 26, 26, 75, 7, 32100, 7824, 1229, 32100, 7824, 1229, 32100, 3, 9, 26, 3, 24344, 13154, 32100, 1606, 1312, 6883, 32100, 8308, 16783, 32100, 1293, 15, 26, 5679, 15572, 682, 32100, 15688, 32100, 463, 13, 331, 32100, 579, 2718, 32100, 331, 29486, 32100, 827, 4380, 32100, 22764, 12628, 1]}
{"src": "language specific models in multilingual topic tracking . <sep> topic tracking is complicated when the stories in the stream occur in multiple languages . typically , researchers have trained only english topic models because the training stories have been provided in english . in tracking , non english test stories are then machine translated into english to compare them with the topic models . we propose a native language hypothesis stating that comparisons would be more effective in the original language of the story . we first test and support the hypothesis for story link detection . for topic tracking the hypothesis implies that it should be preferable to build separate language specific topic models for each language in the stream . we compare different methods of incrementally building such native language topic models . categories and subject descriptors h . <digit> . <digit> information storage and retrieval content analysis and indexing , indexing methods , linguistic processing . general terms algorithms , experimentation .", "tokenized_src": [1612, 806, 2250, 16, 1249, 25207, 2859, 6418, 3, 5, 32100, 2859, 6418, 19, 6446, 116, 8, 1937, 16, 8, 6093, 4093, 16, 1317, 8024, 3, 5, 3115, 3, 6, 4768, 43, 4252, 163, 22269, 2859, 2250, 250, 8, 761, 1937, 43, 118, 937, 16, 22269, 3, 5, 16, 6418, 3, 6, 529, 22269, 794, 1937, 33, 258, 1437, 15459, 139, 22269, 12, 4048, 135, 28, 8, 2859, 2250, 3, 5, 62, 4230, 3, 9, 4262, 1612, 22455, 3, 17211, 24, 4993, 7, 133, 36, 72, 1231, 16, 8, 926, 1612, 13, 8, 733, 3, 5, 62, 166, 794, 11, 380, 8, 22455, 21, 733, 1309, 10664, 3, 5, 21, 2859, 6418, 8, 22455, 18841, 24, 34, 225, 36, 2396, 179, 12, 918, 2450, 1612, 806, 2859, 2250, 21, 284, 1612, 16, 8, 6093, 3, 5, 62, 4048, 315, 2254, 13, 28351, 120, 740, 224, 4262, 1612, 2859, 2250, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 738, 1693, 11, 5538, 53, 3, 6, 5538, 53, 2254, 3, 6, 3, 24703, 3026, 3, 5, 879, 1353, 16783, 3, 6, 5016, 257, 3, 5, 1], "trg": "multilingual;multilingual topic tracking;topic tracking;topic models;machine translation;native language hypothesis;story link;classification;similarity;crosslingual;native topic models;arabic;tdt", "tokenized_trg": [1249, 25207, 32100, 1249, 25207, 2859, 6418, 32100, 2859, 6418, 32100, 2859, 2250, 32100, 1437, 7314, 32100, 4262, 1612, 22455, 32100, 733, 1309, 32100, 13774, 32100, 1126, 485, 32100, 2269, 25207, 32100, 4262, 2859, 2250, 32100, 21165, 447, 32100, 3, 17, 26, 17, 1]}
{"src": "lazy preservation reconstructing websites by crawling the crawlers . <sep> backup of websites is often not considered until after a catastrophic event has occurred to either the website or its webmaster . we introduce lazy preservation digital preservation performed as a result of the normal operation of web crawlers and caches . lazy preservation is especially suitable for third parties for example , a teacher reconstructing a missing website used in previous classes . we evaluate the effectiveness of lazy preservation by reconstructing <digit> websites of varying sizes and composition using warrick , a web repository crawler . because of varying levels of completeness in any one repository , our reconstructions sampled from four different web repositories google ( <digit> % ) , msn ( <digit> % ) , internet archive ( <digit> % ) and yahoo ( <digit> % ) . we also measured the time required for web resources to be discovered and cached ( <digit> <digit> days ) as well as how long they remained in cache after deletion ( <digit> <digit> days ) . categories and subject descriptors h . <digit> . <digit> information storage and retrieval online information services web based services h . <digit> . <digit> information storage and retrieval digital libraries collection general terms measurement , experimentation , design", "tokenized_src": [19743, 19368, 29814, 53, 3395, 57, 18639, 53, 8, 18639, 277, 3, 5, 32100, 7169, 13, 3395, 19, 557, 59, 1702, 552, 227, 3, 9, 26926, 605, 65, 6935, 12, 893, 8, 475, 42, 165, 765, 7429, 3, 5, 62, 4277, 19743, 19368, 1125, 19368, 3032, 38, 3, 9, 741, 13, 8, 1389, 2986, 13, 765, 18639, 277, 11, 11800, 7, 3, 5, 19743, 19368, 19, 902, 3255, 21, 1025, 2251, 21, 677, 3, 6, 3, 9, 3145, 29814, 53, 3, 9, 3586, 475, 261, 16, 1767, 2287, 3, 5, 62, 6825, 8, 9570, 13, 19743, 19368, 57, 29814, 53, 32101, 3395, 13, 3, 14177, 4342, 11, 5761, 338, 615, 5206, 3, 6, 3, 9, 765, 22109, 18639, 49, 3, 5, 250, 13, 3, 14177, 1425, 13, 743, 655, 16, 136, 80, 22109, 3, 6, 69, 20532, 7, 3106, 26, 45, 662, 315, 765, 14173, 15467, 15, 7, 10283, 41, 32101, 3, 1454, 3, 61, 3, 6, 3, 51, 7, 29, 41, 32101, 3, 1454, 3, 61, 3, 6, 1396, 13269, 41, 32101, 3, 1454, 3, 61, 11, 3, 29057, 41, 32101, 3, 1454, 3, 61, 3, 5, 62, 92, 8413, 8, 97, 831, 21, 765, 1438, 12, 36, 3883, 11, 11800, 26, 41, 32101, 32101, 477, 3, 61, 38, 168, 38, 149, 307, 79, 3, 7361, 16, 11800, 227, 29431, 41, 32101, 32101, 477, 3, 61, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 367, 251, 364, 765, 3, 390, 364, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 1125, 12256, 1232, 879, 1353, 9753, 3, 6, 5016, 257, 3, 6, 408, 1], "trg": "lazy preservation;reconstruction;crawling;digital preservation;caching;web repositories;recovery;search engines;search engine;cached resources", "tokenized_trg": [19743, 19368, 32100, 20532, 32100, 18639, 53, 32100, 1125, 19368, 32100, 212, 8509, 32100, 765, 14173, 15467, 15, 7, 32100, 3938, 32100, 960, 7277, 32100, 960, 1948, 32100, 11800, 26, 1438, 1]}
{"src": "learning concepts from large scale imbalanced data sets using support cluster machines . <sep> this paper considers the problem of using support vector machines ( svms ) to learn concepts from large scale imbalanced data sets . the objective of this paper is twofold . firstly , we investigate the effects of large scale and imbalance on svms . we highlight the role of linear non separability in this problem . secondly , we develop a both practical and theoretical guaranteed meta algorithm to handle the trouble of scale and imbalance . the approach is named support cluster machines ( scms ) . it incorporates the informative and the representative under sampling mechanisms to speedup the training procedure . the scms differs from the previous similar ideas in two ways , ( a ) the theoretical foundation has been provided , and ( b ) the clustering is performed in the feature space rather than in the input space . the theoretical analysis not only provides justification , but also guides the technical choices of the proposed approach . finally , experiments on both the synthetic and the trecvid data are carried out . the results support the previous analysis and show that the scms are efficient and effective while dealing with large scale imbalanced data sets . categories and subject descriptors h . <digit> . <digit> information storage and retrieval content analysis and indexing abstracting methods , indexing methods i . <digit> . <digit> pattern recognition design methodology classifier design and evaluation general terms algorithms , theory , experimentation", "tokenized_src": [1036, 6085, 45, 508, 2643, 24809, 26, 331, 3369, 338, 380, 9068, 4096, 3, 5, 32100, 48, 1040, 1099, 7, 8, 682, 13, 338, 380, 12938, 4096, 41, 3, 7, 208, 51, 7, 3, 61, 12, 669, 6085, 45, 508, 2643, 24809, 26, 331, 3369, 3, 5, 8, 5997, 13, 48, 1040, 19, 192, 10533, 3, 5, 166, 120, 3, 6, 62, 9127, 8, 1951, 13, 508, 2643, 11, 24809, 30, 3, 7, 208, 51, 7, 3, 5, 62, 6481, 8, 1075, 13, 13080, 529, 142, 1893, 2020, 16, 48, 682, 3, 5, 511, 120, 3, 6, 62, 1344, 3, 9, 321, 3236, 11, 13605, 7206, 10531, 12628, 12, 2174, 8, 3169, 13, 2643, 11, 24809, 3, 5, 8, 1295, 19, 2650, 380, 9068, 4096, 41, 3, 7, 75, 51, 7, 3, 61, 3, 5, 34, 6300, 7, 8, 11152, 11, 8, 6978, 365, 17222, 12009, 12, 1634, 413, 8, 761, 3979, 3, 5, 8, 3, 7, 75, 51, 7, 7641, 7, 45, 8, 1767, 1126, 912, 16, 192, 1155, 3, 6, 41, 3, 9, 3, 61, 8, 13605, 3361, 65, 118, 937, 3, 6, 11, 41, 3, 115, 3, 61, 8, 9068, 53, 19, 3032, 16, 8, 1451, 628, 1066, 145, 16, 8, 3785, 628, 3, 5, 8, 13605, 1693, 59, 163, 795, 131, 2420, 3, 6, 68, 92, 9314, 8, 2268, 3703, 13, 8, 4382, 1295, 3, 5, 2031, 3, 6, 12341, 30, 321, 8, 13699, 11, 8, 18172, 6961, 331, 33, 4006, 91, 3, 5, 8, 772, 380, 8, 1767, 1693, 11, 504, 24, 8, 3, 7, 75, 51, 7, 33, 2918, 11, 1231, 298, 4945, 28, 508, 2643, 24809, 26, 331, 3369, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 738, 1693, 11, 5538, 53, 9838, 53, 2254, 3, 6, 5538, 53, 2254, 3, 23, 3, 5, 32101, 3, 5, 32101, 3275, 5786, 408, 15663, 853, 7903, 408, 11, 5002, 879, 1353, 16783, 3, 6, 4516, 3, 6, 5016, 257, 1], "trg": "large scale;imbalanced data;support cluster machines;clustering;clusters;support vector machines;support vector machines;imbalance;meta algorithm;trecvid;shrinking techniques;large scale data;kernel k means;kernel k means;concept modelling;concept modelling", "tokenized_trg": [508, 2643, 32100, 24809, 26, 331, 32100, 380, 9068, 4096, 32100, 9068, 53, 32100, 9068, 7, 32100, 380, 12938, 4096, 32100, 380, 12938, 4096, 32100, 24809, 32100, 10531, 12628, 32100, 18172, 6961, 32100, 18508, 53, 2097, 32100, 508, 2643, 331, 32100, 20563, 3, 157, 598, 32100, 20563, 3, 157, 598, 32100, 2077, 24716, 32100, 2077, 24716, 1]}
{"src": "learning query languages of web interfaces . <sep> this paper studies the problem of automatic acquisition of the query languages supported by a web information resource . we describe a system that automatically probes the search interface of a resource with a set of test queries and analyses the returned pages to recognize supported query operators . the automatic acquisition assumes the availability of the number of matches the resource returns for a submitted query . the match numbers are used to train a learning system and to generate classification rules that recognize the query operators supported by a provider and their syntactic encodings . these classification rules are employed during the automatic probing of new providers to determine query operators they support . we report on results of experiments with a set of real web resources .", "tokenized_src": [1036, 11417, 8024, 13, 765, 3459, 7, 3, 5, 32100, 48, 1040, 2116, 8, 682, 13, 6569, 6566, 13, 8, 11417, 8024, 3510, 57, 3, 9, 765, 251, 3487, 3, 5, 62, 5530, 3, 9, 358, 24, 3269, 12732, 7, 8, 960, 3459, 13, 3, 9, 3487, 28, 3, 9, 356, 13, 794, 13154, 11, 15282, 8, 3666, 1688, 12, 4206, 3510, 11417, 9490, 3, 5, 8, 6569, 6566, 5344, 7, 8, 5576, 13, 8, 381, 13, 6407, 8, 3487, 5146, 21, 3, 9, 5776, 11417, 3, 5, 8, 1588, 2302, 33, 261, 12, 2412, 3, 9, 1036, 358, 11, 12, 3806, 13774, 2219, 24, 4206, 8, 11417, 9490, 3510, 57, 3, 9, 3175, 11, 70, 8953, 17, 2708, 447, 3, 35, 9886, 7, 3, 5, 175, 13774, 2219, 33, 8152, 383, 8, 6569, 12361, 53, 13, 126, 3580, 12, 2082, 11417, 9490, 79, 380, 3, 5, 62, 934, 30, 772, 13, 12341, 28, 3, 9, 356, 13, 490, 765, 1438, 3, 5, 1], "trg": "learning;query languages;web interfaces;automatic acquisition;search interface;query operators;web resources;hidden web;machine learning;search engine;hidden web", "tokenized_trg": [1036, 32100, 11417, 8024, 32100, 765, 3459, 7, 32100, 6569, 6566, 32100, 960, 3459, 32100, 11417, 9490, 32100, 765, 1438, 32100, 5697, 765, 32100, 1437, 1036, 32100, 960, 1948, 32100, 5697, 765, 1]}
{"src": "learning spatially variant dissimilarity ( svad ) measures . <sep> clustering algorithms typically operate on a feature vector representation of the data and find clusters that are compact with respect to an assumed ( dis ) similarity measure between the data points in feature space . this makes the type of clusters identified highly dependent on the assumed similarity measure . building on recent work in this area , we formally define a class of spatially varying dissimilarity measures and propose algorithms to learn the dissimilarity measure automatically from the data . the idea is to identify clusters that are compact with respect to the unknown spatially varying dissimilarity measure . our experiments show that the proposed algorithms are more stable and achieve better accuracy on various textual data sets when compared with similar algorithms proposed in the literature . categories and subject descriptors h . <digit> . <digit> database management database applications data mining general terms algorithms", "tokenized_src": [1036, 15208, 120, 6826, 1028, 26714, 485, 41, 3, 7, 900, 26, 3, 61, 3629, 3, 5, 32100, 9068, 53, 16783, 3115, 4368, 30, 3, 9, 1451, 12938, 6497, 13, 8, 331, 11, 253, 9068, 7, 24, 33, 6607, 28, 1445, 12, 46, 14176, 41, 1028, 3, 61, 1126, 485, 3613, 344, 8, 331, 979, 16, 1451, 628, 3, 5, 48, 656, 8, 686, 13, 9068, 7, 4313, 1385, 8976, 30, 8, 14176, 1126, 485, 3613, 3, 5, 740, 30, 1100, 161, 16, 48, 616, 3, 6, 62, 3, 19448, 6634, 3, 9, 853, 13, 15208, 120, 3, 14177, 1028, 26714, 485, 3629, 11, 4230, 16783, 12, 669, 8, 1028, 26714, 485, 3613, 3269, 45, 8, 331, 3, 5, 8, 800, 19, 12, 2862, 9068, 7, 24, 33, 6607, 28, 1445, 12, 8, 7752, 15208, 120, 3, 14177, 1028, 26714, 485, 3613, 3, 5, 69, 12341, 504, 24, 8, 4382, 16783, 33, 72, 5711, 11, 1984, 394, 7452, 30, 796, 1499, 3471, 331, 3369, 116, 3, 2172, 28, 1126, 16783, 4382, 16, 8, 6678, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 3501, 1564, 331, 5558, 879, 1353, 16783, 1], "trg": "clustering;clustering;spatially varying dissimilarity;dissimilarity measure;feature weighting;learning dissimilarity measures", "tokenized_trg": [9068, 53, 32100, 9068, 53, 32100, 15208, 120, 3, 14177, 1028, 26714, 485, 32100, 1028, 26714, 485, 3613, 32100, 1451, 1293, 53, 32100, 1036, 1028, 26714, 485, 3629, 1]}
{"src": "learning the unified kernel machines for classification . <sep> kernel machines have been shown as the state of the art learning techniques for classification . in this paper , we propose a novel general framework of learning the unified kernel machines ( ukm ) from both labeled and unlabeled data . our proposed framework integrates supervised learning , semi supervised kernel learning , and active learning in a unified solution . in the suggested framework , we particularly focus our attention on designing a new semi supervised kernel learning method , i . e . , spectral kernel learning ( skl ) , which is built on the principles of kernel target alignment and unsupervised kernel design . our algorithm is related to an equivalent quadratic programming problem that can be efficiently solved . empirical results have shown that our method is more effective and robust to learn the semi supervised kernels than traditional approaches . based on the framework , we present a specific paradigm of unified kernel machines with respect to kernel logistic regresions ( klr ) , i . e . , unified kernel logistic regression ( uklr ) . we evaluate our proposed uklr classification scheme in comparison with traditional solutions . the promising results show that our proposed uklr paradigm is more effective than the traditional classification approaches . categories and subject descriptors i . <digit> . <digit> pattern recognition design methodology classifier design and evaluation h . <digit> . <digit> database management database applications data mining general terms design , algorithms , experimentation", "tokenized_src": [1036, 8, 3, 22927, 20563, 4096, 21, 13774, 3, 5, 32100, 20563, 4096, 43, 118, 2008, 38, 8, 538, 13, 8, 768, 1036, 2097, 21, 13774, 3, 5, 16, 48, 1040, 3, 6, 62, 4230, 3, 9, 3714, 879, 4732, 13, 1036, 8, 3, 22927, 20563, 4096, 41, 3, 1598, 51, 3, 61, 45, 321, 3783, 15, 26, 11, 73, 9339, 400, 26, 331, 3, 5, 69, 4382, 4732, 9162, 7, 3, 23313, 1036, 3, 6, 4772, 3, 23313, 20563, 1036, 3, 6, 11, 1676, 1036, 16, 3, 9, 3, 22927, 1127, 3, 5, 16, 8, 5259, 4732, 3, 6, 62, 1989, 992, 69, 1388, 30, 8296, 3, 9, 126, 4772, 3, 23313, 20563, 1036, 1573, 3, 6, 3, 23, 3, 5, 3, 15, 3, 5, 3, 6, 3, 5628, 4900, 20563, 1036, 41, 3, 7, 157, 40, 3, 61, 3, 6, 84, 19, 1192, 30, 8, 5559, 13, 20563, 2387, 14632, 11, 73, 23313, 20563, 408, 3, 5, 69, 12628, 19, 1341, 12, 46, 7072, 16429, 52, 6049, 6020, 682, 24, 54, 36, 8877, 16384, 3, 5, 23941, 772, 43, 2008, 24, 69, 1573, 19, 72, 1231, 11, 6268, 12, 669, 8, 4772, 3, 23313, 20563, 7, 145, 1435, 6315, 3, 5, 3, 390, 30, 8, 4732, 3, 6, 62, 915, 3, 9, 806, 20491, 13, 3, 22927, 20563, 4096, 28, 1445, 12, 20563, 28820, 3, 60, 11176, 2865, 41, 3, 157, 40, 52, 3, 61, 3, 6, 3, 23, 3, 5, 3, 15, 3, 5, 3, 6, 3, 22927, 20563, 28820, 26625, 41, 3, 1598, 40, 52, 3, 61, 3, 5, 62, 6825, 69, 4382, 3, 1598, 40, 52, 13774, 5336, 16, 4993, 28, 1435, 1275, 3, 5, 8, 12894, 772, 504, 24, 69, 4382, 3, 1598, 40, 52, 20491, 19, 72, 1231, 145, 8, 1435, 13774, 6315, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 23, 3, 5, 32101, 3, 5, 32101, 3275, 5786, 408, 15663, 853, 7903, 408, 11, 5002, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 3501, 1564, 331, 5558, 879, 1353, 408, 3, 6, 16783, 3, 6, 5016, 257, 1], "trg": "unified kernel machine;kernel machines;classification;classification;framework;supervised learning;supervised learning;semi supervised kernel learning;active learning;active learning;spectral kernel learning;spectral kernel learning;kernel logistic regressions;data mining;semi supervised learning;unsuper vised kernel design", "tokenized_trg": [3, 22927, 20563, 1437, 32100, 20563, 4096, 32100, 13774, 32100, 13774, 32100, 4732, 32100, 3, 23313, 1036, 32100, 3, 23313, 1036, 32100, 4772, 3, 23313, 20563, 1036, 32100, 1676, 1036, 32100, 1676, 1036, 32100, 3, 5628, 4900, 20563, 1036, 32100, 3, 5628, 4900, 20563, 1036, 32100, 20563, 28820, 26625, 7, 32100, 331, 5558, 32100, 4772, 3, 23313, 1036, 32100, 73, 21771, 3, 208, 3375, 20563, 408, 1]}
{"src": "leo a system for cost effective 3d shaded graphics . <sep> a physically compact , low cost , high performance 3d graphics accelerator is presented . it supports shaded rendering of triangles and antialiased lines into a double buffered <digit> bit true color frame buffer with a <digit> bit z buffer . nearly the only chips used besides standard memory parts are <digit> asics ( of four types ) . special geometry data reformatting hardware on one asic greatly speeds and simplifies the data input pipeline . floating point performance is enhanced by another asic a custom graphics microprocessor , with specialized graphics instructions and features . screen primitive rasterization is carried out in parallel by five drawing asics , employing a new partitioning of the back end rendering task . for typical rendering cases , the only system performance bottleneck is that intrinsically imposed by <unk> . categories and subject descriptors c . <digit> . <digit> processor architectures multiprocessors i . <digit> . <digit> computer graphics hardware architecture i . <digit> . <digit> computer graphics picture image generation display algorithms i . <digit> . <digit> computer graphics three dimension al graphics and realism .", "tokenized_src": [90, 32, 3, 9, 358, 21, 583, 1231, 220, 26, 7891, 26, 6484, 3, 5, 32100, 3, 9, 10034, 6607, 3, 6, 731, 583, 3, 6, 306, 821, 220, 26, 6484, 30202, 19, 2569, 3, 5, 34, 4951, 7891, 26, 18968, 13, 19938, 7, 11, 1181, 5434, 3843, 2356, 139, 3, 9, 1486, 17164, 15, 26, 32101, 720, 1176, 945, 2835, 17164, 28, 3, 9, 32101, 720, 3, 172, 17164, 3, 5, 2111, 8, 163, 8852, 261, 3, 15262, 1068, 2594, 1467, 33, 32101, 38, 447, 7, 41, 13, 662, 1308, 3, 61, 3, 5, 534, 23898, 331, 5139, 9, 6031, 4214, 30, 80, 38, 447, 6891, 13107, 11, 29376, 7, 8, 331, 3785, 12045, 3, 5, 12848, 500, 821, 19, 8358, 57, 430, 38, 447, 3, 9, 1653, 6484, 2179, 15056, 127, 3, 6, 28, 3, 8689, 6484, 3909, 11, 753, 3, 5, 1641, 26322, 3, 20484, 49, 1707, 19, 4006, 91, 16, 8449, 57, 874, 5364, 38, 447, 7, 3, 6, 5936, 53, 3, 9, 126, 16540, 53, 13, 8, 223, 414, 18968, 2491, 3, 5, 21, 4541, 18968, 1488, 3, 6, 8, 163, 358, 821, 4782, 14694, 19, 24, 26075, 1427, 3, 16068, 57, 2, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 7502, 4648, 7, 1249, 15056, 127, 7, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 4214, 4648, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 1554, 1023, 3381, 1831, 16783, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 386, 9340, 491, 6484, 11, 3, 60, 6835, 3, 5, 1], "trg": "3d shaded graphics;low cost;rendering;antialiased lines;geometry data;parallel algorithms;3d graphics hardware;small physical size;floating point processing;video output;parallel graphics algorithms;general graphics processing;floating point microprocessors;screen space rendering;input processing;gouraud shading", "tokenized_trg": [220, 26, 7891, 26, 6484, 32100, 731, 583, 32100, 18968, 32100, 1181, 5434, 3843, 2356, 32100, 23898, 331, 32100, 8449, 16783, 32100, 220, 26, 6484, 4214, 32100, 422, 1722, 812, 32100, 12848, 500, 3026, 32100, 671, 3911, 32100, 8449, 6484, 16783, 32100, 879, 6484, 3026, 32100, 12848, 500, 2179, 15056, 127, 7, 32100, 1641, 628, 18968, 32100, 3785, 3026, 32100, 281, 2414, 76, 26, 31788, 1]}
{"src": "location based indexing scheme for days . <sep> data dissemination through wireless channels for broadcasting information to consumers is becoming quite common . many dissemination schemes have been proposed but most of them push data to wireless channels for general consumption . push based broadcast <digit> is essentially asymmetric , i . e . , the volume of data being higher from the server to the users than from the users back to the server . push based scheme requires some indexing which indicates when the data will be broadcast and its position in the broadcast . access latency and tuning time are the two main parameters which may be used to evaluate an indexing scheme . two of the important indexing schemes proposed earlier were tree based and the exponential indexing schemes . none of these schemes were able to address the requirements of location dependent data ( ldd ) which is highly desirable feature of data dissemination . in this paper , we discuss the broadcast of ldd in our project data in your space ( days ) , and propose a scheme for indexing ldd . we argue that this scheme , when applied to ldd , significantly improves performance in terms of tuning time over the above mentioned schemes . we prove our argument with the help of simulation results . categories and subject descriptors h . <digit> . <digit> information systems information storage and retrieval , content analysis and indexing h . <digit> . <digit> information systems information storage and retrieval , information search and retrieval . general terms algorithms , performance , experimentation", "tokenized_src": [1128, 3, 390, 5538, 53, 5336, 21, 477, 3, 5, 32100, 331, 31363, 190, 5419, 6047, 21, 6878, 53, 251, 12, 3674, 19, 2852, 882, 1017, 3, 5, 186, 31363, 15171, 43, 118, 4382, 68, 167, 13, 135, 3292, 331, 12, 5419, 6047, 21, 879, 5962, 3, 5, 3292, 3, 390, 6878, 32101, 19, 3, 8317, 3, 9, 23596, 3, 6, 3, 23, 3, 5, 3, 15, 3, 5, 3, 6, 8, 2908, 13, 331, 271, 1146, 45, 8, 2460, 12, 8, 1105, 145, 45, 8, 1105, 223, 12, 8, 2460, 3, 5, 3292, 3, 390, 5336, 2311, 128, 5538, 53, 84, 9379, 116, 8, 331, 56, 36, 6878, 11, 165, 1102, 16, 8, 6878, 3, 5, 592, 1480, 11298, 11, 23668, 97, 33, 8, 192, 711, 8755, 84, 164, 36, 261, 12, 6825, 46, 5538, 53, 5336, 3, 5, 192, 13, 8, 359, 5538, 53, 15171, 4382, 2283, 130, 2195, 3, 390, 11, 8, 25722, 5538, 53, 15171, 3, 5, 5839, 13, 175, 15171, 130, 3, 179, 12, 1115, 8, 1502, 13, 1128, 8976, 331, 41, 3, 40, 26, 26, 3, 61, 84, 19, 1385, 16441, 1451, 13, 331, 31363, 3, 5, 16, 48, 1040, 3, 6, 62, 2497, 8, 6878, 13, 3, 40, 26, 26, 16, 69, 516, 331, 16, 39, 628, 41, 477, 3, 61, 3, 6, 11, 4230, 3, 9, 5336, 21, 5538, 53, 3, 40, 26, 26, 3, 5, 62, 9409, 24, 48, 5336, 3, 6, 116, 2930, 12, 3, 40, 26, 26, 3, 6, 4019, 1172, 7, 821, 16, 1353, 13, 23668, 97, 147, 8, 756, 2799, 15171, 3, 5, 62, 4410, 69, 5464, 28, 8, 199, 13, 11108, 772, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1002, 251, 1606, 11, 24515, 138, 3, 6, 738, 1693, 11, 5538, 53, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1002, 251, 1606, 11, 24515, 138, 3, 6, 251, 960, 11, 24515, 138, 3, 5, 879, 1353, 16783, 3, 6, 821, 3, 6, 5016, 257, 1], "trg": "indexing;indexing scheme;data dissemination;wireless;broadcast;location dependent data;access efficiency;push based architecture;energy conservation;containment;wireless data broadcast;data staging;mapping function;location based services", "tokenized_trg": [5538, 53, 32100, 5538, 53, 5336, 32100, 331, 31363, 32100, 5419, 32100, 6878, 32100, 1128, 8976, 331, 32100, 592, 3949, 32100, 3292, 3, 390, 4648, 32100, 827, 8712, 32100, 3480, 297, 32100, 5419, 331, 6878, 32100, 331, 25522, 32100, 14670, 1681, 32100, 1128, 3, 390, 364, 1]}
{"src": "lossless online bayesian bagging . <sep> bagging frequently improves the predictive performance of a model . an online version has recently been introduced , which attempts to gain the benefits of an online algorithm while approximating regular bagging . however , regular online bagging is an approximation to its batch counterpart and so is not lossless with respect to the bagging operation . by operating under the bayesian paradigm , we introduce an online bayesian version of bagging which is exactly equivalent to the batch bayesian version , and thus when combined with a lossless learning algorithm gives a completely lossless online bagging algorithm . we also note that the bayesian formulation resolves a theoretical problem with bagging , produces less variability in its estimates , and can improve predictive performance for smaller data sets .", "tokenized_src": [1453, 924, 367, 10210, 15, 10488, 2182, 3896, 3, 5, 32100, 2182, 3896, 4344, 1172, 7, 8, 27875, 821, 13, 3, 9, 825, 3, 5, 46, 367, 988, 65, 1310, 118, 3665, 3, 6, 84, 9048, 12, 2485, 8, 1393, 13, 46, 367, 12628, 298, 1120, 12907, 603, 1014, 1646, 2182, 3896, 3, 5, 983, 3, 6, 1646, 367, 2182, 3896, 19, 46, 1120, 12907, 603, 257, 12, 165, 11587, 15473, 11, 78, 19, 59, 1453, 924, 28, 1445, 12, 8, 2182, 3896, 2986, 3, 5, 57, 2699, 365, 8, 10210, 15, 10488, 20491, 3, 6, 62, 4277, 46, 367, 10210, 15, 10488, 988, 13, 2182, 3896, 84, 19, 1776, 7072, 12, 8, 11587, 10210, 15, 10488, 988, 3, 6, 11, 2932, 116, 3334, 28, 3, 9, 1453, 924, 1036, 12628, 1527, 3, 9, 1551, 1453, 924, 367, 2182, 3896, 12628, 3, 5, 62, 92, 2232, 24, 8, 10210, 15, 10488, 20029, 7785, 7, 3, 9, 13605, 682, 28, 2182, 3896, 3, 6, 9560, 705, 27980, 16, 165, 10014, 3, 6, 11, 54, 1172, 27875, 821, 21, 2755, 331, 3369, 3, 5, 1], "trg": "bayesian bagging;bagging;online bagging;lossless learning algorithm;bayesian bootstrap;bootstrap;classification;classification tree;dirichlet distribution;mean squared prediction error", "tokenized_trg": [10210, 15, 10488, 2182, 3896, 32100, 2182, 3896, 32100, 367, 2182, 3896, 32100, 1453, 924, 1036, 12628, 32100, 10210, 15, 10488, 10427, 16081, 32100, 10427, 16081, 32100, 13774, 32100, 13774, 2195, 32100, 5141, 362, 1655, 3438, 32100, 1243, 2812, 26, 21332, 3505, 1]}
{"src": "a machine learning based approach for table detection on the web . <sep> table is a commonly used presentation scheme , especially for describing relational information . however , table understanding remains an open problem . in this paper , we consider the problem of table detection in web documents . its potential applications include web mining , knowledge management , and web content summarization and delivery to narrow bandwidth devices . we describe a machine learning based approach to classify each given table entity as either genuine or non genuine . various features re ecting the layout as well as content characteristics of tables are studied . in order to facilitate the training and evaluation of our table classi er , we designed a novel web document table ground truthing protocol and used it to build a large table ground truth database . the database consists of <digit> , <digit> html les collected from hundreds of di erent web sites and contains <digit> , <digit> leaf lt table gt elements , out of which <digit> , <digit> are genuine tables . experiments were conducted using the cross validation method and an f measure of <digit> <digit> % was achieved . categories and subject descriptors h . <digit> . <digit> information systems applications communications applications information browsers general terms algorithms", "tokenized_src": [3, 9, 1437, 1036, 3, 390, 1295, 21, 953, 10664, 30, 8, 765, 3, 5, 32100, 953, 19, 3, 9, 5871, 261, 3831, 5336, 3, 6, 902, 21, 3, 16012, 4689, 138, 251, 3, 5, 983, 3, 6, 953, 1705, 3048, 46, 539, 682, 3, 5, 16, 48, 1040, 3, 6, 62, 1099, 8, 682, 13, 953, 10664, 16, 765, 2691, 3, 5, 165, 1055, 1564, 560, 765, 5558, 3, 6, 1103, 758, 3, 6, 11, 765, 738, 4505, 1635, 1707, 11, 1929, 12, 5658, 19703, 1904, 3, 5, 62, 5530, 3, 9, 1437, 1036, 3, 390, 1295, 12, 853, 4921, 284, 787, 953, 10409, 38, 893, 7746, 42, 529, 7746, 3, 5, 796, 753, 3, 60, 3, 15, 75, 1222, 8, 5315, 38, 168, 38, 738, 6803, 13, 5056, 33, 7463, 3, 5, 16, 455, 12, 6758, 8, 761, 11, 5002, 13, 69, 953, 853, 23, 3, 49, 3, 6, 62, 876, 3, 9, 3714, 765, 1708, 953, 1591, 2827, 53, 10015, 11, 261, 34, 12, 918, 3, 9, 508, 953, 1591, 2827, 3501, 3, 5, 8, 3501, 3, 6848, 13, 32101, 3, 6, 32101, 3, 10500, 110, 4759, 45, 3986, 13, 1227, 3, 49, 295, 765, 1471, 11, 2579, 32101, 3, 6, 32101, 8384, 3, 40, 17, 953, 3, 122, 17, 2479, 3, 6, 91, 13, 84, 32101, 3, 6, 32101, 33, 7746, 5056, 3, 5, 12341, 130, 4468, 338, 8, 2269, 16148, 1573, 11, 46, 3, 89, 3613, 13, 32101, 32101, 3, 1454, 47, 5153, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1002, 1564, 5030, 1564, 251, 3509, 7, 879, 1353, 16783, 1], "trg": "machine learning;machine learning based approach;table detection;table detection;presentation;layout;table ground truthing protocol;algorithms;html document;content type;information retrieval;classifcation schemes;word group;decision tree;support vector machine;classifers;layout analysis", "tokenized_trg": [1437, 1036, 32100, 1437, 1036, 3, 390, 1295, 32100, 953, 10664, 32100, 953, 10664, 32100, 3831, 32100, 5315, 32100, 953, 1591, 2827, 53, 10015, 32100, 16783, 32100, 3, 10500, 1708, 32100, 738, 686, 32100, 251, 24515, 138, 32100, 853, 99, 75, 257, 15171, 32100, 1448, 563, 32100, 1357, 2195, 32100, 380, 12938, 1437, 32100, 853, 99, 277, 32100, 5315, 1693, 1]}
{"src": "low latency photon mapping using block hashing . <sep> for hardware accelerated rendering , photon mapping is especially useful for simulating caustic lighting effects on non lambertian surfaces . however , an efficient hardware algorithm for the computation of the k nearest neighbours to a sample point is required . existing algorithms are often based on recursive spatial subdivision techniques , such as kd trees . however , hardware implementation of a tree based algorithm would have a high latency , or would require a large cache to avoid this latency on average . we present a neighbourhood preserving hashing algorithm that is low latency and has sub linear access time . this algorithm is more amenable to fine scale parallelism than tree based recursive spatial subdivision , and maps well onto coherent block oriented pipelined memory access . these properties make the algorithm suitable for implementation using future programmable fragment shaders with only one stage of dependent texturing . categories and subject descriptors ( according to acm ccs ) i . <digit> . <digit> computer graphics three dimensional graphics and realism , color , shading , shadowing , and texture .", "tokenized_src": [731, 1480, 11298, 1202, 29, 14670, 338, 2463, 65, 107, 53, 3, 5, 32100, 21, 4214, 3, 26389, 18968, 3, 6, 1202, 29, 14670, 19, 902, 1934, 21, 108, 4115, 1014, 212, 302, 1225, 3598, 1951, 30, 529, 17871, 49, 12572, 8983, 3, 5, 983, 3, 6, 46, 2918, 4214, 12628, 21, 8, 29761, 13, 8, 3, 157, 13012, 14245, 7, 12, 3, 9, 3106, 500, 19, 831, 3, 5, 1895, 16783, 33, 557, 3, 390, 30, 3, 60, 15983, 757, 15208, 27444, 2097, 3, 6, 224, 38, 3, 157, 26, 3124, 3, 5, 983, 3, 6, 4214, 4432, 13, 3, 9, 2195, 3, 390, 12628, 133, 43, 3, 9, 306, 1480, 11298, 3, 6, 42, 133, 1457, 3, 9, 508, 11800, 12, 1792, 48, 1480, 11298, 30, 1348, 3, 5, 62, 915, 3, 9, 19704, 3, 22140, 65, 107, 53, 12628, 24, 19, 731, 1480, 11298, 11, 65, 769, 13080, 592, 97, 3, 5, 48, 12628, 19, 72, 183, 35, 179, 12, 1399, 2643, 8449, 159, 51, 145, 2195, 3, 390, 3, 60, 15983, 757, 15208, 27444, 3, 6, 11, 8111, 168, 2400, 28911, 2463, 3, 9442, 12045, 26, 2594, 592, 3, 5, 175, 2605, 143, 8, 12628, 3255, 21, 4432, 338, 647, 3, 7050, 179, 12071, 7891, 52, 7, 28, 163, 80, 1726, 13, 8976, 1499, 7920, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 41, 1315, 12, 3, 9, 75, 51, 3, 75, 75, 7, 3, 61, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 386, 3, 11619, 6484, 11, 3, 60, 6835, 3, 6, 945, 3, 6, 31788, 3, 6, 8552, 53, 3, 6, 11, 6519, 3, 5, 1], "trg": "photon mapping;block hashing;accelerator;knn;aknn;hashing techniques", "tokenized_trg": [1202, 29, 14670, 32100, 2463, 65, 107, 53, 32100, 30202, 32100, 3, 157, 29, 29, 32100, 3, 1639, 29, 29, 32100, 65, 107, 53, 2097, 1]}
{"src": "lower bounds competitive algorithms for online scheduling of unit size tasks to related machines . <sep> in this paper we study the problem of assigning unit size tasks to related machines when only limited online information is provided to each task . this is a general framework whose special cases are the classical multiple choice games for the assignment of unit size tasks to identical machines . the latter case was the subject of intensive research for the last decade . the problem is intriguing in the sense that the natural extensions of the greedy oblivious schedulers , which are known to achieve near optimal performance in the case of identical machines , are proved to perform quite poorly in the case of the related machines . in this work we present a rather surprising lower bound stating that any oblivious scheduler that assigns an arbitrary number of tasks to n related machines would need log n loglog n polls of machine loads per task , in order to achieve a constant competitive ratio versus the optimum offline assignment of the same input sequence to these machines . on the other hand , we prove that the missing information for an oblivious scheduler to perform almost optimally , is the amount of tasks to be inserted into the system . in particular , we provide an oblivious scheduler that only uses o ( loglog n ) polls , along with the additional information of the size of the input sequence , in order to achieve a constant competitive ratio vs . the optimum offline assignment . the philosophy of this scheduler is based on an interesting exploitation of the slowfit concept ( <digit> , <digit> , <digit> for a survey see <digit> , <digit> , <digit> ) for the assignment of the tasks to the related machines despite the restrictions on the provided online information , in combination with a layered induction argument for bounding the tails of the number of tasks passing from slower to faster machines . we finally use this oblivious scheduler as the core of an adaptive scheduler that does not demand the knowledge of the input sequence and yet achieves almost the same performance .", "tokenized_src": [1364, 8120, 7, 3265, 16783, 21, 367, 16131, 13, 1745, 812, 4145, 12, 1341, 4096, 3, 5, 32100, 16, 48, 1040, 62, 810, 8, 682, 13, 12317, 53, 1745, 812, 4145, 12, 1341, 4096, 116, 163, 1643, 367, 251, 19, 937, 12, 284, 2491, 3, 5, 48, 19, 3, 9, 879, 4732, 3, 2544, 534, 1488, 33, 8, 11702, 1317, 1160, 1031, 21, 8, 9587, 13, 1745, 812, 4145, 12, 12022, 4096, 3, 5, 8, 7722, 495, 47, 8, 1426, 13, 9786, 585, 21, 8, 336, 5112, 3, 5, 8, 682, 19, 19425, 16, 8, 1254, 24, 8, 793, 15176, 13, 8, 30337, 63, 3, 32, 7437, 19117, 2023, 52, 7, 3, 6, 84, 33, 801, 12, 1984, 1084, 6624, 821, 16, 8, 495, 13, 12022, 4096, 3, 6, 33, 9193, 12, 1912, 882, 17509, 16, 8, 495, 13, 8, 1341, 4096, 3, 5, 16, 48, 161, 62, 915, 3, 9, 1066, 10306, 1364, 8120, 3, 17211, 24, 136, 3, 32, 7437, 19117, 2023, 52, 24, 12317, 7, 46, 3, 26968, 381, 13, 4145, 12, 3, 29, 1341, 4096, 133, 174, 4303, 3, 29, 4303, 2152, 3, 29, 5492, 7, 13, 1437, 10460, 399, 2491, 3, 6, 16, 455, 12, 1984, 3, 9, 3917, 3265, 5688, 3, 8911, 8, 3, 18200, 13461, 9587, 13, 8, 337, 3785, 5932, 12, 175, 4096, 3, 5, 30, 8, 119, 609, 3, 6, 62, 4410, 24, 8, 3586, 251, 21, 46, 3, 32, 7437, 19117, 2023, 52, 12, 1912, 966, 6624, 120, 3, 6, 19, 8, 866, 13, 4145, 12, 36, 3, 19435, 139, 8, 358, 3, 5, 16, 1090, 3, 6, 62, 370, 46, 3, 32, 7437, 19117, 2023, 52, 24, 163, 2284, 3, 32, 41, 4303, 2152, 3, 29, 3, 61, 5492, 7, 3, 6, 590, 28, 8, 1151, 251, 13, 8, 812, 13, 8, 3785, 5932, 3, 6, 16, 455, 12, 1984, 3, 9, 3917, 3265, 5688, 3, 208, 7, 3, 5, 8, 3, 18200, 13461, 9587, 3, 5, 8, 8156, 13, 48, 2023, 52, 19, 3, 390, 30, 46, 1477, 3, 14475, 13, 8, 2684, 5616, 2077, 41, 32101, 3, 6, 32101, 3, 6, 32101, 21, 3, 9, 3719, 217, 32101, 3, 6, 32101, 3, 6, 32101, 3, 61, 21, 8, 9587, 13, 8, 4145, 12, 8, 1341, 4096, 3, 3565, 8, 9076, 30, 8, 937, 367, 251, 3, 6, 16, 2711, 28, 3, 9, 3, 21281, 16, 8291, 5464, 21, 8120, 53, 8, 9891, 7, 13, 8, 381, 13, 4145, 5792, 45, 17553, 12, 3627, 4096, 3, 5, 62, 2031, 169, 48, 3, 32, 7437, 19117, 2023, 52, 38, 8, 2583, 13, 46, 25326, 2023, 52, 24, 405, 59, 2173, 8, 1103, 13, 8, 3785, 5932, 11, 780, 1984, 7, 966, 8, 337, 821, 3, 5, 1], "trg": "lower bounds;scheduling;unit size task;related machines;related machines;online information;oblivious scheduler;input sequence;online load balancing;hops;limited information", "tokenized_trg": [1364, 8120, 7, 32100, 16131, 32100, 1745, 812, 2491, 32100, 1341, 4096, 32100, 1341, 4096, 32100, 367, 251, 32100, 3, 32, 7437, 19117, 2023, 52, 32100, 3785, 5932, 32100, 367, 4002, 3, 10810, 4733, 32100, 13652, 7, 32100, 1643, 251, 1]}
{"src": "machine learning for information architecture in a large governmental website . <sep> this paper describes ongoing research into the application of machine learning techniques for improving access to governmental information in complex digital libraries . under the auspices of the govstat project , our goal is to identify a small number of semantically valid concepts that adequately spans the intellectual domain of a collection . the goal of this discovery is twofold . first we desire a practical aid for information architects . second , automatically derived document concept relationships are a necessary precondition for real world deployment of many dynamic interfaces . the current study compares concept learning strategies based on three document representations keywords , titles , and full text . in statistical and user based studies , human created keywords provide significant improvements in concept learning over both title only and full text representations . categories and subject descriptors h . <digit> . <digit> information storage and retrieval digital libraries systems issues , user issues h . <digit> . <digit> information storage and retrieval information search and retrieval clustering general terms design , experimentation", "tokenized_src": [1437, 1036, 21, 251, 4648, 16, 3, 9, 508, 3, 18984, 475, 3, 5, 32100, 48, 1040, 8788, 4912, 585, 139, 8, 917, 13, 1437, 1036, 2097, 21, 4863, 592, 12, 3, 18984, 251, 16, 1561, 1125, 12256, 3, 5, 365, 8, 403, 6174, 15, 7, 13, 8, 3, 9527, 8547, 516, 3, 6, 69, 1288, 19, 12, 2862, 3, 9, 422, 381, 13, 27632, 1427, 3982, 6085, 24, 22538, 8438, 7, 8, 8445, 3303, 13, 3, 9, 1232, 3, 5, 8, 1288, 13, 48, 9087, 19, 192, 10533, 3, 5, 166, 62, 3667, 3, 9, 3236, 3052, 21, 251, 19186, 3, 5, 511, 3, 6, 3269, 3, 9942, 1708, 2077, 3079, 33, 3, 9, 1316, 554, 17558, 21, 490, 296, 12001, 13, 186, 4896, 3459, 7, 3, 5, 8, 750, 810, 4048, 7, 2077, 1036, 3266, 3, 390, 30, 386, 1708, 6497, 7, 12545, 3, 6, 8342, 3, 6, 11, 423, 1499, 3, 5, 16, 11775, 11, 1139, 3, 390, 2116, 3, 6, 936, 990, 12545, 370, 1516, 6867, 16, 2077, 1036, 147, 321, 2233, 163, 11, 423, 1499, 6497, 7, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 1125, 12256, 1002, 807, 3, 6, 1139, 807, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 9068, 53, 879, 1353, 408, 3, 6, 5016, 257, 1], "trg": "machine learning;information architecture;information architecture;digital libraries;document representation;clustering;interface design;document classification;bls;topic discovery;relational browser", "tokenized_trg": [1437, 1036, 32100, 251, 4648, 32100, 251, 4648, 32100, 1125, 12256, 32100, 1708, 6497, 32100, 9068, 53, 32100, 3459, 408, 32100, 1708, 13774, 32100, 3, 115, 40, 7, 32100, 2859, 9087, 32100, 4689, 138, 3509, 1]}
{"src": "machine learning in dna microarray analysis for cancer classification . <sep> the development of microarray technology has supplied a large volume of data to many fields . in particular , it has been applied to prediction and diagnosis of cancer , so that it expectedly helps us to exactly predict and diagnose cancer . to precisely classify cancer we have to select genes related to cancer because extracted genes from microarray have many noises . in this paper , we attempt to explore many features and classifiers using three benchmark datasets to systematically evaluate the performances of the feature selection methods and machine learning classifiers . three benchmark datasets are leukemia cancer dataset , colon cancer dataset and lymphoma cancer data set . pearson ' s and spearman ' s correlation coefficients , euclidean distance , cosine coefficient , information gain , mutual information and signal to noise ratio have been used for feature selection . multi layer perceptron , k nearest neighbour , support vector machine and structure adaptive selforganizing map have been used for classification . also , we have combined the classifiers to improve the performance of classification . experimental results show that the ensemble with several basis classifiers produces the best recognition rate on the benchmark dataset .", "tokenized_src": [1437, 1036, 16, 3, 26, 29, 9, 2179, 10116, 63, 1693, 21, 1874, 13774, 3, 5, 32100, 8, 606, 13, 2179, 10116, 63, 748, 65, 8794, 3, 9, 508, 2908, 13, 331, 12, 186, 4120, 3, 5, 16, 1090, 3, 6, 34, 65, 118, 2930, 12, 21332, 11, 8209, 13, 1874, 3, 6, 78, 24, 34, 1644, 120, 1691, 178, 12, 1776, 9689, 11, 18730, 1874, 3, 5, 12, 11185, 853, 4921, 1874, 62, 43, 12, 1738, 13485, 1341, 12, 1874, 250, 21527, 13485, 45, 2179, 10116, 63, 43, 186, 4661, 7, 3, 5, 16, 48, 1040, 3, 6, 62, 3332, 12, 2075, 186, 753, 11, 853, 7903, 7, 338, 386, 15705, 17953, 7, 12, 3, 28657, 6825, 8, 7357, 13, 8, 1451, 1801, 2254, 11, 1437, 1036, 853, 7903, 7, 3, 5, 386, 15705, 17953, 7, 33, 90, 1598, 11658, 1874, 17953, 3, 6, 6718, 1874, 17953, 11, 25049, 32, 51, 9, 1874, 331, 356, 3, 5, 3, 29892, 106, 3, 31, 3, 7, 11, 23887, 348, 3, 31, 3, 7, 18712, 27742, 7, 3, 6, 3, 15, 76, 14758, 221, 152, 2357, 3, 6, 576, 7, 630, 27742, 3, 6, 251, 2485, 3, 6, 8543, 251, 11, 3240, 12, 4661, 5688, 43, 118, 261, 21, 1451, 1801, 3, 5, 1249, 3760, 399, 6873, 52, 106, 3, 6, 3, 157, 13012, 14245, 3, 6, 380, 12938, 1437, 11, 1809, 25326, 1044, 17939, 53, 2828, 43, 118, 261, 21, 13774, 3, 5, 92, 3, 6, 62, 43, 3334, 8, 853, 7903, 7, 12, 1172, 8, 821, 13, 13774, 3, 5, 11082, 772, 504, 24, 8, 8784, 28, 633, 1873, 853, 7903, 7, 9560, 8, 200, 5786, 1080, 30, 8, 15705, 17953, 3, 5, 1], "trg": "classification;feature selection;knn;svm;gene expression profile;sasom;biological data mining;mlp;ensemble classifier", "tokenized_trg": [13774, 32100, 1451, 1801, 32100, 3, 157, 29, 29, 32100, 3, 7, 208, 51, 32100, 6510, 3893, 3278, 32100, 3, 7, 9, 10348, 32100, 11432, 331, 5558, 32100, 3, 51, 40, 102, 32100, 8784, 853, 7903, 1]}
{"src": "machine learning in low level microarray analysis . <sep> machine learning and data mining have found a multitude of successful applications in microarray analysis , with gene clustering and classification of tissue samples being widely cited examples . low level microarray analysis often associated with the pre processing stage within the microarray life cycle has increasingly become an area of active research , traditionally involving techniques from classical statistics . this paper explores opportunities for the application of machine learning and data mining methods to several important low level microarray analysis problems monitoring gene expression , transcript discovery , genotyping and resequencing . relevant methods and ideas from the machine learning community include semi supervised learning , learning from heterogeneous data , and incremental learning .", "tokenized_src": [1437, 1036, 16, 731, 593, 2179, 10116, 63, 1693, 3, 5, 32100, 1437, 1036, 11, 331, 5558, 43, 435, 3, 9, 16635, 13, 1574, 1564, 16, 2179, 10116, 63, 1693, 3, 6, 28, 6510, 9068, 53, 11, 13774, 13, 6316, 5977, 271, 5456, 3, 11675, 4062, 3, 5, 731, 593, 2179, 10116, 63, 1693, 557, 1968, 28, 8, 554, 3026, 1726, 441, 8, 2179, 10116, 63, 280, 4005, 65, 5684, 582, 46, 616, 13, 1676, 585, 3, 6, 16910, 3, 6475, 2097, 45, 11702, 7475, 3, 5, 48, 1040, 2075, 7, 1645, 21, 8, 917, 13, 1437, 1036, 11, 331, 5558, 2254, 12, 633, 359, 731, 593, 2179, 10116, 63, 1693, 982, 4891, 6510, 3893, 3, 6, 20146, 9087, 3, 6, 31595, 53, 11, 3, 60, 7, 15, 835, 4733, 3, 5, 2193, 2254, 11, 912, 45, 8, 1437, 1036, 573, 560, 4772, 3, 23313, 1036, 3, 6, 1036, 45, 26481, 729, 15, 1162, 331, 3, 6, 11, 28351, 1036, 3, 5, 1], "trg": "low level microarray analysis;microarray;data mining;statistics;transcript discovery;genotyping;semi supervised learning;learning from heterogeneous data;heterogeneous data;incremental learning;transductive learning;re sequencing;gene expression estimation;low level analysis", "tokenized_trg": [731, 593, 2179, 10116, 63, 1693, 32100, 2179, 10116, 63, 32100, 331, 5558, 32100, 7475, 32100, 20146, 9087, 32100, 31595, 53, 32100, 4772, 3, 23313, 1036, 32100, 1036, 45, 26481, 729, 15, 1162, 331, 32100, 26481, 729, 15, 1162, 331, 32100, 28351, 1036, 32100, 3017, 28668, 1036, 32100, 3, 60, 30117, 32100, 6510, 3893, 22781, 32100, 731, 593, 1693, 1]}
{"src": "measuring cohesion of packages in ada95 . <sep> ada95 is an object oriented programming language . pack ages are basic program units in ada <digit> to support oo programming , which allow the specification of groups of logically related entities . thus , the cohesion of a package is mainly about how tightly the entities are encapsulated in the package . this paper discusses the relationships among these entities based on dependence analysis and presents the properties to obtain these dependencies . based on these , the paper proposes an approach to measure the package cohesion , which satisfies the properties that a good measure should have . categories and subject descriptors d . <digit> . <digit> software engineering metrics performance measures . general terms measurement .", "tokenized_src": [11297, 576, 88, 1938, 13, 6307, 16, 3, 9, 26, 9, 3301, 3, 5, 32100, 3, 9, 26, 9, 3301, 19, 46, 3735, 3, 9442, 6020, 1612, 3, 5, 4153, 3, 2568, 33, 1857, 478, 3173, 16, 3, 9, 26, 9, 32101, 12, 380, 3, 32, 32, 6020, 3, 6, 84, 995, 8, 16726, 13, 1637, 13, 3, 6207, 120, 1341, 12311, 3, 5, 2932, 3, 6, 8, 576, 88, 1938, 13, 3, 9, 2642, 19, 3, 4894, 81, 149, 20994, 8, 12311, 33, 3, 35, 30080, 920, 16, 8, 2642, 3, 5, 48, 1040, 17212, 7, 8, 3079, 859, 175, 12311, 3, 390, 30, 24264, 1693, 11, 6621, 8, 2605, 12, 3442, 175, 6002, 11573, 3, 5, 3, 390, 30, 175, 3, 6, 8, 1040, 4230, 7, 46, 1295, 12, 3613, 8, 2642, 576, 88, 1938, 3, 6, 84, 3, 9275, 7, 8549, 7, 8, 2605, 24, 3, 9, 207, 3613, 225, 43, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 889, 3867, 15905, 821, 3629, 3, 5, 879, 1353, 9753, 3, 5, 1], "trg": "measurement;measure;cohesion;cohesion;ada95;object oriented;oo programming;dependence", "tokenized_trg": [9753, 32100, 3613, 32100, 576, 88, 1938, 32100, 576, 88, 1938, 32100, 3, 9, 26, 9, 3301, 32100, 3735, 3, 9442, 32100, 3, 32, 32, 6020, 32100, 24264, 1]}
{"src": "measurement of e government impact existing practices and shortcomings . <sep> public administrations of all over the world invest an enormous amount of resources in e government . how the success of e government can be measured is often not clear . e government involves many aspects of public administration ranging from introducing new technology to business process ( re ) engineering . the measurement of the effectiveness of e government is a complicated endeavor . in this paper current practices of e government measurement are evaluated . a number of limitations of current measurement instruments are identified . measurement focuses predominantly on the front ( primarily counting the number of services offered ) and not on the back office processes . interpretation of measures is difficult as all existing measurement instruments lack a framework depicting the relationships between the indicators and the use of resources . the different measures may fit the aim of the owners of the e governmental services , however , due to conflicting aims and priorities little agreement exists on a uniform set of measures , needed for comparison of e government development . traditional methods of measuring e government impact and resource usage fall short of the richness of data required for the effective evaluation of e government strategies . categories and subject descriptors j . <digit> administrative data processing administrative data processing government k . <digit> . <digit> computing milieux computers and society electronic commerce general terms management , measurement , performance , standardization", "tokenized_src": [9753, 13, 3, 15, 789, 1113, 1895, 2869, 11, 31221, 3, 5, 32100, 452, 3602, 7, 13, 66, 147, 8, 296, 4032, 46, 10933, 866, 13, 1438, 16, 3, 15, 789, 3, 5, 149, 8, 1269, 13, 3, 15, 789, 54, 36, 8413, 19, 557, 59, 964, 3, 5, 3, 15, 789, 5806, 186, 3149, 13, 452, 3602, 3, 6836, 45, 3, 13505, 126, 748, 12, 268, 433, 41, 3, 60, 3, 61, 3867, 3, 5, 8, 9753, 13, 8, 9570, 13, 3, 15, 789, 19, 3, 9, 6446, 14310, 3, 5, 16, 48, 1040, 750, 2869, 13, 3, 15, 789, 9753, 33, 14434, 3, 5, 3, 9, 381, 13, 10005, 13, 750, 9753, 7778, 33, 4313, 3, 5, 9753, 3, 6915, 24448, 30, 8, 851, 41, 3, 5325, 15899, 8, 381, 13, 364, 1860, 3, 61, 11, 59, 30, 8, 223, 828, 2842, 3, 5, 8868, 13, 3629, 19, 1256, 38, 66, 1895, 9753, 7778, 2136, 3, 9, 4732, 9850, 53, 8, 3079, 344, 8, 15600, 11, 8, 169, 13, 1438, 3, 5, 8, 315, 3629, 164, 1400, 8, 2674, 13, 8, 2713, 13, 8, 3, 15, 3, 18984, 364, 3, 6, 983, 3, 6, 788, 12, 4129, 53, 3, 8345, 11, 12697, 385, 2791, 8085, 30, 3, 9, 7117, 356, 13, 3629, 3, 6, 906, 21, 4993, 13, 3, 15, 789, 606, 3, 5, 1435, 2254, 13, 11297, 3, 15, 789, 1113, 11, 3487, 4742, 1590, 710, 13, 8, 2354, 655, 13, 331, 831, 21, 8, 1231, 5002, 13, 3, 15, 789, 3266, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 354, 3, 5, 32101, 6601, 331, 3026, 6601, 331, 3026, 789, 3, 157, 3, 5, 32101, 3, 5, 32101, 10937, 12270, 226, 7827, 11, 2710, 3031, 12794, 879, 1353, 758, 3, 6, 9753, 3, 6, 821, 3, 6, 1068, 1707, 1], "trg": "measurement;e government;e government;public administration;business process;evaluation;benchmark;interoperability;architectures;law", "tokenized_trg": [9753, 32100, 3, 15, 789, 32100, 3, 15, 789, 32100, 452, 3602, 32100, 268, 433, 32100, 5002, 32100, 15705, 32100, 1413, 32, 883, 2020, 32100, 4648, 7, 32100, 973, 1]}
{"src": "minimizing average flow time on related machines . <sep> we give the first on line poly logarithmic competitve algorithm for minimizing average flow time with preemption on related machines , i . e . , when machines can have different speeds . this also yields the first poly logarithmic polynomial time approximation algorithm for this problem . more specifically , we give an o ( log <digit> p log s ) competitive algorithm , where p is the ratio of the biggest and the smallest processing time of a job , and s is the ratio of the highest and the smallest speed of a machine . our algorithm also has the nice property that it is non migratory . the scheduling algorithm is based on the concept of making jobs wait for a long enough time before scheduling them on slow machines . categories and subject descriptors f . <digit> . <digit> analysis of algorithms and problem complexity nonnumerical algorithms and problems sequencing and scheduling general terms algorithms", "tokenized_src": [3, 28807, 1348, 2537, 97, 30, 1341, 4096, 3, 5, 32100, 62, 428, 8, 166, 30, 689, 4251, 4303, 9, 30922, 3113, 3, 287, 19427, 162, 12628, 21, 3, 28807, 1348, 2537, 97, 28, 554, 29881, 30, 1341, 4096, 3, 6, 3, 23, 3, 5, 3, 15, 3, 5, 3, 6, 116, 4096, 54, 43, 315, 13107, 3, 5, 48, 92, 6339, 7, 8, 166, 4251, 4303, 9, 30922, 3113, 4251, 3114, 23, 138, 97, 1120, 12907, 603, 257, 12628, 21, 48, 682, 3, 5, 72, 3346, 3, 6, 62, 428, 46, 3, 32, 41, 4303, 32101, 3, 102, 4303, 3, 7, 3, 61, 3265, 12628, 3, 6, 213, 3, 102, 19, 8, 5688, 13, 8, 2630, 11, 8, 3, 17924, 3026, 97, 13, 3, 9, 613, 3, 6, 11, 3, 7, 19, 8, 5688, 13, 8, 2030, 11, 8, 3, 17924, 1634, 13, 3, 9, 1437, 3, 5, 69, 12628, 92, 65, 8, 1245, 785, 24, 34, 19, 529, 3, 10673, 52, 6546, 3, 5, 8, 16131, 12628, 19, 3, 390, 30, 8, 2077, 13, 492, 2476, 1749, 21, 3, 9, 307, 631, 97, 274, 16131, 135, 30, 2684, 4096, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 89, 3, 5, 32101, 3, 5, 32101, 1693, 13, 16783, 11, 682, 11641, 529, 5525, 49, 1950, 16783, 11, 982, 30117, 11, 16131, 879, 1353, 16783, 1], "trg": "average flow time;flow time;related machines;preemption;approximation algorithms;processing time;scheduling;scheduling;non migratory algorithm;competitive ratio;multiprocessor environment;poly logarithmic factor", "tokenized_trg": [1348, 2537, 97, 32100, 2537, 97, 32100, 1341, 4096, 32100, 554, 29881, 32100, 1120, 12907, 603, 257, 16783, 32100, 3026, 97, 32100, 16131, 32100, 16131, 32100, 529, 3, 10673, 52, 6546, 12628, 32100, 3265, 5688, 32100, 1249, 15056, 127, 1164, 32100, 4251, 4303, 9, 30922, 3113, 2945, 1]}
{"src": "modeling and predicting personal information dissemination behavior . <sep> in this paper , we propose a new way to automatically model and predict human behavior of receiving and disseminating information by analyzing the contact and content of personal communications . a personal profile , called communitynet , is established for each individual based on a novel algorithm incorporating contact , content , and time information simultaneously . it can be used for personal social capital management . clusters of communitynets provide a view of informal networks for organization management . our new algorithm is developed based on the combination of dynamic algorithms in the social network field and the semantic content classification methods in the natural language processing and machine learning literatures . we tested communitynets on the enron email corpus and report experimental results including filtering , prediction , and recommendation capabilities . we show that the personal behavior and intention are somewhat predictable based on these models . for instance , quot to whom a person is going to send a specific email quot can be predicted by one ' s personal social network and content analysis . experimental results show the prediction accuracy of the proposed adaptive algorithm is <digit> % better than the social network based predictions , and is <digit> % better than an aggregated model based on latent dirichlet allocation with social network enhancement . two online demo systems we developed that allow interactive exploration of communitynet are also discussed . categories and subject descriptors i . <digit> . <digit> artificial intelligence learning general terms algorithms , experimentation", "tokenized_src": [15309, 11, 3, 29856, 525, 251, 31363, 3889, 3, 5, 32100, 16, 48, 1040, 3, 6, 62, 4230, 3, 9, 126, 194, 12, 3269, 825, 11, 9689, 936, 3889, 13, 4281, 11, 1028, 7, 15, 1109, 1014, 251, 57, 3, 19175, 8, 574, 11, 738, 13, 525, 5030, 3, 5, 3, 9, 525, 3278, 3, 6, 718, 573, 1582, 3, 6, 19, 2127, 21, 284, 928, 3, 390, 30, 3, 9, 3714, 12628, 3, 18218, 574, 3, 6, 738, 3, 6, 11, 97, 251, 11609, 3, 5, 34, 54, 36, 261, 21, 525, 569, 1784, 758, 3, 5, 9068, 7, 13, 573, 1582, 7, 370, 3, 9, 903, 13, 15347, 5275, 21, 1470, 758, 3, 5, 69, 126, 12628, 19, 1597, 3, 390, 30, 8, 2711, 13, 4896, 16783, 16, 8, 569, 1229, 1057, 11, 8, 27632, 738, 13774, 2254, 16, 8, 793, 1612, 3026, 11, 1437, 1036, 6678, 7, 3, 5, 62, 5285, 573, 1582, 7, 30, 8, 3, 35, 52, 106, 791, 11736, 302, 11, 934, 11082, 772, 379, 4191, 53, 3, 6, 21332, 3, 6, 11, 10919, 5644, 3, 5, 62, 504, 24, 8, 525, 3889, 11, 8762, 33, 6309, 24839, 3, 390, 30, 175, 2250, 3, 5, 21, 3421, 3, 6, 3, 8270, 12, 4068, 3, 9, 568, 19, 352, 12, 1299, 3, 9, 806, 791, 3, 8270, 54, 36, 15439, 57, 80, 3, 31, 3, 7, 525, 569, 1229, 11, 738, 1693, 3, 5, 11082, 772, 504, 8, 21332, 7452, 13, 8, 4382, 25326, 12628, 19, 32101, 3, 1454, 394, 145, 8, 569, 1229, 3, 390, 20099, 3, 6, 11, 19, 32101, 3, 1454, 394, 145, 46, 12955, 26, 825, 3, 390, 30, 50, 4669, 5141, 362, 1655, 17127, 28, 569, 1229, 15220, 3, 5, 192, 367, 8698, 1002, 62, 1597, 24, 995, 6076, 9740, 13, 573, 1582, 33, 92, 5172, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 23, 3, 5, 32101, 3, 5, 32101, 7353, 6123, 1036, 879, 1353, 16783, 3, 6, 5016, 257, 1], "trg": "information dissemination;user behavior modeling;personal information management", "tokenized_trg": [251, 31363, 32100, 1139, 3889, 15309, 32100, 525, 251, 758, 1]}
{"src": "modeling behavioral patterns of concurrent objects using petri nets . <sep> object oriented software development practices are being rapidly adopted within increasingly complex systems , including reactive , real time and concurrent system applications . while data modeling is performed very well under current object oriented development practices , behavioral modeling necessary to capture critical information in real time , reactive , and concurrent systems is often lacking . addressing this deficiency , we offer an approach for modeling and analyzing concurrent object oriented software designs through the use of behavioral design patterns , allowing us to map stereotyped uml objects to colored petri net ( cpn ) representations in the form of reusable templates . the resulting cpns are then used to model and analyze behavioral properties of the software architecture , applying the results of the analysis to the original software design . categories and subject descriptors d . <digit> . <digit> software engineering design tools and techniques , object oriented design methods , petri nets . general terms performance , design , reliability", "tokenized_src": [15309, 17340, 4264, 13, 18964, 4820, 338, 158, 1788, 3134, 7, 3, 5, 32100, 3735, 3, 9442, 889, 606, 2869, 33, 271, 7313, 7546, 441, 5684, 1561, 1002, 3, 6, 379, 28360, 3, 6, 490, 97, 11, 18964, 358, 1564, 3, 5, 298, 331, 15309, 19, 3032, 182, 168, 365, 750, 3735, 3, 9442, 606, 2869, 3, 6, 17340, 15309, 1316, 12, 4105, 2404, 251, 16, 490, 97, 3, 6, 28360, 3, 6, 11, 18964, 1002, 19, 557, 16914, 3, 5, 3, 14198, 48, 20, 4638, 23, 4392, 3, 6, 62, 462, 46, 1295, 21, 15309, 11, 3, 19175, 18964, 3735, 3, 9442, 889, 2888, 190, 8, 169, 13, 17340, 408, 4264, 3, 6, 3, 3232, 178, 12, 2828, 26524, 26, 561, 40, 4820, 12, 11999, 158, 1788, 3134, 41, 3, 75, 102, 29, 3, 61, 6497, 7, 16, 8, 607, 13, 3, 28147, 7405, 3, 5, 8, 3, 5490, 3, 75, 102, 29, 7, 33, 258, 261, 12, 825, 11, 8341, 17340, 2605, 13, 8, 889, 4648, 3, 6, 6247, 8, 772, 13, 8, 1693, 12, 8, 926, 889, 408, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 889, 3867, 408, 1339, 11, 2097, 3, 6, 3735, 3, 9442, 408, 2254, 3, 6, 158, 1788, 3134, 7, 3, 5, 879, 1353, 821, 3, 6, 408, 3, 6, 10581, 1], "trg": "behavioral design patterns;colored petri nets;software architecture;comet", "tokenized_trg": [17340, 408, 4264, 32100, 11999, 158, 1788, 3134, 7, 32100, 889, 4648, 32100, 369, 17, 1]}
{"src": "a new approach to intranet search based on information extraction . <sep> this paper is concerned with intranet search ' . by intranet search , we mean searching for information on an intranet within an organization . we have found that search needs on an intranet can be categorized into types , through an analysis of survey results and an analysis of search log data . the types include searching for definitions , persons , experts , and homepages . traditional information retrieval only focuses on search of relevant documents , but not on search of special types of information . we propose a new approach to intranet search in which we search for information in each of the special types , in addition to the traditional relevance search . information extraction technologies can play key roles in such kind of search by type ' approach , because we must first extract from the documents the necessary information in each type . we have developed an intranet search system called information desk ' . in the system , we try to address the most important types of search first finding term definitions , homepages of groups or topics , employees ' personal information and experts on topics . for each type of search , we use information extraction technologies to extract , fuse , and summarize information in advance . the system is in operation on the intranet of microsoft and receives accesses from about <digit> employees per month . feedbacks from users and system logs show that users consider the approach useful and the system can really help people to find information . this paper describes the architecture , features , component technologies , and evaluation results of the system . categories and subject descriptors h . <digit> . <digit> information storage and retrieval information search and retrieval search process i . <digit> . m document and text processing miscellaneous general terms algorithms , experimentation , human factors", "tokenized_src": [3, 9, 126, 1295, 12, 6344, 1582, 960, 3, 390, 30, 251, 16629, 3, 5, 32100, 48, 1040, 19, 4376, 28, 6344, 1582, 960, 3, 31, 3, 5, 57, 6344, 1582, 960, 3, 6, 62, 1243, 4549, 21, 251, 30, 46, 6344, 1582, 441, 46, 1470, 3, 5, 62, 43, 435, 24, 960, 523, 30, 46, 6344, 1582, 54, 36, 3, 28295, 139, 1308, 3, 6, 190, 46, 1693, 13, 3719, 772, 11, 46, 1693, 13, 960, 4303, 331, 3, 5, 8, 1308, 560, 4549, 21, 4903, 7, 3, 6, 7609, 3, 6, 2273, 3, 6, 11, 22844, 7, 3, 5, 1435, 251, 24515, 138, 163, 3, 6915, 30, 960, 13, 2193, 2691, 3, 6, 68, 59, 30, 960, 13, 534, 1308, 13, 251, 3, 5, 62, 4230, 3, 9, 126, 1295, 12, 6344, 1582, 960, 16, 84, 62, 960, 21, 251, 16, 284, 13, 8, 534, 1308, 3, 6, 16, 811, 12, 8, 1435, 20208, 960, 3, 5, 251, 16629, 2896, 54, 577, 843, 6270, 16, 224, 773, 13, 960, 57, 686, 3, 31, 1295, 3, 6, 250, 62, 398, 166, 5819, 45, 8, 2691, 8, 1316, 251, 16, 284, 686, 3, 5, 62, 43, 1597, 46, 6344, 1582, 960, 358, 718, 251, 4808, 3, 31, 3, 5, 16, 8, 358, 3, 6, 62, 653, 12, 1115, 8, 167, 359, 1308, 13, 960, 166, 2342, 1657, 4903, 7, 3, 6, 22844, 7, 13, 1637, 42, 4064, 3, 6, 1652, 3, 31, 525, 251, 11, 2273, 30, 4064, 3, 5, 21, 284, 686, 13, 960, 3, 6, 62, 169, 251, 16629, 2896, 12, 5819, 3, 6, 17165, 3, 6, 11, 21603, 251, 16, 3245, 3, 5, 8, 358, 19, 16, 2986, 30, 8, 6344, 1582, 13, 3, 30574, 11, 911, 7, 592, 15, 7, 45, 81, 32101, 1652, 399, 847, 3, 5, 3160, 7, 45, 1105, 11, 358, 4303, 7, 504, 24, 1105, 1099, 8, 1295, 1934, 11, 8, 358, 54, 310, 199, 151, 12, 253, 251, 3, 5, 48, 1040, 8788, 8, 4648, 3, 6, 753, 3, 6, 3876, 2896, 3, 6, 11, 5002, 772, 13, 8, 358, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 960, 433, 3, 23, 3, 5, 32101, 3, 5, 3, 51, 1708, 11, 1499, 3026, 1817, 7125, 8102, 1162, 879, 1353, 16783, 3, 6, 5016, 257, 3, 6, 936, 2580, 1], "trg": "intranet search;intranet search;information extraction;search needs;information retrieval;types of information;information desk;architecture;features;component technologies;algorithms;experimentation;human factors;definition search;expert finding;metadata extraction", "tokenized_trg": [6344, 1582, 960, 32100, 6344, 1582, 960, 32100, 251, 16629, 32100, 960, 523, 32100, 251, 24515, 138, 32100, 1308, 13, 251, 32100, 251, 4808, 32100, 4648, 32100, 753, 32100, 3876, 2896, 32100, 16783, 32100, 5016, 257, 32100, 936, 2580, 32100, 4903, 960, 32100, 2205, 2342, 32100, 26686, 16629, 1]}
{"src": "modeling node compromise spread in wireless sensor networks using epidemic theory . <sep> motivated by recent surfacing viruses that can spread over the air interfaces , in this paper , we investigate the potential disastrous threat of node compromise spreading in wireless sensor networks . originating from a single infected node , we assume such a compromise can propagate to other sensor nodes via communication and preestablished mutual trust . we focus on the possible epidemic breakout of such propagations where the whole network may fall victim to the attack . based on epidemic theory , we model and analyze this spreading process and identify key factors determining potential outbreaks . in particular , we perform our study on random graphs precisely constructed according to the parameters of the network , such as distance , key sharing constrained communication and node recovery , thereby reflecting the true characteristics therein . the analytical results provide deep insights in designing potential defense strategies against this threat . furthermore , through extensive simulations , we validate our model and perform investigations on the system dynamics . index terms sensor networks , epidemiology , random key predistribution , random graph .", "tokenized_src": [15309, 150, 221, 12326, 3060, 16, 5419, 7824, 5275, 338, 24878, 4516, 3, 5, 32100, 11361, 57, 1100, 3, 29681, 19601, 24, 54, 3060, 147, 8, 799, 3459, 7, 3, 6, 16, 48, 1040, 3, 6, 62, 9127, 8, 1055, 29276, 5888, 13, 150, 221, 12326, 16436, 16, 5419, 7824, 5275, 3, 5, 3, 31433, 45, 3, 9, 712, 16, 89, 7633, 150, 221, 3, 6, 62, 5344, 224, 3, 9, 12326, 54, 17554, 342, 12, 119, 7824, 150, 1395, 1009, 1901, 11, 554, 24109, 8543, 2019, 3, 5, 62, 992, 30, 8, 487, 24878, 26941, 13, 224, 17554, 1628, 213, 8, 829, 1229, 164, 1590, 7584, 12, 8, 3211, 3, 5, 3, 390, 30, 24878, 4516, 3, 6, 62, 825, 11, 8341, 48, 16436, 433, 11, 2862, 843, 2580, 3, 11682, 1055, 22494, 7, 3, 5, 16, 1090, 3, 6, 62, 1912, 69, 810, 30, 6504, 8373, 7, 11185, 8520, 1315, 12, 8, 8755, 13, 8, 1229, 3, 6, 224, 38, 2357, 3, 6, 843, 2178, 975, 22418, 1901, 11, 150, 221, 3938, 3, 6, 3, 12550, 19124, 8, 1176, 6803, 132, 77, 3, 5, 8, 18355, 772, 370, 1659, 7639, 16, 8296, 1055, 4453, 3266, 581, 48, 5888, 3, 5, 856, 3706, 3, 6, 190, 3616, 11108, 7, 3, 6, 62, 16742, 69, 825, 11, 1912, 17032, 30, 8, 358, 14966, 3, 5, 5538, 1353, 7824, 5275, 3, 6, 29969, 1863, 3, 6, 6504, 843, 554, 26, 159, 5135, 1575, 3, 6, 6504, 8373, 3, 5, 1], "trg": "sensor networks;random graph;epidemiology;random key predistribution", "tokenized_trg": [7824, 5275, 32100, 6504, 8373, 32100, 29969, 1863, 32100, 6504, 843, 554, 26, 159, 5135, 1575, 1]}
{"src": "modelling adversaries and security objectives for routing protocols in wireless sensor networks . <sep> the literature is very broad considering routing protocols in wireless sensor networks ( wsns ) . however , security of these routing protocols has fallen beyond the scope so far . routing is a fundamental functionality in wireless networks , thus hostile interventions aiming to disrupt and degrade the routing service have a serious impact on the overall operation of the entire network . in order to analyze the security of routing protocols in a precise and rigorous way , we propose a formal framework encompassing the definition of an adversary model as well as the general definition of secure routing in sensor networks . both definitions take into account the feasible goals and capabilities of an adversary in sensor environments and the variety of sensor routing protocols . in spirit , our formal model is based on the simulation paradigm that is a successfully used technique to prove the security of various cryptographic protocols . however , we also highlight some differences between our model and other models that have been proposed for wired or wireless networks . finally , we illustrate the practical usage of our model by presenting the formal description of a simple attack against an authenticated routing protocol , which is based on the well known tinyos routing . categories and subject descriptors c . <digit> . <digit> computer systems organization computer communication networks network protocols general terms algorithms , design , security", "tokenized_src": [24716, 23210, 725, 11, 1034, 7233, 21, 22764, 18870, 16, 5419, 7824, 5275, 3, 5, 32100, 8, 6678, 19, 182, 4358, 4014, 22764, 18870, 16, 5419, 7824, 5275, 41, 3, 210, 7, 29, 7, 3, 61, 3, 5, 983, 3, 6, 1034, 13, 175, 22764, 18870, 65, 9717, 1909, 8, 7401, 78, 623, 3, 5, 22764, 19, 3, 9, 4431, 6730, 16, 5419, 5275, 3, 6, 2932, 24550, 14418, 3, 19874, 12, 23773, 11, 20, 6801, 8, 22764, 313, 43, 3, 9, 2261, 1113, 30, 8, 1879, 2986, 13, 8, 1297, 1229, 3, 5, 16, 455, 12, 8341, 8, 1034, 13, 22764, 18870, 16, 3, 9, 9272, 11, 17577, 194, 3, 6, 62, 4230, 3, 9, 4727, 4732, 3, 30595, 8, 4903, 13, 46, 23210, 63, 825, 38, 168, 38, 8, 879, 4903, 13, 2451, 22764, 16, 7824, 5275, 3, 5, 321, 4903, 7, 240, 139, 905, 8, 20218, 1766, 11, 5644, 13, 46, 23210, 63, 16, 7824, 8258, 11, 8, 1196, 13, 7824, 22764, 18870, 3, 5, 16, 3564, 3, 6, 69, 4727, 825, 19, 3, 390, 30, 8, 11108, 20491, 24, 19, 3, 9, 4234, 261, 3317, 12, 4410, 8, 1034, 13, 796, 17620, 14797, 18870, 3, 5, 983, 3, 6, 62, 92, 6481, 128, 5859, 344, 69, 825, 11, 119, 2250, 24, 43, 118, 4382, 21, 4107, 26, 42, 5419, 5275, 3, 5, 2031, 3, 6, 62, 11485, 8, 3236, 4742, 13, 69, 825, 57, 3, 12072, 8, 4727, 4210, 13, 3, 9, 650, 3211, 581, 46, 6876, 920, 22764, 10015, 3, 6, 84, 19, 3, 390, 30, 8, 168, 801, 5103, 32, 7, 22764, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 1218, 1002, 1470, 1218, 1901, 5275, 1229, 18870, 879, 1353, 16783, 3, 6, 408, 3, 6, 1034, 1], "trg": "routing protocols;sensor networks;adversary model;simulatability;provable security", "tokenized_trg": [22764, 18870, 32100, 7824, 5275, 32100, 23210, 63, 825, 32100, 108, 4115, 144, 2020, 32100, 813, 208, 179, 1034, 1]}
{"src": "obfuscated databases and group privacy . <sep> we investigate whether it is possible to encrypt a database and then give it away in such a form that users can still access it , but only in a restricted way . in contrast to conventional privacy mechanisms that aim to prevent any access to individual records , we aim to restrict the set of queries that can be feasibly evaluated on the encrypted database . we start with a simple form of database obfuscation which makes database records indistinguishable from lookup functions . the only feasible operation on an obfuscated record is to look up some attribute y by supplying the value of another attribute x that appears in the same record ( i . e . , someone who does not know x can not feasibly retrieve y ) . we then ( i ) generalize our construction to conjunctions of equality tests on any attributes of the database , and ( ii ) achieve a new property we call group privacy . this property ensures that it is easy to retrieve individual records or small subsets of records from the encrypted database by identifying them precisely , but mass harvesting queries matching a large number of records are computationally infeasible . our constructions are non interactive . the database is transformed in such a way that all queries except those ex <unk> allowed by the privacy policy become computationally infeasible , i . e . , our solutions do not rely on any access control software or hardware . categories and subject descriptors e . <digit> data encryption h . <digit> . <digit> database administration security , integrity , and protection general terms security", "tokenized_src": [3, 32, 115, 89, 302, 75, 920, 16961, 11, 563, 4570, 3, 5, 32100, 62, 9127, 823, 34, 19, 487, 12, 3, 35, 13708, 3, 9, 3501, 11, 258, 428, 34, 550, 16, 224, 3, 9, 607, 24, 1105, 54, 341, 592, 34, 3, 6, 68, 163, 16, 3, 9, 12103, 194, 3, 5, 16, 4656, 12, 7450, 4570, 12009, 24, 2674, 12, 1709, 136, 592, 12, 928, 3187, 3, 6, 62, 2674, 12, 18395, 8, 356, 13, 13154, 24, 54, 36, 3, 89, 15, 9, 7, 15596, 14434, 30, 8, 24107, 3501, 3, 5, 62, 456, 28, 3, 9, 650, 607, 13, 3501, 3, 32, 115, 89, 302, 75, 257, 84, 656, 3501, 3187, 16, 19694, 1744, 1273, 179, 45, 320, 413, 3621, 3, 5, 8, 163, 20218, 2986, 30, 46, 3, 32, 115, 89, 302, 75, 920, 1368, 19, 12, 320, 95, 128, 15816, 3, 63, 57, 3, 19327, 8, 701, 13, 430, 15816, 3, 226, 24, 3475, 16, 8, 337, 1368, 41, 3, 23, 3, 5, 3, 15, 3, 5, 3, 6, 841, 113, 405, 59, 214, 3, 226, 54, 59, 3, 89, 15, 9, 7, 15596, 21830, 3, 63, 3, 61, 3, 5, 62, 258, 41, 3, 23, 3, 61, 879, 1737, 69, 1449, 12, 13274, 7, 13, 18963, 3830, 30, 136, 12978, 13, 8, 3501, 3, 6, 11, 41, 3, 23, 23, 3, 61, 1984, 3, 9, 126, 785, 62, 580, 563, 4570, 3, 5, 48, 785, 766, 7, 24, 34, 19, 514, 12, 21830, 928, 3187, 42, 422, 769, 2244, 7, 13, 3187, 45, 8, 24107, 3501, 57, 3, 9690, 135, 11185, 3, 6, 68, 3294, 10515, 53, 13154, 8150, 3, 9, 508, 381, 13, 3187, 33, 25850, 120, 16, 89, 15, 9, 7, 2317, 3, 5, 69, 1449, 7, 33, 529, 6076, 3, 5, 8, 3501, 19, 13421, 16, 224, 3, 9, 194, 24, 66, 13154, 3578, 273, 1215, 2, 2225, 57, 8, 4570, 1291, 582, 25850, 120, 16, 89, 15, 9, 7, 2317, 3, 6, 3, 23, 3, 5, 3, 15, 3, 5, 3, 6, 69, 1275, 103, 59, 3, 4610, 30, 136, 592, 610, 889, 42, 4214, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 15, 3, 5, 32101, 331, 19849, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 3602, 1034, 3, 6, 9322, 3, 6, 11, 1711, 879, 1353, 1034, 1], "trg": "obfuscation;database privacy", "tokenized_trg": [3, 32, 115, 89, 302, 75, 257, 32100, 3501, 4570, 1]}
{"src": "on the complexity of computing peer agreements for consistent query answering in peer to peer data integration systems . <sep> peer to peer ( p2p ) data integration systems have recently attracted significant attention for their ability to manage and share data dispersed over different peer sources . while integrating data for answering user queries , it often happens that inconsistencies arise , because some integrity constraints specified on peers ' global schemas may be violated . in these cases , we may give semantics to the inconsistent system by suitably repairing the retrieved data , as typically done in the context of traditional data integration systems . however , some specific features of p2p systems , such as peer autonomy and peer preferences ( e . g . , different source trusting ) , should be properly addressed to make the whole approach effective . in this paper , we face these issues that were only marginally considered in the literature . we first present a formal framework for reasoning about autonomous peers that exploit individual preference criteria in repairing the data . the idea is that queries should be answered over the best possible database repairs with respect to the preferences of all peers , i . e . , the states on which they are able to find an agreement . then , we investigate the computational complexity of dealing with peer agreements and of answering queries in p2p data integration systems . it turns out that considering peer preferences makes these problems only mildly harder than in traditional data integration systems . categories and subject descriptors h . <digit> . <digit> database management systems relational databases f . <digit> . <digit> analysis of algorithms and problem complexity nonnumerical algorithms and problems general terms theory , management", "tokenized_src": [30, 8, 11641, 13, 10937, 11409, 10663, 21, 4700, 11417, 18243, 16, 11409, 12, 11409, 331, 5660, 1002, 3, 5, 32100, 11409, 12, 11409, 41, 3, 102, 357, 102, 3, 61, 331, 5660, 1002, 43, 1310, 44, 11674, 1516, 1388, 21, 70, 1418, 12, 1865, 11, 698, 331, 1028, 883, 3843, 147, 315, 11409, 2836, 3, 5, 298, 3, 20030, 331, 21, 18243, 1139, 13154, 3, 6, 34, 557, 2906, 24, 16, 8056, 343, 11573, 7931, 3, 6, 250, 128, 9322, 17765, 7173, 30, 13359, 3, 31, 1252, 26622, 7, 164, 36, 15108, 26, 3, 5, 16, 175, 1488, 3, 6, 62, 164, 428, 27632, 7, 12, 8, 26608, 358, 57, 3237, 3834, 3, 26564, 8, 3, 31340, 331, 3, 6, 38, 3115, 612, 16, 8, 2625, 13, 1435, 331, 5660, 1002, 3, 5, 983, 3, 6, 128, 806, 753, 13, 3, 102, 357, 102, 1002, 3, 6, 224, 38, 11409, 29007, 11, 11409, 11177, 41, 3, 15, 3, 5, 3, 122, 3, 5, 3, 6, 315, 1391, 2019, 53, 3, 61, 3, 6, 225, 36, 3085, 8705, 12, 143, 8, 829, 1295, 1231, 3, 5, 16, 48, 1040, 3, 6, 62, 522, 175, 807, 24, 130, 163, 18777, 120, 1702, 16, 8, 6678, 3, 5, 62, 166, 915, 3, 9, 4727, 4732, 21, 20893, 81, 21286, 13359, 24, 9248, 928, 11633, 6683, 16, 3, 26564, 8, 331, 3, 5, 8, 800, 19, 24, 13154, 225, 36, 9986, 147, 8, 200, 487, 3501, 7384, 28, 1445, 12, 8, 11177, 13, 66, 13359, 3, 6, 3, 23, 3, 5, 3, 15, 3, 5, 3, 6, 8, 2315, 30, 84, 79, 33, 3, 179, 12, 253, 46, 2791, 3, 5, 258, 3, 6, 62, 9127, 8, 25850, 11641, 13, 4945, 28, 11409, 10663, 11, 13, 18243, 13154, 16, 3, 102, 357, 102, 331, 5660, 1002, 3, 5, 34, 5050, 91, 24, 4014, 11409, 11177, 656, 175, 982, 163, 8248, 120, 7501, 145, 16, 1435, 331, 5660, 1002, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 1002, 4689, 138, 16961, 3, 89, 3, 5, 32101, 3, 5, 32101, 1693, 13, 16783, 11, 682, 11641, 529, 5525, 49, 1950, 16783, 11, 982, 879, 1353, 4516, 3, 6, 758, 1], "trg": "data integration systems;peer to peer systems", "tokenized_trg": [331, 5660, 1002, 32100, 11409, 12, 11409, 1002, 1]}
{"src": "on the discovery of significant statistical quantitative rules . <sep> in this paper we study market share rules , rules that have a certain market share statistic associated with them . such rules are particularly relevant for decision making from a business perspective . motivated by market share rules , in this paper we consider statistical quantitative rules ( sq rules ) that are quantitative rules in which the rhs can be any statistic that is computed for the segment satisfying the lhs of the rule . building on prior work , we present a statistical approach for learning all significant sq rules , i . e . , sq rules for which a desired statistic lies outside a confidence interval computed for this rule . in particular we show how resampling techniques can be effectively used to learn significant rules . since our method considers the significance of a large number of rules in parallel , it is susceptible to learning a certain number of quot false quot rules . to address this , we present a technique that can determine the number of significant sq rules that can be expected by chance alone , and suggest that this number can be used to determine a quot false discovery rate quot for the learning procedure . we apply our methods to online consumer purchase data and report the results . categories and subject descriptors h . <digit> . <digit> database management database applications data mining . general terms algorithms , management .", "tokenized_src": [30, 8, 9087, 13, 1516, 11775, 18906, 2219, 3, 5, 32100, 16, 48, 1040, 62, 810, 512, 698, 2219, 3, 6, 2219, 24, 43, 3, 9, 824, 512, 698, 19720, 1968, 28, 135, 3, 5, 224, 2219, 33, 1989, 2193, 21, 1357, 492, 45, 3, 9, 268, 3503, 3, 5, 11361, 57, 512, 698, 2219, 3, 6, 16, 48, 1040, 62, 1099, 11775, 18906, 2219, 41, 11820, 2219, 3, 61, 24, 33, 18906, 2219, 16, 84, 8, 3, 52, 107, 7, 54, 36, 136, 19720, 24, 19, 29216, 26, 21, 8, 5508, 16156, 8, 3, 40, 107, 7, 13, 8, 3356, 3, 5, 740, 30, 1884, 161, 3, 6, 62, 915, 3, 9, 11775, 1295, 21, 1036, 66, 1516, 11820, 2219, 3, 6, 3, 23, 3, 5, 3, 15, 3, 5, 3, 6, 11820, 2219, 21, 84, 3, 9, 5327, 19720, 7797, 1067, 3, 9, 3410, 8572, 29216, 26, 21, 48, 3356, 3, 5, 16, 1090, 62, 504, 149, 3, 60, 7, 4624, 697, 2097, 54, 36, 3762, 261, 12, 669, 1516, 2219, 3, 5, 437, 69, 1573, 1099, 7, 8, 11978, 13, 3, 9, 508, 381, 13, 2219, 16, 8449, 3, 6, 34, 19, 16080, 12, 1036, 3, 9, 824, 381, 13, 3, 8270, 6136, 3, 8270, 2219, 3, 5, 12, 1115, 48, 3, 6, 62, 915, 3, 9, 3317, 24, 54, 2082, 8, 381, 13, 1516, 11820, 2219, 24, 54, 36, 1644, 57, 1253, 2238, 3, 6, 11, 3130, 24, 48, 381, 54, 36, 261, 12, 2082, 3, 9, 3, 8270, 6136, 9087, 1080, 3, 8270, 21, 8, 1036, 3979, 3, 5, 62, 1581, 69, 2254, 12, 367, 3733, 1242, 331, 11, 934, 8, 772, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 3501, 1564, 331, 5558, 3, 5, 879, 1353, 16783, 3, 6, 758, 3, 5, 1], "trg": "statistical quantitative rules;market share rules;resampling;rule discovery;nonparametric methods", "tokenized_trg": [11775, 18906, 2219, 32100, 512, 698, 2219, 32100, 3, 60, 7, 4624, 697, 32100, 3356, 9087, 32100, 529, 6583, 7959, 2254, 1]}
{"src": "optimal transmission range for cluster based wireless sensor networks with mixed communication modes . <sep> prolonging the network lifetime is one of the most important designing objectives in wireless sensor networks ( wsn ) . we consider a heterogeneous cluster based wsn , which consists of two types of nodes powerful cluster heads and basic sensor nodes . all the nodes are randomly deployed in a specific area . to better balance the energy dissipation , we use a simple mixed communication modes where the sensor nodes can communicate with cluster heads in either single hop or multi hop mode . given the initial energy of the basic sensor nodes , we derive the optimal communication range and identify the optimal mixed communication mode to maximize the wsn ' s lifetime through optimizations . moreover , we also extend our model from <digit> d space to <digit> d space .", "tokenized_src": [6624, 5790, 620, 21, 9068, 3, 390, 5419, 7824, 5275, 28, 4838, 1901, 12632, 3, 5, 32100, 19556, 53, 8, 1229, 6556, 19, 80, 13, 8, 167, 359, 8296, 7233, 16, 5419, 7824, 5275, 41, 3, 210, 7, 29, 3, 61, 3, 5, 62, 1099, 3, 9, 26481, 729, 15, 1162, 9068, 3, 390, 3, 210, 7, 29, 3, 6, 84, 3, 6848, 13, 192, 1308, 13, 150, 1395, 2021, 9068, 7701, 11, 1857, 7824, 150, 1395, 3, 5, 66, 8, 150, 1395, 33, 21306, 16163, 16, 3, 9, 806, 616, 3, 5, 12, 394, 2109, 8, 827, 1028, 7, 23, 102, 257, 3, 6, 62, 169, 3, 9, 650, 4838, 1901, 12632, 213, 8, 7824, 150, 1395, 54, 4521, 28, 9068, 7701, 16, 893, 712, 13652, 42, 1249, 13652, 2175, 3, 5, 787, 8, 2332, 827, 13, 8, 1857, 7824, 150, 1395, 3, 6, 62, 74, 757, 8, 6624, 1901, 620, 11, 2862, 8, 6624, 4838, 1901, 2175, 12, 11072, 8, 3, 210, 7, 29, 3, 31, 3, 7, 6556, 190, 11295, 7, 3, 5, 72, 1890, 3, 6, 62, 92, 4285, 69, 825, 45, 32101, 3, 26, 628, 12, 32101, 3, 26, 628, 3, 5, 1], "trg": "optimal transmission range;optimization;clustering;wireless sensor networks;network lifetime;energy optimization;heterogeneous cluster based sensor network;voronoi cell;numerical model", "tokenized_trg": [6624, 5790, 620, 32100, 11295, 32100, 9068, 53, 32100, 5419, 7824, 5275, 32100, 1229, 6556, 32100, 827, 11295, 32100, 26481, 729, 15, 1162, 9068, 3, 390, 7824, 1229, 32100, 426, 32, 5983, 2358, 32100, 25194, 825, 1]}
{"src": "parallel crawlers . <sep> in this paper we study how we can design an effective parallel crawler . as the size of the web grows , it becomes imperative to parallelize a crawling process , in order to finish downloading pages in a reasonable amount of time . we first propose multiple architectures for a parallel crawler and identify fundamental issues related to parallel crawling . based on this understanding , we then propose metrics to evaluate a parallel crawler , and compare the proposed architectures using <digit> million pages collected from the web . our results clarify the relative merits of each architecture and provide a good guideline on when to adopt which architecture . categories and subject descriptors h . <digit> . <digit> hypertext hypermedia architectures h . <digit> . <digit> systems and software distributed systems general terms management , performance , design", "tokenized_src": [8449, 18639, 277, 3, 5, 32100, 16, 48, 1040, 62, 810, 149, 62, 54, 408, 46, 1231, 8449, 18639, 49, 3, 5, 38, 8, 812, 13, 8, 765, 13919, 3, 6, 34, 2992, 18158, 12, 8449, 1737, 3, 9, 18639, 53, 433, 3, 6, 16, 455, 12, 1992, 16891, 1688, 16, 3, 9, 4360, 866, 13, 97, 3, 5, 62, 166, 4230, 1317, 4648, 7, 21, 3, 9, 8449, 18639, 49, 11, 2862, 4431, 807, 1341, 12, 8449, 18639, 53, 3, 5, 3, 390, 30, 48, 1705, 3, 6, 62, 258, 4230, 15905, 12, 6825, 3, 9, 8449, 18639, 49, 3, 6, 11, 4048, 8, 4382, 4648, 7, 338, 32101, 770, 1688, 4759, 45, 8, 765, 3, 5, 69, 772, 17741, 8, 5237, 7565, 7, 13, 284, 4648, 11, 370, 3, 9, 207, 1539, 747, 30, 116, 12, 4693, 84, 4648, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 6676, 6327, 6676, 8172, 4648, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 1002, 11, 889, 8308, 1002, 879, 1353, 758, 3, 6, 821, 3, 6, 408, 1], "trg": "parallel crawler;parallelization;architecture;guideline;web crawler;web spider;model evaluation", "tokenized_trg": [8449, 18639, 49, 32100, 8449, 1707, 32100, 4648, 32100, 1539, 747, 32100, 765, 18639, 49, 32100, 765, 18612, 32100, 825, 5002, 1]}
{"src": "performance enhancing proxy for interactive 3g network gaming . <sep> unlike non time critical applications like email and file transfer , network games demand timely data delivery to maintain the seemingly interactive presence of players in the virtual game world . yet the inherently large transmission delay mean and variance of 3g cellular links make on time game data delivery difficult . further complicating the timely game data delivery problem is the frequent packet drops at these links due to inter symbol interference , fading and shadowing at the physical layer . in this paper , we propose a proxy architecture that enhances the timeliness and reliability of data delivery of interactive games over 3g wireless networks . in particular , a performance enhancing proxy is designed to optimize a new time critical data type variable deadline data , where the utility of a datum is inversely proportional to the time required to deliver it . we show how a carefully designed and configured proxy can noticeably improve the delivery of network game data . categories and subject descriptors c . <digit> computer communication networks network architecture and design wireless communication general terms algorithms , performance , design", "tokenized_src": [821, 3, 14762, 19784, 21, 6076, 220, 122, 1229, 7081, 3, 5, 32100, 9770, 529, 97, 2404, 1564, 114, 791, 11, 1042, 2025, 3, 6, 1229, 1031, 2173, 10063, 331, 1929, 12, 1961, 8, 13045, 6076, 3053, 13, 1508, 16, 8, 4291, 467, 296, 3, 5, 780, 8, 16, 29112, 508, 5790, 7230, 1243, 11, 27154, 13, 220, 122, 3, 10791, 2416, 143, 30, 97, 467, 331, 1929, 1256, 3, 5, 856, 21213, 53, 8, 10063, 467, 331, 1929, 682, 19, 8, 8325, 13531, 11784, 44, 175, 2416, 788, 12, 1413, 6083, 20511, 3, 6, 3, 28977, 11, 8552, 53, 44, 8, 1722, 3760, 3, 5, 16, 48, 1040, 3, 6, 62, 4230, 3, 9, 19784, 4648, 24, 3391, 7, 8, 13618, 7, 7, 11, 10581, 13, 331, 1929, 13, 6076, 1031, 147, 220, 122, 5419, 5275, 3, 5, 16, 1090, 3, 6, 3, 9, 821, 3, 14762, 19784, 19, 876, 12, 13436, 3, 9, 126, 97, 2404, 331, 686, 7660, 7183, 331, 3, 6, 213, 8, 6637, 13, 3, 9, 3927, 440, 19, 3, 23536, 120, 7385, 138, 12, 8, 97, 831, 12, 2156, 34, 3, 5, 62, 504, 149, 3, 9, 4321, 876, 11, 15786, 19784, 54, 2103, 3834, 1172, 8, 1929, 13, 1229, 467, 331, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 1218, 1901, 5275, 1229, 4648, 11, 408, 5419, 1901, 879, 1353, 16783, 3, 6, 821, 3, 6, 408, 1], "trg": "network gaming;proxy architecture;3g wireless network;wireless networks;time critical data;rlc configuration;congestion control;loss optimized", "tokenized_trg": [1229, 7081, 32100, 19784, 4648, 32100, 220, 122, 5419, 1229, 32100, 5419, 5275, 32100, 97, 2404, 331, 32100, 3, 52, 40, 75, 5298, 32100, 26294, 610, 32100, 1453, 18149, 1]}
{"src": "physically based visual simulation on graphics hardware . <sep> in this paper , we present a method for real time visual simulation of diverse dynamic phenomena using programmable graphics hardware . the simulations we implement use an extension of cellular automata known as the coupled map lattice ( cml ) . cml represents the state of a dynamic system as continuous values on a discrete lattice . in our implementation we store the lattice values in a texture , and use pixel level programming to implement simple next state computations on lattice nodes and their neighbors . we apply these computations successively to produce interactive visual simulations of convection , reaction diffusion , and boiling . we have built an interactive framework for building and experimenting with cml simulations running on graphics hardware , and have integrated them into interactive 3d graphics applications .", "tokenized_src": [10034, 3, 390, 3176, 11108, 30, 6484, 4214, 3, 5, 32100, 16, 48, 1040, 3, 6, 62, 915, 3, 9, 1573, 21, 490, 97, 3176, 11108, 13, 2399, 4896, 24666, 338, 3, 7050, 179, 6484, 4214, 3, 5, 8, 11108, 7, 62, 4028, 169, 46, 4924, 13, 3, 10791, 7791, 9, 801, 38, 8, 14286, 2828, 50, 17, 1225, 15, 41, 2446, 40, 3, 61, 3, 5, 2446, 40, 5475, 8, 538, 13, 3, 9, 4896, 358, 38, 7558, 2620, 30, 3, 9, 19217, 15, 50, 17, 1225, 15, 3, 5, 16, 69, 4432, 62, 1078, 8, 50, 17, 1225, 15, 2620, 16, 3, 9, 6519, 3, 6, 11, 169, 3, 14251, 593, 6020, 12, 4028, 650, 416, 538, 29761, 7, 30, 50, 17, 1225, 15, 150, 1395, 11, 70, 11195, 3, 5, 62, 1581, 175, 29761, 7, 25694, 120, 12, 1759, 6076, 3176, 11108, 7, 13, 975, 162, 4985, 3, 6, 6363, 21740, 3, 6, 11, 22151, 3, 5, 62, 43, 1192, 46, 6076, 4732, 21, 740, 11, 3, 26718, 28, 2446, 40, 11108, 7, 1180, 30, 6484, 4214, 3, 6, 11, 43, 4580, 135, 139, 6076, 220, 26, 6484, 1564, 3, 5, 1], "trg": "visual simulation;simulation;graphics hardware;graphic hardware;dynamic phenomena;coupled map lattice;cml;reaction diffusion;multipass rendering", "tokenized_trg": [3176, 11108, 32100, 11108, 32100, 6484, 4214, 32100, 7693, 4214, 32100, 4896, 24666, 32100, 14286, 2828, 50, 17, 1225, 15, 32100, 2446, 40, 32100, 6363, 21740, 32100, 1249, 3968, 18968, 1]}
{"src": "physiological measures of presence in stressful virtual environments . <sep> a common measure of the quality or effectiveness of a virtual environment ( ve ) is the amount of presence it evokes in users . presence is often defined as the sense of being there in a ve . there has been much debate about the best way to measure presence , and presence researchers need , and have sought , a measure that is reliable , valid , sensitive , and objective . we hypothesized that to the degree that a ve seems real , it would evoke physiological responses similar to those evoked by the corresponding real environment , and that greater presence would evoke a greater response . to examine this , we conducted three experiments , the results of which support the use of physiological reaction as a reliable , valid , sensitive , and objective presence measure . the experiments compared participants ' physiological reactions to a non threatening virtual room and their reactions to a stressful virtual height situation . we found that change in heart rate satisfied our requirements for a measure of presence , change in skin conductance did to a lesser extent , and that change in skin temperature did not . moreover , the results showed that inclusion of a passive haptic element in the ve significantly increased presence and that for presence evoked <digit> fps gt <digit> fps gt <digit> fps . categories i . <digit> . <digit> computer graphics three dimensional graphics and realism virtual reality . h . <digit> . <digit> information interfaces and presentation user interfaces , evaluation methodology . keywords presence , physiology , haptics , frame rate .", "tokenized_src": [26574, 3629, 13, 3053, 16, 15170, 4291, 8258, 3, 5, 32100, 3, 9, 1017, 3613, 13, 8, 463, 42, 9570, 13, 3, 9, 4291, 1164, 41, 3, 162, 3, 61, 19, 8, 866, 13, 3053, 34, 3, 17943, 7, 16, 1105, 3, 5, 3053, 19, 557, 4802, 38, 8, 1254, 13, 271, 132, 16, 3, 9, 3, 162, 3, 5, 132, 65, 118, 231, 5054, 81, 8, 200, 194, 12, 3613, 3053, 3, 6, 11, 3053, 4768, 174, 3, 6, 11, 43, 7803, 3, 6, 3, 9, 3613, 24, 19, 3468, 3, 6, 3982, 3, 6, 6280, 3, 6, 11, 5997, 3, 5, 62, 10950, 532, 5120, 24, 12, 8, 1952, 24, 3, 9, 3, 162, 1330, 490, 3, 6, 34, 133, 3, 17943, 26574, 7216, 1126, 12, 273, 3, 17943, 26, 57, 8, 3, 9921, 490, 1164, 3, 6, 11, 24, 2123, 3053, 133, 3, 17943, 3, 9, 2123, 1773, 3, 5, 12, 5443, 48, 3, 6, 62, 4468, 386, 12341, 3, 6, 8, 772, 13, 84, 380, 8, 169, 13, 26574, 6363, 38, 3, 9, 3468, 3, 6, 3982, 3, 6, 6280, 3, 6, 11, 5997, 3053, 3613, 3, 5, 8, 12341, 3, 2172, 3008, 3, 31, 26574, 14081, 12, 3, 9, 529, 3, 14390, 4291, 562, 11, 70, 14081, 12, 3, 9, 15170, 4291, 3902, 1419, 3, 5, 62, 435, 24, 483, 16, 842, 1080, 7035, 69, 1502, 21, 3, 9, 3613, 13, 3053, 3, 6, 483, 16, 1133, 3498, 663, 410, 12, 3, 9, 18605, 5996, 3, 6, 11, 24, 483, 16, 1133, 2912, 410, 59, 3, 5, 72, 1890, 3, 6, 8, 772, 3217, 24, 11980, 13, 3, 9, 14410, 3, 9516, 1225, 3282, 16, 8, 3, 162, 4019, 1936, 3053, 11, 24, 21, 3053, 3, 17943, 26, 32101, 3, 89, 102, 7, 3, 122, 17, 32101, 3, 89, 102, 7, 3, 122, 17, 32101, 3, 89, 102, 7, 3, 5, 5897, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 386, 3, 11619, 6484, 11, 3, 60, 6835, 4291, 2669, 3, 5, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 3459, 7, 11, 3831, 1139, 3459, 7, 3, 6, 5002, 15663, 3, 5, 12545, 3053, 3, 6, 3, 21324, 6427, 3, 6, 3, 9516, 7636, 3, 6, 2835, 1080, 3, 5, 1], "trg": "physiology;measurement;presence;presence;virtual environment;haptics;frame rate", "tokenized_trg": [3, 21324, 6427, 32100, 9753, 32100, 3053, 32100, 3053, 32100, 4291, 1164, 32100, 3, 9516, 7636, 32100, 2835, 1080, 1]}
{"src": "a new statistical formula for chinese text segmentation incorporating contextual information . <sep> a new statistical formula for identifying <digit> character words in chinese text , called the contextual information formula , was developed empirically by performing stepwise logistic regression using a sample of sentences that had been manually segmented . contextual information in the form of the frequency of characters that are adjacent to the bigram being processed as well as the weighted document frequency of the overlapping bigrams were found to be significant factors for predicting the probablity that the bigram constitutes a word . local information ( the number of times the bigram occurs in the document being segmented ) and the position of the bigram in the sentence were not found to be useful in determining words . the contextual information formula was found to be significantly and substantially better than the mutual information formula in identifying <digit> character words . the method can also be used for identifying multi word terms in english text .", "tokenized_src": [3, 9, 126, 11775, 5403, 21, 3, 1436, 1496, 15, 1499, 5508, 257, 3, 18218, 28131, 251, 3, 5, 32100, 3, 9, 126, 11775, 5403, 21, 3, 9690, 32101, 1848, 1234, 16, 3, 1436, 1496, 15, 1499, 3, 6, 718, 8, 28131, 251, 5403, 3, 6, 47, 1597, 23941, 120, 57, 5505, 1147, 10684, 28820, 26625, 338, 3, 9, 3106, 13, 16513, 24, 141, 118, 12616, 5508, 15, 26, 3, 5, 28131, 251, 16, 8, 607, 13, 8, 7321, 13, 2850, 24, 33, 12487, 12, 8, 600, 2375, 271, 8534, 38, 168, 38, 8, 1293, 15, 26, 1708, 7321, 13, 8, 3, 31212, 600, 2375, 7, 130, 435, 12, 36, 1516, 2580, 21, 3, 29856, 8, 12361, 15403, 485, 24, 8, 600, 2375, 11708, 7, 3, 9, 1448, 3, 5, 415, 251, 41, 8, 381, 13, 648, 8, 600, 2375, 6986, 16, 8, 1708, 271, 5508, 15, 26, 3, 61, 11, 8, 1102, 13, 8, 600, 2375, 16, 8, 7142, 130, 59, 435, 12, 36, 1934, 16, 3, 11682, 1234, 3, 5, 8, 28131, 251, 5403, 47, 435, 12, 36, 4019, 11, 15284, 394, 145, 8, 8543, 251, 5403, 16, 3, 9690, 32101, 1848, 1234, 3, 5, 8, 1573, 54, 92, 36, 261, 21, 3, 9690, 1249, 1448, 1353, 16, 22269, 1499, 3, 5, 1], "trg": "statistical formula;chinese text segmentation;contextual information;logistic regression;mutual information;multi word terms;word boundary identification;regression model;natural language processing;word boundary", "tokenized_trg": [11775, 5403, 32100, 3, 1436, 1496, 15, 1499, 5508, 257, 32100, 28131, 251, 32100, 28820, 26625, 32100, 8543, 251, 32100, 1249, 1448, 1353, 32100, 1448, 20430, 10356, 32100, 26625, 825, 32100, 793, 1612, 3026, 32100, 1448, 20430, 1]}
{"src": "preventing attribute information leakage in automated trust negotiation . <sep> automated trust negotiation is an approach which establishes trust between strangers through the bilateral , iterative disclosure of digital credentials . sensitive credentials are protected by access control policies which may also be communicated to the other party . ideally , sensitive information should not be known by others unless its access control policy has been satisfied . however , due to bilateral information exchange , information may flow to others in a variety of forms , many of which can not be protected by access control policies alone . in particular , sensitive information may be inferred by observing negotiation participants ' behavior even when access control policies are strictly enforced . in this paper , we propose a general framework for the safety of trust negotiation systems . compared to the existing safety model , our framework focuses on the actual information gain during trust negotiation instead of the exchanged messages . thus , it directly reflects the essence of safety in sensitive information protection . based on the proposed framework , we develop policy databases as a mechanism to help prevent unauthorized information inferences during trust negotiation . we show that policy databases achieve the same protection of sensitive information as existing solutions without imposing additional complications to the interaction between negotiation participants or restricting users ' autonomy in defining their own policies . categories and subject descriptors k . <digit> . <digit> management of computing and information systems security and protection general terms security , theory", "tokenized_src": [3, 13494, 15816, 251, 7653, 545, 16, 10069, 2019, 21862, 3, 5, 32100, 10069, 2019, 21862, 19, 46, 1295, 84, 4797, 15, 7, 2019, 344, 13037, 7, 190, 8, 24097, 3, 6, 34, 49, 1528, 12508, 13, 1125, 17500, 3, 5, 6280, 17500, 33, 5046, 57, 592, 610, 3101, 84, 164, 92, 36, 4521, 26, 12, 8, 119, 1088, 3, 5, 3, 20690, 3, 6, 6280, 251, 225, 59, 36, 801, 57, 717, 3, 3227, 165, 592, 610, 1291, 65, 118, 7035, 3, 5, 983, 3, 6, 788, 12, 24097, 251, 2509, 3, 6, 251, 164, 2537, 12, 717, 16, 3, 9, 1196, 13, 2807, 3, 6, 186, 13, 84, 54, 59, 36, 5046, 57, 592, 610, 3101, 2238, 3, 5, 16, 1090, 3, 6, 6280, 251, 164, 36, 16, 1010, 1271, 57, 3, 23493, 21862, 3008, 3, 31, 3889, 237, 116, 592, 610, 3101, 33, 15154, 13321, 26, 3, 5, 16, 48, 1040, 3, 6, 62, 4230, 3, 9, 879, 4732, 21, 8, 1455, 13, 2019, 21862, 1002, 3, 5, 3, 2172, 12, 8, 1895, 1455, 825, 3, 6, 69, 4732, 3, 6915, 30, 8, 1805, 251, 2485, 383, 2019, 21862, 1446, 13, 8, 2509, 26, 4175, 3, 5, 2932, 3, 6, 34, 1461, 3, 17441, 8, 10848, 13, 1455, 16, 6280, 251, 1711, 3, 5, 3, 390, 30, 8, 4382, 4732, 3, 6, 62, 1344, 1291, 16961, 38, 3, 9, 8557, 12, 199, 1709, 3, 22556, 251, 16, 11788, 7, 383, 2019, 21862, 3, 5, 62, 504, 24, 1291, 16961, 1984, 8, 337, 1711, 13, 6280, 251, 38, 1895, 1275, 406, 3, 26781, 1151, 14497, 12, 8, 6565, 344, 21862, 3008, 42, 18395, 53, 1105, 3, 31, 29007, 16, 3, 16123, 70, 293, 3101, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 157, 3, 5, 32101, 3, 5, 32101, 758, 13, 10937, 11, 251, 1002, 1034, 11, 1711, 879, 1353, 1034, 3, 6, 4516, 1], "trg": "trust negotiation;attribute based access control;privacy", "tokenized_trg": [2019, 21862, 32100, 15816, 3, 390, 592, 610, 32100, 4570, 1]}
{"src": "probabilistic author topic models for information discovery . <sep> we propose a new unsupervised learning technique for extracting information from large text collections . we model documents as if they were generated by a two stage stochastic process . each author is represented by a probability distribution over topics , and each topic is represented as a probability distribution over words for that topic . the words in a multi author paper are assumed to be the result of a mixture of each authors ' topic mixture . the topic word and author topic distributions are learned from data in an unsupervised manner using a markov chain monte carlo algorithm . we apply the methodology to a large corpus of <digit> , <digit> abstracts and <digit> , <digit> authors from the well known citeseer digital library , and learn a model with <digit> topics . we discuss in detail the interpretation of the results discovered by the system including specific topic and author models , ranking of authors by topic and topics by author , significant trends in the computer science literature between <digit> and <digit> , parsing of abstracts by topics and authors and detection of unusual papers by specific authors . an online query interface to the model is also discussed that allows interactive exploration of author topic models for corpora such as citeseer . categories and subject descriptors i . <digit> . <digit> artificial intelligence learning general terms algorithms , experimentation", "tokenized_src": [9551, 3040, 2291, 2859, 2250, 21, 251, 9087, 3, 5, 32100, 62, 4230, 3, 9, 126, 73, 23313, 1036, 3317, 21, 5819, 53, 251, 45, 508, 1499, 8274, 3, 5, 62, 825, 2691, 38, 3, 99, 79, 130, 6126, 57, 3, 9, 192, 1726, 13564, 107, 10057, 433, 3, 5, 284, 2291, 19, 7283, 57, 3, 9, 15834, 3438, 147, 4064, 3, 6, 11, 284, 2859, 19, 7283, 38, 3, 9, 15834, 3438, 147, 1234, 21, 24, 2859, 3, 5, 8, 1234, 16, 3, 9, 1249, 2291, 1040, 33, 14176, 12, 36, 8, 741, 13, 3, 9, 4989, 13, 284, 5921, 3, 31, 2859, 4989, 3, 5, 8, 2859, 1448, 11, 2291, 2859, 3438, 7, 33, 2525, 45, 331, 16, 46, 73, 23313, 3107, 338, 3, 9, 3157, 9789, 3741, 6278, 15, 443, 40, 32, 12628, 3, 5, 62, 1581, 8, 15663, 12, 3, 9, 508, 11736, 302, 13, 32101, 3, 6, 32101, 9838, 7, 11, 32101, 3, 6, 32101, 5921, 45, 8, 168, 801, 3, 8464, 7, 15, 49, 1125, 3595, 3, 6, 11, 669, 3, 9, 825, 28, 32101, 4064, 3, 5, 62, 2497, 16, 2736, 8, 8868, 13, 8, 772, 3883, 57, 8, 358, 379, 806, 2859, 11, 2291, 2250, 3, 6, 11592, 13, 5921, 57, 2859, 11, 4064, 57, 2291, 3, 6, 1516, 5001, 16, 8, 1218, 2056, 6678, 344, 32101, 11, 32101, 3, 6, 260, 7, 53, 13, 9838, 7, 57, 4064, 11, 5921, 11, 10664, 13, 7225, 5778, 57, 806, 5921, 3, 5, 46, 367, 11417, 3459, 12, 8, 825, 19, 92, 5172, 24, 1250, 6076, 9740, 13, 2291, 2859, 2250, 21, 11736, 127, 9, 224, 38, 3, 8464, 7, 15, 49, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 23, 3, 5, 32101, 3, 5, 32101, 7353, 6123, 1036, 879, 1353, 16783, 3, 6, 5016, 257, 1], "trg": "unsupervised learning;gibbs sampling;text modeling", "tokenized_trg": [73, 23313, 1036, 32100, 31257, 115, 7, 17222, 32100, 1499, 15309, 1]}
{"src": "proportional search interface usability measures . <sep> speed , accuracy , and subjective satisfaction are the most common measures for evaluating the usability of search user interfaces . however , these measures do not facilitate comparisons optimally and they leave some important aspects of search user interfaces uncovered . we propose new , proportional measures to supplement the current ones . search speed is a normalized measure for the speed of a search user interface expressed in answers per minute . qualified search speed reveals the trade off between speed and accuracy while immediate search accuracy addresses the need to measure success in typical web search behavior where only the first few results are interesting . the proposed measures are evaluated by applying them to raw data from two studies and comparing them to earlier measures . the evaluations indicate that they have desirable features . acm classification keywords h5 . <digit> . information interfaces and presentation ( e . g . , hci ) user interfaces evaluation methodology . h3 . <digit> . information storage and retrieval information search and retrieval search process .", "tokenized_src": [7385, 138, 960, 3459, 178, 2020, 3629, 3, 5, 32100, 1634, 3, 6, 7452, 3, 6, 11, 24242, 5044, 33, 8, 167, 1017, 3629, 21, 3, 17768, 8, 178, 2020, 13, 960, 1139, 3459, 7, 3, 5, 983, 3, 6, 175, 3629, 103, 59, 6758, 4993, 7, 6624, 120, 11, 79, 1175, 128, 359, 3149, 13, 960, 1139, 3459, 7, 3, 24530, 3, 5, 62, 4230, 126, 3, 6, 7385, 138, 3629, 12, 8839, 8, 750, 2102, 3, 5, 960, 1634, 19, 3, 9, 1389, 1601, 3613, 21, 8, 1634, 13, 3, 9, 960, 1139, 3459, 7103, 16, 4269, 399, 1962, 3, 5, 4717, 960, 1634, 3, 15503, 8, 1668, 326, 344, 1634, 11, 7452, 298, 5299, 960, 7452, 7181, 8, 174, 12, 3613, 1269, 16, 4541, 765, 960, 3889, 213, 163, 8, 166, 360, 772, 33, 1477, 3, 5, 8, 4382, 3629, 33, 14434, 57, 6247, 135, 12, 5902, 331, 45, 192, 2116, 11, 3, 14622, 135, 12, 2283, 3629, 3, 5, 8, 5002, 7, 6360, 24, 79, 43, 16441, 753, 3, 5, 3, 9, 75, 51, 13774, 12545, 3, 107, 755, 3, 5, 32101, 3, 5, 251, 3459, 7, 11, 3831, 41, 3, 15, 3, 5, 3, 122, 3, 5, 3, 6, 3, 107, 75, 23, 3, 61, 1139, 3459, 7, 5002, 15663, 3, 5, 3, 107, 519, 3, 5, 32101, 3, 5, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 960, 433, 3, 5, 1], "trg": "usability measure;speed;accuracy;search user interface;usability evaluation", "tokenized_trg": [178, 2020, 3613, 32100, 1634, 32100, 7452, 32100, 960, 1139, 3459, 32100, 178, 2020, 5002, 1]}
{"src": "protected interactive 3d graphics via remote rendering . <sep> valuable 3d graphical models , such as high resolution digital scans of cultural heritage objects , may require protection to prevent piracy or misuse , while still allowing for interactive display and manipulation by a widespread audience . we have investigated techniques for protecting 3d graphics content , and we have developed a remote rendering system suitable for sharing archives of 3d models while protecting the 3d geometry from unauthorized extraction . the system consists of a 3d viewer client that includes low resolution versions of the 3d models , and a rendering server that renders and returns images of high resolution models according to client requests . the server implements a number of defenses to guard against 3d reconstruction attacks , such as monitoring and limiting request streams , and slightly perturbing and distorting the rendered images . we consider several possible types of reconstruction attacks on such a rendering server , and we examine how these attacks can be defended against without excessively compromising the interactive experience for non malicious users . cr categories i . <digit> . <digit> computer graphics graphics systems remote systems", "tokenized_src": [5046, 6076, 220, 26, 6484, 1009, 4322, 18968, 3, 5, 32100, 3435, 220, 26, 3, 16982, 2250, 3, 6, 224, 38, 306, 3161, 1125, 5924, 7, 13, 2779, 8681, 4820, 3, 6, 164, 1457, 1711, 12, 1709, 3, 2388, 4710, 42, 24653, 3, 6, 298, 341, 3, 3232, 21, 6076, 1831, 11, 18175, 57, 3, 9, 14047, 2417, 3, 5, 62, 43, 18277, 2097, 21, 9932, 220, 26, 6484, 738, 3, 6, 11, 62, 43, 1597, 3, 9, 4322, 18968, 358, 3255, 21, 2178, 18274, 13, 220, 26, 2250, 298, 9932, 8, 220, 26, 23898, 45, 3, 22556, 16629, 3, 5, 8, 358, 3, 6848, 13, 3, 9, 220, 26, 17831, 1188, 24, 963, 731, 3161, 5204, 13, 8, 220, 26, 2250, 3, 6, 11, 3, 9, 18968, 2460, 24, 16061, 7, 11, 5146, 1383, 13, 306, 3161, 2250, 1315, 12, 1188, 6166, 3, 5, 8, 2460, 4028, 7, 3, 9, 381, 13, 4453, 7, 12, 4879, 581, 220, 26, 20532, 6032, 3, 6, 224, 38, 4891, 11, 3, 17979, 1690, 15841, 3, 6, 11, 3300, 29404, 53, 11, 1227, 7279, 1222, 8, 20518, 1383, 3, 5, 62, 1099, 633, 487, 1308, 13, 20532, 6032, 30, 224, 3, 9, 18968, 2460, 3, 6, 11, 62, 5443, 149, 175, 6032, 54, 36, 3, 27431, 581, 406, 10981, 120, 3, 24581, 8, 6076, 351, 21, 529, 22326, 1105, 3, 5, 5764, 5897, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 6484, 1002, 4322, 1002, 1], "trg": "remote rendering;3d models;security;digital rights management", "tokenized_trg": [4322, 18968, 32100, 220, 26, 2250, 32100, 1034, 32100, 1125, 2166, 758, 1]}
{"src": "providing the basis for human robot interaction a multi modal attention system for a mobile robot . <sep> in order to enable the widespread use of robots in home and office environments , systems with natural interaction capabilities have to be developed . a prerequisite for natural interaction is the robot ' s ability to automatically recognize when and how long a person ' s attention is directed towards it for communication . as in open environments several persons can be present simultaneously , the detection of the communication partner is of particular importance . in this paper we present an attention system for a mobile robot which enables the robot to shift its attention to the person of interest and to maintain attention during interaction . our approach is based on a method for multi modal person tracking which uses a pan tilt camera for face recognition , two microphones for sound source localization , and a laser range finder for leg detection . shifting of attention is realized by turning the camera into the direction of the person which is currently speaking . from the orientation of the head it is decided whether the speaker addresses the robot . the performance of the proposed approach is demonstrated with an evaluation . in addition , qualitative results from the performance of the robot at the exhibition part of the icvs ' <digit> are provided . categories and subject descriptors i . <digit> . <digit> image processing and computer vision scene analysis sensor fusion , tracking h . <digit> . <digit> models and principles user machine systems i . <digit> . <digit> pattern recognition implemen tation interactive systems general terms algorithms , performance , experimentation", "tokenized_src": [1260, 8, 1873, 21, 936, 7567, 6565, 3, 9, 1249, 3, 20226, 1388, 358, 21, 3, 9, 1156, 7567, 3, 5, 32100, 16, 455, 12, 2956, 8, 14047, 169, 13, 7567, 7, 16, 234, 11, 828, 8258, 3, 6, 1002, 28, 793, 6565, 5644, 43, 12, 36, 1597, 3, 5, 3, 9, 26840, 21, 793, 6565, 19, 8, 7567, 3, 31, 3, 7, 1418, 12, 3269, 4206, 116, 11, 149, 307, 3, 9, 568, 3, 31, 3, 7, 1388, 19, 6640, 1587, 34, 21, 1901, 3, 5, 38, 16, 539, 8258, 633, 7609, 54, 36, 915, 11609, 3, 6, 8, 10664, 13, 8, 1901, 2397, 19, 13, 1090, 3172, 3, 5, 16, 48, 1040, 62, 915, 46, 1388, 358, 21, 3, 9, 1156, 7567, 84, 3, 7161, 8, 7567, 12, 4108, 165, 1388, 12, 8, 568, 13, 1046, 11, 12, 1961, 1388, 383, 6565, 3, 5, 69, 1295, 19, 3, 390, 30, 3, 9, 1573, 21, 1249, 3, 20226, 568, 6418, 84, 2284, 3, 9, 2131, 20382, 1861, 21, 522, 5786, 3, 6, 192, 18701, 7, 21, 1345, 1391, 415, 1707, 3, 6, 11, 3, 9, 6124, 620, 253, 49, 21, 4553, 10664, 3, 5, 16739, 13, 1388, 19, 5723, 57, 5074, 8, 1861, 139, 8, 2212, 13, 8, 568, 84, 19, 1083, 4461, 3, 5, 45, 8, 12602, 13, 8, 819, 34, 19, 1500, 823, 8, 5873, 7181, 8, 7567, 3, 5, 8, 821, 13, 8, 4382, 1295, 19, 9028, 28, 46, 5002, 3, 5, 16, 811, 3, 6, 19647, 772, 45, 8, 821, 13, 8, 7567, 44, 8, 4473, 294, 13, 8, 3, 447, 208, 7, 3, 31, 32101, 33, 937, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 23, 3, 5, 32101, 3, 5, 32101, 1023, 3026, 11, 1218, 2267, 3112, 1693, 7824, 3, 7316, 3, 6, 6418, 3, 107, 3, 5, 32101, 3, 5, 32101, 2250, 11, 5559, 1139, 1437, 1002, 3, 23, 3, 5, 32101, 3, 5, 32101, 3275, 5786, 4840, 109, 904, 3, 6821, 6076, 1002, 879, 1353, 16783, 3, 6, 821, 3, 6, 5016, 257, 1], "trg": "human robot interaction;attention;multi modal person tracking", "tokenized_trg": [936, 7567, 6565, 32100, 1388, 32100, 1249, 3, 20226, 568, 6418, 1]}
{"src": "psychologically targeted persuasive advertising and product information in e commerce . <sep> in this paper , we describe a framework for a personalization system to systematically induce desired emotion and attention related states and promote information processing in viewers of online advertising and e commerce product information . psychological customization entails personalization of the way of presenting information ( user interface , visual layouts , modalities , structures ) per user to create desired transient psychological effects and states , such as emotion , attention , involvement , presence , persuasion and learning . conceptual foundations and empiric evidence for the approach are presented . categories and subject descriptors h . <digit> . <digit> user machine systems human factors , human information processing , software psychology general terms performance , design , human factors , theory", "tokenized_src": [11041, 120, 7774, 29535, 3662, 11, 556, 251, 16, 3, 15, 12794, 3, 5, 32100, 16, 48, 1040, 3, 6, 62, 5530, 3, 9, 4732, 21, 3, 9, 525, 1707, 358, 12, 3, 28657, 21151, 5327, 13868, 11, 1388, 1341, 2315, 11, 2519, 251, 3026, 16, 13569, 13, 367, 3662, 11, 3, 15, 12794, 556, 251, 3, 5, 11041, 22039, 3, 35, 5756, 7, 525, 1707, 13, 8, 194, 13, 3, 12072, 251, 41, 1139, 3459, 3, 6, 3176, 5315, 7, 3, 6, 3, 20226, 2197, 3, 6, 5278, 3, 61, 399, 1139, 12, 482, 5327, 3017, 4741, 11041, 1951, 11, 2315, 3, 6, 224, 38, 13868, 3, 6, 1388, 3, 6, 9683, 3, 6, 3053, 3, 6, 399, 7, 76, 9, 1938, 11, 1036, 3, 5, 17428, 3361, 7, 11, 8943, 23, 2234, 2084, 21, 8, 1295, 33, 2569, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 1139, 1437, 1002, 936, 2580, 3, 6, 936, 251, 3026, 3, 6, 889, 14153, 879, 1353, 821, 3, 6, 408, 3, 6, 936, 2580, 3, 6, 4516, 1], "trg": "persuasion;advertising;e commerce;personalization emotion", "tokenized_trg": [399, 7, 76, 9, 1938, 32100, 3662, 32100, 3, 15, 12794, 32100, 525, 1707, 13868, 1]}
{"src": "publicly verifiable ownership protection for relational databases . <sep> today , watermarking techniques have been extended from the multimedia context to relational databases so as to protect the ownership of data even after the data are published or distributed . however , all existing watermarking schemes for relational databases are secret key based , thus require a secret key to be presented in proof of ownership . this means that the ownership can only be proven once to the public ( e . g . , to the court ) . after that , the secret key is known to the public and the embedded watermark can be easily destroyed by malicious users . moreover , most of the existing techniques introduce distortions to the underlying data in the watermarking process , either by modifying least significant bits or exchanging categorical values . the distortions inevitably reduce the value of the data . in this paper , we propose a watermarking scheme by which the ownership of data can be publicly proven by anyone , as many times as necessary . the proposed scheme is distortion free , thus suitable for watermarking any type of data without fear of error constraints . the proposed scheme is robust against typical database attacks including tuple attribute insertion deletion , ran dom selective value modification , data frame up , and additive attacks categories and subject descriptors h . <digit> . <digit> database management systems relational databases", "tokenized_src": [11652, 548, 99, 23, 179, 7915, 1711, 21, 4689, 138, 16961, 3, 5, 32100, 469, 3, 6, 387, 3920, 53, 2097, 43, 118, 4760, 45, 8, 19131, 2625, 12, 4689, 138, 16961, 78, 38, 12, 1822, 8, 7915, 13, 331, 237, 227, 8, 331, 33, 1790, 42, 8308, 3, 5, 983, 3, 6, 66, 1895, 387, 3920, 53, 15171, 21, 4689, 138, 16961, 33, 2829, 843, 3, 390, 3, 6, 2932, 1457, 3, 9, 2829, 843, 12, 36, 2569, 16, 5594, 13, 7915, 3, 5, 48, 598, 24, 8, 7915, 54, 163, 36, 4162, 728, 12, 8, 452, 41, 3, 15, 3, 5, 3, 122, 3, 5, 3, 6, 12, 8, 1614, 3, 61, 3, 5, 227, 24, 3, 6, 8, 2829, 843, 19, 801, 12, 8, 452, 11, 8, 13612, 387, 3920, 54, 36, 1153, 10932, 57, 22326, 1105, 3, 5, 72, 1890, 3, 6, 167, 13, 8, 1895, 2097, 4277, 26095, 7, 12, 8, 3, 10067, 331, 16, 8, 387, 3920, 53, 433, 3, 6, 893, 57, 3, 29644, 709, 1516, 14120, 42, 1215, 12757, 9624, 11498, 1489, 2620, 3, 5, 8, 26095, 7, 3, 21874, 1428, 8, 701, 13, 8, 331, 3, 5, 16, 48, 1040, 3, 6, 62, 4230, 3, 9, 387, 3920, 53, 5336, 57, 84, 8, 7915, 13, 331, 54, 36, 11652, 4162, 57, 1321, 3, 6, 38, 186, 648, 38, 1316, 3, 5, 8, 4382, 5336, 19, 26095, 339, 3, 6, 2932, 3255, 21, 387, 3920, 53, 136, 686, 13, 331, 406, 2971, 13, 3505, 17765, 3, 5, 8, 4382, 5336, 19, 6268, 581, 4541, 3501, 6032, 379, 3, 17, 413, 109, 15816, 3, 23565, 29431, 3, 6, 4037, 3, 5012, 20459, 701, 12767, 3, 6, 331, 2835, 95, 3, 6, 11, 20541, 6032, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 1002, 4689, 138, 16961, 1], "trg": "ownership protection;relational database;watermark;public verifiability;certificate", "tokenized_trg": [7915, 1711, 32100, 4689, 138, 3501, 32100, 387, 3920, 32100, 452, 548, 99, 23, 2020, 32100, 6017, 1]}
{"src": "putting integrated information in context superimposing conceptual models with sparce . <sep> a person working with diverse information sources with possibly different formats and information models may recognize and wish to express conceptual structures that are not explicitly present in those sources . rather than replicate the portions of interest and recast them into a single , combined data source , we leave base information where it is and superimpose a conceptual model that is appropriate to the task at hand . this superimposed model can be distinct from the model ( s ) employed by the sources in the base layer . an application that superimposes a new conceptual model over diverse sources , with varying capabilities , needs to accommodate the various types of information and differing access protocols for the base information sources . the superimposed pluggable architecture for contexts and excerpts ( sparce ) defines a collection of architectural abstractions , placed between superimposed and base applications , to demarcate and revisit information elements inside base sources and provide access to content and context for elements inside these sources . sparce accommodates new base information types without altering existing superimposed applications . in this paper , we briefly introduce several superimposed applications that we have built , and describe the conceptual model each superimposes . we then focus on the use of context in superimposed applications . we describe how sparce supports context and excerpts . we demonstrate how sparce facilitates building superimposed applications by describing its use in building our two , quite diverse applications .", "tokenized_src": [3, 3131, 4580, 251, 16, 2625, 1355, 26781, 17428, 2250, 28, 14144, 565, 3, 5, 32100, 3, 9, 568, 464, 28, 2399, 251, 2836, 28, 3673, 315, 10874, 11, 251, 2250, 164, 4206, 11, 1663, 12, 3980, 17428, 5278, 24, 33, 59, 21119, 915, 16, 273, 2836, 3, 5, 1066, 145, 18526, 8, 17622, 13, 1046, 11, 3, 60, 5254, 135, 139, 3, 9, 712, 3, 6, 3334, 331, 1391, 3, 6, 62, 1175, 1247, 251, 213, 34, 19, 11, 1355, 12436, 3, 9, 17428, 825, 24, 19, 2016, 12, 8, 2491, 44, 609, 3, 5, 48, 1355, 16068, 825, 54, 36, 6746, 45, 8, 825, 41, 3, 7, 3, 61, 8152, 57, 8, 2836, 16, 8, 1247, 3760, 3, 5, 46, 917, 24, 1355, 12436, 7, 3, 9, 126, 17428, 825, 147, 2399, 2836, 3, 6, 28, 3, 14177, 5644, 3, 6, 523, 12, 6563, 8, 796, 1308, 13, 251, 11, 7641, 53, 592, 18870, 21, 8, 1247, 251, 2836, 3, 5, 8, 1355, 16068, 6635, 122, 179, 4648, 21, 2625, 7, 11, 29603, 7, 41, 14144, 565, 3, 61, 17692, 3, 9, 1232, 13, 10900, 28708, 7, 3, 6, 2681, 344, 1355, 16068, 11, 1247, 1564, 3, 6, 12, 20, 1635, 8367, 11, 20442, 251, 2479, 1096, 1247, 2836, 11, 370, 592, 12, 738, 11, 2625, 21, 2479, 1096, 175, 2836, 3, 5, 14144, 565, 6563, 7, 126, 1247, 251, 1308, 406, 8310, 53, 1895, 1355, 16068, 1564, 3, 5, 16, 48, 1040, 3, 6, 62, 16964, 4277, 633, 1355, 16068, 1564, 24, 62, 43, 1192, 3, 6, 11, 5530, 8, 17428, 825, 284, 1355, 12436, 7, 3, 5, 62, 258, 992, 30, 8, 169, 13, 2625, 16, 1355, 16068, 1564, 3, 5, 62, 5530, 149, 14144, 565, 4951, 2625, 11, 29603, 7, 3, 5, 62, 5970, 149, 14144, 565, 6758, 7, 740, 1355, 16068, 1564, 57, 3, 16012, 165, 169, 16, 740, 69, 192, 3, 6, 882, 2399, 1564, 3, 5, 1], "trg": "context;conceptual modelling;excerpts;sparce .;software architecture;superimposed information", "tokenized_trg": [2625, 32100, 17428, 24716, 32100, 29603, 7, 32100, 14144, 565, 3, 5, 32100, 889, 4648, 32100, 1355, 16068, 251, 1]}
{"src": "quality of service in ip services over bluetooth ad hoc networks . <sep> along with the development of multimedia and wireless networking technologies , mobile multimedia applications are playing more important roles in information access . quality of service ( qos ) is a critical issue in providing guaranteed service in a low bandwidth wireless environment . to provide bluetooth ip services with differentiated quality requirements , a qos centric cascading mechanism is proposed in this paper . this innovative mechanism , composed of intra piconet resource allocation , inter piconet handoff and bluetooth ip access modules , is based on the bluetooth network encapsulation protocol ( bnep ) operation scenario . from our simulations the handoff connection time for a bluetooth device is up to <digit> . <digit> s and the maximum average transmission delay is up to 4e <digit> s when seven devices join a piconet simultaneously . increasing the queue length for the bluetooth ip access system will decrease the traffic loss rate by <digit> . <digit> per <digit> ip packets at the expense of a small delay performance .", "tokenized_src": [463, 13, 313, 16, 3, 23, 102, 364, 147, 31327, 3, 9, 26, 3, 24344, 5275, 3, 5, 32100, 590, 28, 8, 606, 13, 19131, 11, 5419, 7607, 2896, 3, 6, 1156, 19131, 1564, 33, 1556, 72, 359, 6270, 16, 251, 592, 3, 5, 463, 13, 313, 41, 3, 1824, 32, 7, 3, 61, 19, 3, 9, 2404, 962, 16, 1260, 7206, 313, 16, 3, 9, 731, 19703, 5419, 1164, 3, 5, 12, 370, 31327, 3, 23, 102, 364, 28, 18231, 26, 463, 1502, 3, 6, 3, 9, 3, 1824, 32, 7, 3, 17456, 1990, 658, 26, 53, 8557, 19, 4382, 16, 48, 1040, 3, 5, 48, 3058, 8557, 3, 6, 10431, 13, 6344, 6686, 782, 17, 3487, 17127, 3, 6, 1413, 6686, 782, 17, 609, 1647, 11, 31327, 3, 23, 102, 592, 10561, 3, 6, 19, 3, 390, 30, 8, 31327, 1229, 3, 35, 30080, 257, 10015, 41, 3, 115, 29, 15, 102, 3, 61, 2986, 8616, 3, 5, 45, 69, 11108, 7, 8, 609, 1647, 2135, 97, 21, 3, 9, 31327, 1407, 19, 95, 12, 32101, 3, 5, 32101, 3, 7, 11, 8, 2411, 1348, 5790, 7230, 19, 95, 12, 314, 15, 32101, 3, 7, 116, 2391, 1904, 1715, 3, 9, 6686, 782, 17, 11609, 3, 5, 3094, 8, 16150, 2475, 21, 8, 31327, 3, 23, 102, 592, 358, 56, 6313, 8, 2117, 1453, 1080, 57, 32101, 3, 5, 32101, 399, 32101, 3, 23, 102, 13531, 7, 44, 8, 8225, 13, 3, 9, 422, 7230, 821, 3, 5, 1], "trg": "quality of service;resource allocation;handoff;bluetooth ip access system;bnep protocol", "tokenized_trg": [463, 13, 313, 32100, 3487, 17127, 32100, 609, 1647, 32100, 31327, 3, 23, 102, 592, 358, 32100, 3, 115, 29, 15, 102, 10015, 1]}
{"src": "web question answering is more always better . <sep> this paper describes a question answering system that is designed to capitalize on the tremendous amount of data that is now available online . most question answering systems use a wide variety of linguistic resources . we focus instead on the redundancy available in large corpora as an important resource . we use this redundancy to simplify the query rewrites that we need to use , and to support answer mining from returned snippets . our system performs quite well given the simplicity of the techniques being utilized . experimental results show that question answering accuracy can be greatly improved by analyzing more and more matching passages . simple passage ranking and n gram extraction techniques work well in our system making it efficient to use with many backend retrieval engines . categories and subject descriptors h . <digit> . <digit> . content analysis and indexing , h . <digit> . <digit> information search and retrieval . general terms algorithms , experimentation .", "tokenized_src": [765, 822, 18243, 19, 72, 373, 394, 3, 5, 32100, 48, 1040, 8788, 3, 9, 822, 18243, 358, 24, 19, 876, 12, 29077, 30, 8, 9425, 866, 13, 331, 24, 19, 230, 347, 367, 3, 5, 167, 822, 18243, 1002, 169, 3, 9, 1148, 1196, 13, 3, 24703, 1438, 3, 5, 62, 992, 1446, 30, 8, 1131, 1106, 6833, 347, 16, 508, 11736, 127, 9, 38, 46, 359, 3487, 3, 5, 62, 169, 48, 1131, 1106, 6833, 12, 18356, 8, 11417, 3, 60, 17504, 7, 24, 62, 174, 12, 169, 3, 6, 11, 12, 380, 1525, 5558, 45, 3666, 3, 20317, 4995, 7, 3, 5, 69, 358, 1912, 7, 882, 168, 787, 8, 16538, 13, 8, 2097, 271, 11411, 3, 5, 11082, 772, 504, 24, 822, 18243, 7452, 54, 36, 6891, 3798, 57, 3, 19175, 72, 11, 72, 8150, 5454, 7, 3, 5, 650, 5454, 11592, 11, 3, 29, 3, 5096, 16629, 2097, 161, 168, 16, 69, 358, 492, 34, 2918, 12, 169, 28, 186, 223, 989, 24515, 138, 7277, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3, 5, 738, 1693, 11, 5538, 53, 3, 6, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 960, 11, 24515, 138, 3, 5, 879, 1353, 16783, 3, 6, 5016, 257, 3, 5, 1], "trg": "question answering system;experimentation;simple passage ranking;n gram extraction techniques;algorithms;redundancy in large corpora;automatic qa;trec qa;information extraction;rewrite query;facilitates answer mining;natural language processing;machine learning;information retrieval", "tokenized_trg": [822, 18243, 358, 32100, 5016, 257, 32100, 650, 5454, 11592, 32100, 3, 29, 3, 5096, 16629, 2097, 32100, 16783, 32100, 1131, 1106, 6833, 16, 508, 11736, 127, 9, 32100, 6569, 3, 1824, 9, 32100, 18172, 3, 1824, 9, 32100, 251, 16629, 32100, 3, 60, 17504, 11417, 32100, 6758, 7, 1525, 5558, 32100, 793, 1612, 3026, 32100, 1437, 1036, 32100, 251, 24515, 138, 1]}
{"src": "a programming languages course for freshmen . <sep> programming languages are a part of the core of computer science . courses on programming languages are typically offered to junior or senior students , and textbooks are based on this assumption . however , our computer science curriculum offers the programming languages course in the first year . this unusual situation led us to design it from an untypical approach . in this paper , we first analyze and classify proposals for the programming languages course into different pure and hybrid approaches . then , we describe a course for freshmen based on four pure approaches , and justify the main choices made . finally , we identify the software used for laboratories and outline our experience after teaching it for seven years . categories and subject descriptors k . <digit> . <digit> computers and education computer and information science education computer science education . general terms languages , theory .", "tokenized_src": [3, 9, 6020, 8024, 503, 21, 1434, 904, 3, 5, 32100, 6020, 8024, 33, 3, 9, 294, 13, 8, 2583, 13, 1218, 2056, 3, 5, 2996, 30, 6020, 8024, 33, 3115, 1860, 12, 9212, 42, 2991, 481, 3, 6, 11, 19533, 7, 33, 3, 390, 30, 48, 20662, 3, 5, 983, 3, 6, 69, 1218, 2056, 7850, 704, 8, 6020, 8024, 503, 16, 8, 166, 215, 3, 5, 48, 7225, 1419, 2237, 178, 12, 408, 34, 45, 46, 73, 21888, 1295, 3, 5, 16, 48, 1040, 3, 6, 62, 166, 8341, 11, 853, 4921, 12152, 21, 8, 6020, 8024, 503, 139, 315, 4621, 11, 9279, 6315, 3, 5, 258, 3, 6, 62, 5530, 3, 9, 503, 21, 1434, 904, 3, 390, 30, 662, 4621, 6315, 3, 6, 11, 18686, 8, 711, 3703, 263, 3, 5, 2031, 3, 6, 62, 2862, 8, 889, 261, 21, 25642, 11, 11052, 69, 351, 227, 2119, 34, 21, 2391, 203, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 157, 3, 5, 32101, 3, 5, 32101, 7827, 11, 1073, 1218, 11, 251, 2056, 1073, 1218, 2056, 1073, 3, 5, 879, 1353, 8024, 3, 6, 4516, 3, 5, 1], "trg": "programming languages;programming language course;freshmen;computer science;curriculum;programming methodology;laboratory component;functional programming;language description;formal grammars;recursion;programming paradigms;topics", "tokenized_trg": [6020, 8024, 32100, 6020, 1612, 503, 32100, 1434, 904, 32100, 1218, 2056, 32100, 7850, 32100, 6020, 15663, 32100, 10343, 3876, 32100, 5014, 6020, 32100, 1612, 4210, 32100, 4727, 19519, 7, 32100, 3, 60, 3663, 1938, 32100, 6020, 20491, 7, 32100, 4064, 1]}
{"src": "query result ranking over e commerce web databases . <sep> to deal with the problem of too many results returned from an e commerce web database in response to a user query , this paper proposes a novel approach to rank the query results . based on the user query , we speculate how much the user cares about each attribute and assign a corresponding weight to it . then , for each tuple in the query result , each attribute value is assigned a score according to its desirableness to the user . these attribute value scores are combined according to the attribute weights to get a final ranking score for each tuple . tuples with the top ranking scores are presented to the user first . our ranking method is domain independent and requires no user feedback . experimental results demonstrate that this ranking method can effectively capture a user ' s preferences . categories and subject descriptors h . <digit> . <digit> information storage and retrieval online information services web based services general terms algorithms , design , experimentation , human factors .", "tokenized_src": [11417, 741, 11592, 147, 3, 15, 12794, 765, 16961, 3, 5, 32100, 12, 1154, 28, 8, 682, 13, 396, 186, 772, 3666, 45, 46, 3, 15, 12794, 765, 3501, 16, 1773, 12, 3, 9, 1139, 11417, 3, 6, 48, 1040, 4230, 7, 3, 9, 3714, 1295, 12, 11003, 8, 11417, 772, 3, 5, 3, 390, 30, 8, 1139, 11417, 3, 6, 62, 28270, 149, 231, 8, 1139, 124, 7, 81, 284, 15816, 11, 12317, 3, 9, 3, 9921, 1293, 12, 34, 3, 5, 258, 3, 6, 21, 284, 3, 17, 413, 109, 16, 8, 11417, 741, 3, 6, 284, 15816, 701, 19, 7604, 3, 9, 2604, 1315, 12, 165, 16441, 655, 12, 8, 1139, 3, 5, 175, 15816, 701, 7586, 33, 3334, 1315, 12, 8, 15816, 1293, 7, 12, 129, 3, 9, 804, 11592, 2604, 21, 284, 3, 17, 413, 109, 3, 5, 3, 17, 413, 965, 28, 8, 420, 11592, 7586, 33, 2569, 12, 8, 1139, 166, 3, 5, 69, 11592, 1573, 19, 3303, 2547, 11, 2311, 150, 1139, 3160, 3, 5, 11082, 772, 5970, 24, 48, 11592, 1573, 54, 3762, 4105, 3, 9, 1139, 3, 31, 3, 7, 11177, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 367, 251, 364, 765, 3, 390, 364, 879, 1353, 16783, 3, 6, 408, 3, 6, 5016, 257, 3, 6, 936, 2580, 3, 5, 1], "trg": "query result ranking;query result ranking;e commerce;e commerce web databases;rank the query results;attribute value;experimentation;algorithms;design;human factors;attribute preference;many query result problem;qrre;attribute weight assignment;pir", "tokenized_trg": [11417, 741, 11592, 32100, 11417, 741, 11592, 32100, 3, 15, 12794, 32100, 3, 15, 12794, 765, 16961, 32100, 11003, 8, 11417, 772, 32100, 15816, 701, 32100, 5016, 257, 32100, 16783, 32100, 408, 32100, 936, 2580, 32100, 15816, 11633, 32100, 186, 11417, 741, 682, 32100, 3, 1824, 52, 60, 32100, 15816, 1293, 9587, 32100, 3, 2388, 1]}
{"src": "query type classification for web document retrieval . <sep> the heterogeneous web exacerbates ir problems and short user queries make them worse . the contents of web documents are not enough to find good answer documents . link information and url information compensates for the insufficiencies of content information . however , static combination of multiple evidences may lower the retrieval performance . we need different strategies to find target documents according to a query type . we can classify user queries as three categories , the topic relevance task , the homepage finding task , and the service finding task . in this paper , a user query classification scheme is proposed . this scheme uses the difference of distribution , mutual information , the usage rate as anchor texts , and the pos information for the classification . after we classified a user query , we apply different algorithms and information for the better results . for the topic relevance task , we emphasize the content information , on the other hand , for the homepage finding task , we emphasize the link information and the url information . we could get the best performance when our proposed classification method with the okapi scoring algorithm was used . categories and subject descriptors h . <digit> . m information systems applications miscellaneous general terms experimentation", "tokenized_src": [11417, 686, 13774, 21, 765, 1708, 24515, 138, 3, 5, 32100, 8, 26481, 729, 15, 1162, 765, 3, 31488, 7, 3, 23, 52, 982, 11, 710, 1139, 13154, 143, 135, 4131, 3, 5, 8, 10223, 13, 765, 2691, 33, 59, 631, 12, 253, 207, 1525, 2691, 3, 5, 1309, 251, 11, 3, 16137, 251, 17077, 7, 21, 8, 16, 7, 2999, 1294, 11573, 13, 738, 251, 3, 5, 983, 3, 6, 14491, 2711, 13, 1317, 2084, 7, 164, 1364, 8, 24515, 138, 821, 3, 5, 62, 174, 315, 3266, 12, 253, 2387, 2691, 1315, 12, 3, 9, 11417, 686, 3, 5, 62, 54, 853, 4921, 1139, 13154, 38, 386, 5897, 3, 6, 8, 2859, 20208, 2491, 3, 6, 8, 22844, 2342, 2491, 3, 6, 11, 8, 313, 2342, 2491, 3, 5, 16, 48, 1040, 3, 6, 3, 9, 1139, 11417, 13774, 5336, 19, 4382, 3, 5, 48, 5336, 2284, 8, 1750, 13, 3438, 3, 6, 8543, 251, 3, 6, 8, 4742, 1080, 38, 12865, 14877, 3, 6, 11, 8, 3, 2748, 251, 21, 8, 13774, 3, 5, 227, 62, 12910, 3, 9, 1139, 11417, 3, 6, 62, 1581, 315, 16783, 11, 251, 21, 8, 394, 772, 3, 5, 21, 8, 2859, 20208, 2491, 3, 6, 62, 15523, 8, 738, 251, 3, 6, 30, 8, 119, 609, 3, 6, 21, 8, 22844, 2342, 2491, 3, 6, 62, 15523, 8, 1309, 251, 11, 8, 3, 16137, 251, 3, 5, 62, 228, 129, 8, 200, 821, 116, 69, 4382, 13774, 1573, 28, 8, 3, 1825, 13306, 10389, 12628, 47, 261, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 3, 51, 251, 1002, 1564, 1817, 7125, 8102, 1162, 879, 1353, 5016, 257, 1], "trg": "query;web document;ir;link information;information;url information;url;combination of multiple evidences;task;query classification;rate;improvement;frequency;model", "tokenized_trg": [11417, 32100, 765, 1708, 32100, 3, 23, 52, 32100, 1309, 251, 32100, 251, 32100, 3, 16137, 251, 32100, 3, 16137, 32100, 2711, 13, 1317, 2084, 7, 32100, 2491, 32100, 11417, 13774, 32100, 1080, 32100, 4179, 32100, 7321, 32100, 825, 1]}
{"src": "querying bi level information . <sep> in our research on superimposed information management , we have developed applications where information elements in the superimposed layer serve to annotate , comment , restructure , and combine selections from one or more existing documents in the base layer . base documents tend to be unstructured or semi structured ( html pages , excel spreadsheets , and so on ) with marks delimiting selections . selections in the base layer can be programmatically accessed via marks to retrieve content and context . the applications we have built to date allow creation of new marks and new superimposed elements ( that use marks ) , but they have been browse oriented and tend to expose the line between superimposed and base layers . here , we present a new access capability , called bi level queries , that allows an application or user to query over both layers as a whole . bi level queries provide an alternative style of data integration where only relevant portions of a base document are mediated ( not the whole document ) and the superimposed layer can add information not present in the base layer . we discuss our framework for superimposed information management , an initial implementation of a bi level query system with an xml query interface , and suggest mechanisms to improve scalability and performance . categories and subject descriptors h . <digit> . <digit> information storage and retrieval information search and retrieval information filtering , retrieval models , h . <digit> . <digit> database management heterogeneous databases . general terms management , performance , design .", "tokenized_src": [11417, 53, 2647, 593, 251, 3, 5, 32100, 16, 69, 585, 30, 1355, 16068, 251, 758, 3, 6, 62, 43, 1597, 1564, 213, 251, 2479, 16, 8, 1355, 16068, 3760, 1716, 12, 46, 2264, 342, 3, 6, 1670, 3, 6, 3, 60, 16180, 3, 6, 11, 5148, 1801, 7, 45, 80, 42, 72, 1895, 2691, 16, 8, 1247, 3760, 3, 5, 1247, 2691, 2134, 12, 36, 73, 16180, 26, 42, 4772, 14039, 41, 3, 10500, 1688, 3, 6, 11197, 18527, 7, 3, 6, 11, 78, 30, 3, 61, 28, 6784, 20, 17979, 1801, 7, 3, 5, 1801, 7, 16, 8, 1247, 3760, 54, 36, 478, 4992, 1427, 3, 11282, 1009, 6784, 12, 21830, 738, 11, 2625, 3, 5, 8, 1564, 62, 43, 1192, 12, 833, 995, 3409, 13, 126, 6784, 11, 126, 1355, 16068, 2479, 41, 24, 169, 6784, 3, 61, 3, 6, 68, 79, 43, 118, 9708, 3, 9442, 11, 2134, 12, 14644, 8, 689, 344, 1355, 16068, 11, 1247, 7500, 3, 5, 270, 3, 6, 62, 915, 3, 9, 126, 592, 9004, 3, 6, 718, 2647, 593, 13154, 3, 6, 24, 1250, 46, 917, 42, 1139, 12, 11417, 147, 321, 7500, 38, 3, 9, 829, 3, 5, 2647, 593, 13154, 370, 46, 2433, 869, 13, 331, 5660, 213, 163, 2193, 17622, 13, 3, 9, 1247, 1708, 33, 3, 26486, 41, 59, 8, 829, 1708, 3, 61, 11, 8, 1355, 16068, 3760, 54, 617, 251, 59, 915, 16, 8, 1247, 3760, 3, 5, 62, 2497, 69, 4732, 21, 1355, 16068, 251, 758, 3, 6, 46, 2332, 4432, 13, 3, 9, 2647, 593, 11417, 358, 28, 46, 3, 226, 51, 40, 11417, 3459, 3, 6, 11, 3130, 12009, 12, 1172, 3, 7, 1489, 2020, 11, 821, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 251, 4191, 53, 3, 6, 24515, 138, 2250, 3, 6, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 26481, 729, 15, 1162, 16961, 3, 5, 879, 1353, 758, 3, 6, 821, 3, 6, 408, 3, 5, 1], "trg": "query;information;superimposed information management;superimposed;management;document;bi level queries;implementation;system;sparce;hyperlink;ridpad;information integration;metaxpath", "tokenized_trg": [11417, 32100, 251, 32100, 1355, 16068, 251, 758, 32100, 1355, 16068, 32100, 758, 32100, 1708, 32100, 2647, 593, 13154, 32100, 4432, 32100, 358, 32100, 14144, 565, 32100, 29588, 32100, 5413, 5612, 32100, 251, 5660, 32100, 140, 14727, 8292, 1]}
{"src": "ranking flows from sampled traffic . <sep> most of the theoretical work on sampling has addressed the inversion of general traffic properties such as flow size distribution , average flow size , or total number of flows . in this paper , we make a step towards understanding the impact of packet sampling on individual flow properties . we study how to detect and rank the largest flows on a link . to this end , we develop an analytical model that we validate on real traces from two networks . first we study a blind ranking method where only the number of sampled packets from each flow is known . then , we propose a new method , protocol aware ranking , where we make use of the packet sequence number ( when available in transport header ) to infer the number of non sampled packets from a flow , and hence to improve the ranking . surprisingly , our analytical and experimental results indicate that a high sampling rate ( <digit> % and even more depending on the number of top flows to be ranked ) is required for a correct blind ranking of the largest flows . the sampling rate can be reduced by an order of magnitude if one just aims at detecting these flows or by using the protocol aware method . categories and subject descriptors c . <digit> computer systems organization performance of systems measurement techniques general terms measurement , performance , experimentation this work was done while the author was visiting intel research cambridge .", "tokenized_src": [11592, 14428, 45, 3106, 26, 2117, 3, 5, 32100, 167, 13, 8, 13605, 161, 30, 17222, 65, 8705, 8, 16, 8674, 13, 879, 2117, 2605, 224, 38, 2537, 812, 3438, 3, 6, 1348, 2537, 812, 3, 6, 42, 792, 381, 13, 14428, 3, 5, 16, 48, 1040, 3, 6, 62, 143, 3, 9, 1147, 1587, 1705, 8, 1113, 13, 13531, 17222, 30, 928, 2537, 2605, 3, 5, 62, 810, 149, 12, 8432, 11, 11003, 8, 2015, 14428, 30, 3, 9, 1309, 3, 5, 12, 48, 414, 3, 6, 62, 1344, 46, 18355, 825, 24, 62, 16742, 30, 490, 3, 24834, 45, 192, 5275, 3, 5, 166, 62, 810, 3, 9, 5480, 11592, 1573, 213, 163, 8, 381, 13, 3106, 26, 13531, 7, 45, 284, 2537, 19, 801, 3, 5, 258, 3, 6, 62, 4230, 3, 9, 126, 1573, 3, 6, 10015, 2718, 11592, 3, 6, 213, 62, 143, 169, 13, 8, 13531, 5932, 381, 41, 116, 347, 16, 1855, 13956, 3, 61, 12, 16, 1010, 8, 381, 13, 529, 3106, 26, 13531, 7, 45, 3, 9, 2537, 3, 6, 11, 10321, 12, 1172, 8, 11592, 3, 5, 3, 12713, 3, 6, 69, 18355, 11, 11082, 772, 6360, 24, 3, 9, 306, 17222, 1080, 41, 32101, 3, 1454, 11, 237, 72, 3345, 30, 8, 381, 13, 420, 14428, 12, 36, 3, 8232, 3, 61, 19, 831, 21, 3, 9, 2024, 5480, 11592, 13, 8, 2015, 14428, 3, 5, 8, 17222, 1080, 54, 36, 3915, 57, 46, 455, 13, 20722, 3, 99, 80, 131, 3, 8345, 44, 3, 29782, 175, 14428, 42, 57, 338, 8, 10015, 2718, 1573, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 1218, 1002, 1470, 821, 13, 1002, 9753, 2097, 879, 1353, 9753, 3, 6, 821, 3, 6, 5016, 257, 48, 161, 47, 612, 298, 8, 2291, 47, 3644, 16, 1625, 585, 5511, 9818, 3, 5, 1], "trg": "packet sampling;largest flow detection and ranking;validation with real traces;performance evaluation", "tokenized_trg": [13531, 17222, 32100, 2015, 2537, 10664, 11, 11592, 32100, 16148, 28, 490, 3, 24834, 32100, 821, 5002, 1]}
{"src": "ranking target objects of navigational queries . <sep> web navigation plays an important role in exploring public interconnected data sources such as life science data . a navigational query in the life science graph produces a result graph which is a layered directed acyclic graph ( dag ) . traversing the result paths in this graph reaches a target object set ( tos ) . the challenge for ranking the target objects is to provide recommendations that reflect the relative importance of the retrieved object , as well as its relevance to the specific query posed by the scientist . we present a metric layered graph pagerank ( lgpr ) to rank target objects based on the link structure of the result graph . lgpr is a modification of pagerank it avoids random jumps to respect the path structure of the result graph . we also outline a metric layered graph objectrank ( lgor ) which extends the metric objectrank to layered graphs . we then present an initial evaluation of lgpr . we perform experiments on a real world graph of life sciences objects from ncbi and report on the ranking distribution produced by lgpr . we compare lgpr with pagerank . in order to understand the characteristics of lgpr , an expert compared the top k target objects ( publications in the pubmed source ) produced by lgpr and a word based ranking method that uses text features extracted from an external source ( such as entrez gene ) to rank publications . categories and subject descriptors h . <digit> . <digit> information storage and retrieval on line information services , web based services h . <digit> . <digit> database management database applications , data mining general terms algorithms , experimentation", "tokenized_src": [11592, 2387, 4820, 13, 8789, 138, 13154, 3, 5, 32100, 765, 8789, 4805, 46, 359, 1075, 16, 6990, 452, 1413, 19386, 331, 2836, 224, 38, 280, 2056, 331, 3, 5, 3, 9, 8789, 138, 11417, 16, 8, 280, 2056, 8373, 9560, 3, 9, 741, 8373, 84, 19, 3, 9, 3, 21281, 6640, 3, 9, 7132, 447, 8373, 41, 836, 122, 3, 61, 3, 5, 5187, 53, 8, 741, 13704, 16, 48, 8373, 3, 12763, 3, 9, 2387, 3735, 356, 41, 12, 7, 3, 61, 3, 5, 8, 1921, 21, 11592, 8, 2387, 4820, 19, 12, 370, 5719, 24, 3548, 8, 5237, 3172, 13, 8, 3, 31340, 3735, 3, 6, 38, 168, 38, 165, 20208, 12, 8, 806, 11417, 3, 12151, 57, 8, 17901, 3, 5, 62, 915, 3, 9, 3, 7959, 3, 21281, 8373, 543, 6254, 41, 3, 40, 122, 102, 52, 3, 61, 12, 11003, 2387, 4820, 3, 390, 30, 8, 1309, 1809, 13, 8, 741, 8373, 3, 5, 3, 40, 122, 102, 52, 19, 3, 9, 12767, 13, 543, 6254, 34, 1792, 7, 6504, 4418, 7, 12, 1445, 8, 2071, 1809, 13, 8, 741, 8373, 3, 5, 62, 92, 11052, 3, 9, 3, 7959, 3, 21281, 8373, 3735, 6254, 41, 3, 40, 122, 127, 3, 61, 84, 4285, 7, 8, 3, 7959, 3735, 6254, 12, 3, 21281, 8373, 7, 3, 5, 62, 258, 915, 46, 2332, 5002, 13, 3, 40, 122, 102, 52, 3, 5, 62, 1912, 12341, 30, 3, 9, 490, 296, 8373, 13, 280, 13554, 4820, 45, 3, 29, 75, 115, 23, 11, 934, 30, 8, 11592, 3438, 2546, 57, 3, 40, 122, 102, 52, 3, 5, 62, 4048, 3, 40, 122, 102, 52, 28, 543, 6254, 3, 5, 16, 455, 12, 734, 8, 6803, 13, 3, 40, 122, 102, 52, 3, 6, 46, 2205, 3, 2172, 8, 420, 3, 157, 2387, 4820, 41, 10142, 16, 8, 11943, 2726, 1391, 3, 61, 2546, 57, 3, 40, 122, 102, 52, 11, 3, 9, 1448, 3, 390, 11592, 1573, 24, 2284, 1499, 753, 21527, 45, 46, 3866, 1391, 41, 224, 38, 1721, 172, 6510, 3, 61, 12, 11003, 10142, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 30, 689, 251, 364, 3, 6, 765, 3, 390, 364, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 3501, 1564, 3, 6, 331, 5558, 879, 1353, 16783, 3, 6, 5016, 257, 1], "trg": "ranking;navigational query;pagerank;link analysis", "tokenized_trg": [11592, 32100, 8789, 138, 11417, 32100, 543, 6254, 32100, 1309, 1693, 1]}
{"src": "ranking web objects from multiple communities . <sep> vertical search is a promising direction as it leverages domain specific knowledge and can provide more precise information for users . in this paper , we study the web object ranking problem , one of the key issues in building a vertical search engine . more specifically , we focus on this problem in cases when objects lack relationships between different web communities , and take high quality photo search as the test bed for this investigation . we proposed two score fusion methods that can automatically integrate as many web communities ( web forums ) with rating information as possible . the proposed fusion methods leverage the hidden links discovered by a duplicate photo detection algorithm , and aims at minimizing score differences of duplicate photos in different forums . both intermediate results and user studies show the proposed fusion methods are practical and efficient solutions to web object ranking in cases we have described . though the experiments were conducted on high quality photo ranking , the proposed algorithms are also applicable to other ranking problems , such as movie ranking and music ranking categories and subject descriptors h . <digit> . <digit> information storage and retrieval information search and retrieval g . <digit> . <digit> discrete mathematics graph theory h . <digit> . <digit> information storage and retrieval online information services , web based services le chen did this work at microsoft research asia as a visiting scholar . general terms algorithms , experimentation", "tokenized_src": [11592, 765, 4820, 45, 1317, 2597, 3, 5, 32100, 5857, 960, 19, 3, 9, 12894, 2212, 38, 34, 11531, 7, 3303, 806, 1103, 11, 54, 370, 72, 9272, 251, 21, 1105, 3, 5, 16, 48, 1040, 3, 6, 62, 810, 8, 765, 3735, 11592, 682, 3, 6, 80, 13, 8, 843, 807, 16, 740, 3, 9, 5857, 960, 1948, 3, 5, 72, 3346, 3, 6, 62, 992, 30, 48, 682, 16, 1488, 116, 4820, 2136, 3079, 344, 315, 765, 2597, 3, 6, 11, 240, 306, 463, 1202, 960, 38, 8, 794, 1953, 21, 48, 4962, 3, 5, 62, 4382, 192, 2604, 3, 7316, 2254, 24, 54, 3269, 9162, 38, 186, 765, 2597, 41, 765, 13694, 3, 61, 28, 5773, 251, 38, 487, 3, 5, 8, 4382, 3, 7316, 2254, 11531, 8, 5697, 2416, 3883, 57, 3, 9, 19197, 1202, 10664, 12628, 3, 6, 11, 3, 8345, 44, 3, 28807, 2604, 5859, 13, 19197, 1302, 16, 315, 13694, 3, 5, 321, 18957, 772, 11, 1139, 2116, 504, 8, 4382, 3, 7316, 2254, 33, 3236, 11, 2918, 1275, 12, 765, 3735, 11592, 16, 1488, 62, 43, 3028, 3, 5, 713, 8, 12341, 130, 4468, 30, 306, 463, 1202, 11592, 3, 6, 8, 4382, 16783, 33, 92, 5383, 12, 119, 11592, 982, 3, 6, 224, 38, 1974, 11592, 11, 723, 11592, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 3, 122, 3, 5, 32101, 3, 5, 32101, 19217, 15, 17082, 8373, 4516, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 367, 251, 364, 3, 6, 765, 3, 390, 364, 90, 3, 1559, 410, 48, 161, 44, 3, 30574, 585, 3, 15974, 38, 3, 9, 3644, 24662, 3, 5, 879, 1353, 16783, 3, 6, 5016, 257, 1], "trg": "ranking;web objects;image search", "tokenized_trg": [11592, 32100, 765, 4820, 32100, 1023, 960, 1]}
{"src": "real world oriented information sharing using social networks . <sep> while users disseminate various information in the open and widely distributed environment of the semantic web , determination of who shares access to particular information is at the center of looming privacy concerns . we propose a real world oriented information sharing system that uses social networks . the system automatically obtains users ' social relationships by mining various external sources . it also enables users to analyze their social networks to provide awareness of the information dissemination process . users can determine who has access to particular information based on the social relationships and network analysis . categories and subject descriptors h . <digit> . <digit> information interfaces and presentation group and organizational interfaces collaborative computing , computer supported cooperative work , web based interaction general terms design , human factors", "tokenized_src": [490, 296, 3, 9442, 251, 2178, 338, 569, 5275, 3, 5, 32100, 298, 1105, 1028, 7, 15, 51, 8660, 796, 251, 16, 8, 539, 11, 5456, 8308, 1164, 13, 8, 27632, 765, 3, 6, 11444, 13, 113, 4776, 592, 12, 1090, 251, 19, 44, 8, 1530, 13, 3, 14351, 53, 4570, 3315, 3, 5, 62, 4230, 3, 9, 490, 296, 3, 9442, 251, 2178, 358, 24, 2284, 569, 5275, 3, 5, 8, 358, 3269, 3442, 7, 1105, 3, 31, 569, 3079, 57, 5558, 796, 3866, 2836, 3, 5, 34, 92, 3, 7161, 1105, 12, 8341, 70, 569, 5275, 12, 370, 4349, 13, 8, 251, 31363, 433, 3, 5, 1105, 54, 2082, 113, 65, 592, 12, 1090, 251, 3, 390, 30, 8, 569, 3079, 11, 1229, 1693, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 3459, 7, 11, 3831, 563, 11, 13477, 3459, 7, 9642, 10937, 3, 6, 1218, 3510, 20270, 161, 3, 6, 765, 3, 390, 6565, 879, 1353, 408, 3, 6, 936, 2580, 1], "trg": "information sharing;social network", "tokenized_trg": [251, 2178, 32100, 569, 1229, 1]}
{"src": "remote access to large spatial databases . <sep> enterprises in the public and private sectors have been making their large spatial data archives available over the internet . however , interactive work with such large volumes of online spatial data is a challenging task . we propose two efficient approaches to remote access to large spatial data . first , we introduce a client server architecture where the work is distributed between the server and the individual clients for spatial query evaluation , data visualization , and data management . we enable the minimization of the requirements for system resources on the client side while maximizing system responsiveness as well as the number of connections one server can handle concurrently . second , for prolonged periods of access to large online data , we introduce appoint ( an approach for peer to peer offloading the internet ) . this is a centralized peer to peer approach that helps internet users transfer large volumes of online data efficiently . in appoint , active clients of the client server architecture act on the server ' s behalf and communicate with each other to decrease network latency , improve service bandwidth , and resolve server congestions . categories and subject descriptors c . <digit> . <digit> computer communication networks distributed systems client server , distributed applications , distributed databases h . <digit> . <digit> database management database applications spatial databases and gis general terms performance , management", "tokenized_src": [4322, 592, 12, 508, 15208, 16961, 3, 5, 32100, 14876, 16, 8, 452, 11, 1045, 8981, 43, 118, 492, 70, 508, 15208, 331, 18274, 347, 147, 8, 1396, 3, 5, 983, 3, 6, 6076, 161, 28, 224, 508, 13548, 13, 367, 15208, 331, 19, 3, 9, 4421, 2491, 3, 5, 62, 4230, 192, 2918, 6315, 12, 4322, 592, 12, 508, 15208, 331, 3, 5, 166, 3, 6, 62, 4277, 3, 9, 1188, 2460, 4648, 213, 8, 161, 19, 8308, 344, 8, 2460, 11, 8, 928, 820, 21, 15208, 11417, 5002, 3, 6, 331, 21744, 3, 6, 11, 331, 758, 3, 5, 62, 2956, 8, 8984, 1707, 13, 8, 1502, 21, 358, 1438, 30, 8, 1188, 596, 298, 3, 30259, 358, 10586, 655, 38, 168, 38, 8, 381, 13, 5992, 80, 2460, 54, 2174, 18964, 120, 3, 5, 511, 3, 6, 21, 22914, 8811, 13, 592, 12, 508, 367, 331, 3, 6, 62, 4277, 3, 9, 102, 2700, 41, 46, 1295, 21, 11409, 12, 11409, 326, 7134, 53, 8, 1396, 3, 61, 3, 5, 48, 19, 3, 9, 3, 21411, 11409, 12, 11409, 1295, 24, 1691, 1396, 1105, 2025, 508, 13548, 13, 367, 331, 8877, 3, 5, 16, 3, 9, 102, 2700, 3, 6, 1676, 820, 13, 8, 1188, 2460, 4648, 1810, 30, 8, 2460, 3, 31, 3, 7, 6089, 11, 4521, 28, 284, 119, 12, 6313, 1229, 1480, 11298, 3, 6, 1172, 313, 19703, 3, 6, 11, 7785, 2460, 26294, 7, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 1218, 1901, 5275, 8308, 1002, 1188, 2460, 3, 6, 8308, 1564, 3, 6, 8308, 16961, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 3501, 1564, 15208, 16961, 11, 3, 122, 159, 879, 1353, 821, 3, 6, 758, 1], "trg": "internet;client server;peer to peer;gis", "tokenized_trg": [1396, 32100, 1188, 2460, 32100, 11409, 12, 11409, 32100, 3, 122, 159, 1]}
{"src": "<unk> gaining insights through exploration in multimedia scientific data . <sep> an increasing amount of heterogeneous information about scientific research is becoming available on line . this potentially allows users to explore the information from multiple perspectives and derive insights and not just raw data about a topic of interest . however , most current scientific information search systems lag behind this trend being text based , they are fundamentally incapable of dealing with multimedia data . an even more important limitation is that their information environments are information centric and therefore are not suitable if insights are desired . towards this goal , in this paper , we describe the design of a system , called <unk> , which facilitates exploring multimedia scientific data to gain insights . this is accomplished by providing an interaction environment for insights where users can explore multimedia scientific information sources . the multimedia information is united around the notion of research event and can be accessed in a unified way . experiments are conducted to show how <unk> works and how it cardinally differs from other search systems . categories and subject descriptors h . <digit> . <digit> information interfaces and presentation user interfaces , graphical user interfaces h . <digit> . <digit> database management database applications , scientific databases h . <digit> . <digit> information storage and retrieval content analysis and indexing , indexing methods h . <digit> . <digit> information storage and retrieval information search and retrieval , query formulation , search process . general terms management , design , experimentation .", "tokenized_src": [2, 3, 11866, 7639, 190, 9740, 16, 19131, 4290, 331, 3, 5, 32100, 46, 3094, 866, 13, 26481, 729, 15, 1162, 251, 81, 4290, 585, 19, 2852, 347, 30, 689, 3, 5, 48, 6149, 1250, 1105, 12, 2075, 8, 251, 45, 1317, 14013, 11, 74, 757, 7639, 11, 59, 131, 5902, 331, 81, 3, 9, 2859, 13, 1046, 3, 5, 983, 3, 6, 167, 750, 4290, 251, 960, 1002, 3, 5430, 1187, 48, 4166, 271, 1499, 3, 390, 3, 6, 79, 33, 4431, 120, 29176, 13, 4945, 28, 19131, 331, 3, 5, 46, 237, 72, 359, 14130, 19, 24, 70, 251, 8258, 33, 251, 3, 17456, 11, 2459, 33, 59, 3255, 3, 99, 7639, 33, 5327, 3, 5, 1587, 48, 1288, 3, 6, 16, 48, 1040, 3, 6, 62, 5530, 8, 408, 13, 3, 9, 358, 3, 6, 718, 2, 3, 6, 84, 6758, 7, 6990, 19131, 4290, 331, 12, 2485, 7639, 3, 5, 48, 19, 10380, 57, 1260, 46, 6565, 1164, 21, 7639, 213, 1105, 54, 2075, 19131, 4290, 251, 2836, 3, 5, 8, 19131, 251, 19, 18279, 300, 8, 9347, 13, 585, 605, 11, 54, 36, 3, 11282, 16, 3, 9, 3, 22927, 194, 3, 5, 12341, 33, 4468, 12, 504, 149, 2, 930, 11, 149, 34, 895, 77, 1427, 7641, 7, 45, 119, 960, 1002, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 3459, 7, 11, 3831, 1139, 3459, 7, 3, 6, 3, 16982, 1139, 3459, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 3501, 1564, 3, 6, 4290, 16961, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 738, 1693, 11, 5538, 53, 3, 6, 5538, 53, 2254, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 3, 6, 11417, 20029, 3, 6, 960, 433, 3, 5, 879, 1353, 758, 3, 6, 408, 3, 6, 5016, 257, 3, 5, 1], "trg": "insight;exploration;multimedia data;interaction environment;research event;event;spatio temporal data", "tokenized_trg": [6574, 32100, 9740, 32100, 19131, 331, 32100, 6565, 1164, 32100, 585, 605, 32100, 605, 32100, 19547, 32, 10301, 8563, 331, 1]}
{"src": "robustness analysis of cognitive information complexity measure using weyuker properties . <sep> cognitive information complexity measure is based on cognitive informatics , which helps in comprehending the software characteristics . for any complexity measure to be robust , weyuker properties must be satisfied to qualify as good and comprehensive one . in this paper , an attempt has also been made to evaluate cognitive information complexity measure in terms of nine weyuker properties , through examples . it has been found that all the nine properties have been satisfied by cognitive information complexity measure and hence establishes cognitive information complexity measure based on information contained in the software as a robust and well structured one . keywords weighted information count , cognitive information complexity unit , cognitive weight , cognitive information complexity measure , basic control structures .", "tokenized_src": [6268, 655, 1693, 13, 12368, 251, 11641, 3613, 338, 62, 63, 1598, 49, 2605, 3, 5, 32100, 12368, 251, 11641, 3613, 19, 3, 390, 30, 12368, 3261, 6049, 7, 3, 6, 84, 1691, 16, 21494, 53, 8, 889, 6803, 3, 5, 21, 136, 11641, 3613, 12, 36, 6268, 3, 6, 62, 63, 1598, 49, 2605, 398, 36, 7035, 12, 9448, 38, 207, 11, 3452, 80, 3, 5, 16, 48, 1040, 3, 6, 46, 3332, 65, 92, 118, 263, 12, 6825, 12368, 251, 11641, 3613, 16, 1353, 13, 4169, 62, 63, 1598, 49, 2605, 3, 6, 190, 4062, 3, 5, 34, 65, 118, 435, 24, 66, 8, 4169, 2605, 43, 118, 7035, 57, 12368, 251, 11641, 3613, 11, 10321, 4797, 15, 7, 12368, 251, 11641, 3613, 3, 390, 30, 251, 6966, 16, 8, 889, 38, 3, 9, 6268, 11, 168, 14039, 80, 3, 5, 12545, 1293, 15, 26, 251, 3476, 3, 6, 12368, 251, 11641, 1745, 3, 6, 12368, 1293, 3, 6, 12368, 251, 11641, 3613, 3, 6, 1857, 610, 5278, 3, 5, 1], "trg": "cognitive information complexity measure;weighted information count;cognitive information complexity unit;cognitive weight;basic control structures", "tokenized_trg": [12368, 251, 11641, 3613, 32100, 1293, 15, 26, 251, 3476, 32100, 12368, 251, 11641, 1745, 32100, 12368, 1293, 32100, 1857, 610, 5278, 1]}
{"src": "a pseudo random coordinated scheduling algorithm for bluetooth scatternets . <sep> the emergence of bluetooth as a default radio interface allows handheld devices to be rapidly interconnected into ad hoc networks . bluetooth allows large numbers of piconets to form a scatternet using designated nodes that participate in multiple piconets . a unit that participates in multiple piconets can serve as a bridge and forwards traffic between neighbouring piconets . since a bluetooth unit can transmit or receive in only one piconet at a time , a bridging unit has to share its time among the different piconets . to schedule communication with bridging nodes one must take into account their availability in the different piconets , which represents a difficult , scatternet wide coordination problem and can be an important performance bottleneck in building scatternets . in this paper we propose the pseudo random coordinated scatternet scheduling ( pcss ) algorithm to perform the scheduling of both intra and inter piconet communication . in this algorithm bluetooth nodes assign meeting points with their peers such that the sequence of meeting points follows a pseudo random process that is different for each pair of nodes . the uniqueness of the pseudo random sequence guarantees that the meeting points with different peers of the node will collide only occasionally . this removes the need for explicit information exchange between peer devices , which is a major advantage of the algorithm . the lack of explicit signaling between bluetooth nodes makes it easy to deploy the pcss algorithm in bluetooth devices , while conformance to the current bluetooth specification is also maintained . to assess the performance of the algorithm we define two reference case schedulers and perform simulations in a number of scenarios where we compare the performance of pcss to the performance of the reference schedulers .", "tokenized_src": [3, 9, 22726, 6504, 21058, 16131, 12628, 21, 31327, 24713, 1582, 7, 3, 5, 32100, 8, 3, 25120, 13, 31327, 38, 3, 9, 4647, 2252, 3459, 1250, 27301, 1904, 12, 36, 7313, 1413, 19386, 139, 3, 9, 26, 3, 24344, 5275, 3, 5, 31327, 1250, 508, 2302, 13, 6686, 782, 17, 7, 12, 607, 3, 9, 24713, 1582, 338, 9943, 150, 1395, 24, 3716, 16, 1317, 6686, 782, 17, 7, 3, 5, 3, 9, 1745, 24, 3716, 7, 16, 1317, 6686, 782, 17, 7, 54, 1716, 38, 3, 9, 4716, 11, 1039, 7, 2117, 344, 14245, 53, 6686, 782, 17, 7, 3, 5, 437, 3, 9, 31327, 1745, 54, 9153, 42, 911, 16, 163, 80, 6686, 782, 17, 44, 3, 9, 97, 3, 6, 3, 9, 3, 2160, 12720, 1745, 65, 12, 698, 165, 97, 859, 8, 315, 6686, 782, 17, 7, 3, 5, 12, 2023, 1901, 28, 3, 2160, 12720, 150, 1395, 80, 398, 240, 139, 905, 70, 5576, 16, 8, 315, 6686, 782, 17, 7, 3, 6, 84, 5475, 3, 9, 1256, 3, 6, 24713, 1582, 1148, 13954, 682, 11, 54, 36, 46, 359, 821, 4782, 14694, 16, 740, 24713, 1582, 7, 3, 5, 16, 48, 1040, 62, 4230, 8, 22726, 6504, 21058, 24713, 1582, 16131, 41, 3, 102, 75, 7, 7, 3, 61, 12628, 12, 1912, 8, 16131, 13, 321, 6344, 11, 1413, 6686, 782, 17, 1901, 3, 5, 16, 48, 12628, 31327, 150, 1395, 12317, 1338, 979, 28, 70, 13359, 224, 24, 8, 5932, 13, 1338, 979, 6963, 3, 9, 22726, 6504, 433, 24, 19, 315, 21, 284, 3116, 13, 150, 1395, 3, 5, 8, 775, 655, 13, 8, 22726, 6504, 5932, 16935, 24, 8, 1338, 979, 28, 315, 13359, 13, 8, 150, 221, 56, 8029, 1599, 163, 10065, 3, 5, 48, 2036, 7, 8, 174, 21, 17623, 251, 2509, 344, 11409, 1904, 3, 6, 84, 19, 3, 9, 779, 2337, 13, 8, 12628, 3, 5, 8, 2136, 13, 17623, 3240, 53, 344, 31327, 150, 1395, 656, 34, 514, 12, 17274, 8, 3, 102, 75, 7, 7, 12628, 16, 31327, 1904, 3, 6, 298, 4535, 663, 12, 8, 750, 31327, 16726, 19, 92, 6997, 3, 5, 12, 6570, 8, 821, 13, 8, 12628, 62, 6634, 192, 2848, 495, 2023, 52, 7, 11, 1912, 11108, 7, 16, 3, 9, 381, 13, 13911, 213, 62, 4048, 8, 821, 13, 3, 102, 75, 7, 7, 12, 8, 821, 13, 8, 2848, 2023, 52, 7, 3, 5, 1], "trg": "scheduling;bluetooth;scatternet;piconets;bridging unit;inter piconet communication;pcss algorithm;checkpoint;total utilization;intensity;network access point;slaves;threshold", "tokenized_trg": [16131, 32100, 31327, 32100, 24713, 1582, 32100, 6686, 782, 17, 7, 32100, 3, 2160, 12720, 1745, 32100, 1413, 6686, 782, 17, 1901, 32100, 3, 102, 75, 7, 7, 12628, 32100, 691, 2700, 32100, 792, 21961, 32100, 13182, 32100, 1229, 592, 500, 32100, 15484, 7, 32100, 12709, 1]}
{"src": "run time dynamic linking for reprogramming wireless sensor networks . <sep> from experience with wireless sensor networks it has become apparent that dynamic reprogramming of the sensor nodes is a useful feature . the resource constraints in terms of energy , memory , and processing power make sensor network reprogramming a challenging task . many different mechanisms for reprogramming sensor nodes have been developed ranging from full image replacement to virtual machines . we have implemented an in situ run time dynamic linker and loader that use the standard elf object file format . we show that run time dynamic linking is an effective method for reprogramming even resource constrained wireless sensor nodes . to evaluate our dynamic linking mechanism we have implemented an application specific virtual machine and a java virtual machine and compare the energy cost of the different linking and execution models . we measure the energy consumption and execution time overhead on real hardware to quantify the energy costs for dynamic linking . our results suggest that while in general the overhead of a virtual machine is high , a combination of native code and virtual machine code provide good energy efficiency . dynamic run time linking can be used to update the native code , even in heterogeneous networks . categories and subject descriptors c . <digit> . <digit> computer communication networks distributed systems network operating systems general terms design , experimentation , measurement , performance", "tokenized_src": [661, 97, 4896, 17988, 21, 3, 60, 7050, 53, 5419, 7824, 5275, 3, 5, 32100, 45, 351, 28, 5419, 7824, 5275, 34, 65, 582, 10320, 24, 4896, 3, 60, 7050, 53, 13, 8, 7824, 150, 1395, 19, 3, 9, 1934, 1451, 3, 5, 8, 3487, 17765, 16, 1353, 13, 827, 3, 6, 2594, 3, 6, 11, 3026, 579, 143, 7824, 1229, 3, 60, 7050, 53, 3, 9, 4421, 2491, 3, 5, 186, 315, 12009, 21, 3, 60, 7050, 53, 7824, 150, 1395, 43, 118, 1597, 3, 6836, 45, 423, 1023, 3709, 12, 4291, 4096, 3, 5, 62, 43, 6960, 46, 16, 12958, 661, 97, 4896, 1309, 49, 11, 4002, 49, 24, 169, 8, 1068, 3, 10386, 3735, 1042, 1910, 3, 5, 62, 504, 24, 661, 97, 4896, 17988, 19, 46, 1231, 1573, 21, 3, 60, 7050, 53, 237, 3487, 975, 22418, 5419, 7824, 150, 1395, 3, 5, 12, 6825, 69, 4896, 17988, 8557, 62, 43, 6960, 46, 917, 806, 4291, 1437, 11, 3, 9, 3, 27578, 4291, 1437, 11, 4048, 8, 827, 583, 13, 8, 315, 17988, 11, 9328, 2250, 3, 5, 62, 3613, 8, 827, 5962, 11, 9328, 97, 15998, 30, 490, 4214, 12, 30389, 8, 827, 1358, 21, 4896, 17988, 3, 5, 69, 772, 3130, 24, 298, 16, 879, 8, 15998, 13, 3, 9, 4291, 1437, 19, 306, 3, 6, 3, 9, 2711, 13, 4262, 1081, 11, 4291, 1437, 1081, 370, 207, 827, 3949, 3, 5, 4896, 661, 97, 17988, 54, 36, 261, 12, 2270, 8, 4262, 1081, 3, 6, 237, 16, 26481, 729, 15, 1162, 5275, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 1218, 1901, 5275, 8308, 1002, 1229, 2699, 1002, 879, 1353, 408, 3, 6, 5016, 257, 3, 6, 9753, 3, 6, 821, 1], "trg": "dynamic linking;wireless sensor networks;virtual machines;operating systems;embedded systems", "tokenized_trg": [4896, 17988, 32100, 5419, 7824, 5275, 32100, 4291, 4096, 32100, 2699, 1002, 32100, 13612, 1002, 1]}
{"src": "s 2db a novel simulation based debugger for sensor network applications . <sep> sensor network computing can be characterized as resource contrained distributed computing using unreliable , low bandwidth communication . this combination of characteristics poses significant software development and maintenance challenges . effective and efficient debugging tools for sensor network are thus critical . existent development tools , such as tossim , emstar , <unk> and avrora , provide useful debugging support , but not with the fidelity , scale and functionality that we believe are sufficient to meet the needs of the next generation of applications . in this paper , we propose a debugger , called s <digit> db , based on a distributed full system sensor network simulator with high fidelity and scalable performance , <unk> . by exploiting the potential of <unk> as a scalable full system simulator , s <digit> db extends conventional debugging methods by adding novel device level , program source level , group level , and network level debugging abstractions . the performance evaluation shows that all these debugging features introduce overhead that is generally less than <digit> % into the simulator and thus making s <digit> db an efficient and effective debugging tool for sensor networks . categories and subject descriptors d . <digit> . <digit> s oftware e n gi n <unk> n g te st i ng a nd d e <unk> ng i . <digit> simu lation and modeling general terms experimentation , performance", "tokenized_src": [3, 7, 204, 26, 115, 3, 9, 3714, 11108, 3, 390, 20, 3007, 6938, 21, 7824, 1229, 1564, 3, 5, 32100, 7824, 1229, 10937, 54, 36, 3, 16730, 38, 3487, 3622, 10761, 8308, 10937, 338, 73, 60, 8860, 3, 6, 731, 19703, 1901, 3, 5, 48, 2711, 13, 6803, 15968, 1516, 889, 606, 11, 2453, 2428, 3, 5, 1231, 11, 2918, 20, 14588, 3896, 1339, 21, 7824, 1229, 33, 2932, 2404, 3, 5, 3, 13957, 606, 1339, 3, 6, 224, 38, 12, 7, 7, 603, 3, 6, 3, 15, 51, 3624, 3, 6, 2, 11, 3, 9, 208, 22215, 3, 6, 370, 1934, 20, 14588, 3896, 380, 3, 6, 68, 59, 28, 8, 3, 31374, 3, 6, 2643, 11, 6730, 24, 62, 857, 33, 6684, 12, 942, 8, 523, 13, 8, 416, 3381, 13, 1564, 3, 5, 16, 48, 1040, 3, 6, 62, 4230, 3, 9, 20, 3007, 6938, 3, 6, 718, 3, 7, 32101, 3, 26, 115, 3, 6, 3, 390, 30, 3, 9, 8308, 423, 358, 7824, 1229, 26927, 28, 306, 3, 31374, 11, 3, 24079, 821, 3, 6, 2, 3, 5, 57, 9248, 53, 8, 1055, 13, 2, 38, 3, 9, 3, 24079, 423, 358, 26927, 3, 6, 3, 7, 32101, 3, 26, 115, 4285, 7, 7450, 20, 14588, 3896, 2254, 57, 2651, 3714, 1407, 593, 3, 6, 478, 1391, 593, 3, 6, 563, 593, 3, 6, 11, 1229, 593, 20, 14588, 3896, 28708, 7, 3, 5, 8, 821, 5002, 1267, 24, 66, 175, 20, 14588, 3896, 753, 4277, 15998, 24, 19, 2389, 705, 145, 32101, 3, 1454, 139, 8, 26927, 11, 2932, 492, 3, 7, 32101, 3, 26, 115, 46, 2918, 11, 1231, 20, 14588, 3896, 1464, 21, 7824, 5275, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 3, 7, 13, 17, 3404, 3, 15, 3, 29, 3, 122, 23, 3, 29, 2, 3, 29, 3, 122, 3, 17, 15, 3, 7, 17, 3, 23, 3, 1725, 3, 9, 3, 727, 3, 26, 3, 15, 2, 3, 1725, 3, 23, 3, 5, 32101, 108, 51, 76, 3, 6105, 11, 15309, 879, 1353, 5016, 257, 3, 6, 821, 1], "trg": "simulation;sensor network;debugging", "tokenized_trg": [11108, 32100, 7824, 1229, 32100, 20, 14588, 3896, 1]}
{"src": "scalable data aggregation for dynamic events in sensor networks . <sep> computing and maintaining network structures for efficient data aggregation incurs high overhead for dynamic events where the set of nodes sensing an event changes with time . moreover , structured approaches are sensitive to the waiting time which is used by nodes to wait for packets from their children before forwarding the packet to the sink . although structure less approaches can address these issues , the performance does not scale well with the network size . we propose a semi structured approach that uses a structure less technique locally followed by dynamic forwarding on an implicitly constructed packet forwarding structure to support network scalability . the structure , tod , is composed of multiple shortest path trees . after performing local aggregation , nodes dynamically decide the forwarding tree based on the location of the sources . the key principle behind tod is that adjacent nodes in a graph will have low stretch in one of these trees in tod , thus resulting in early aggregation of packets . based on simulations on a <digit> nodes network and real experiments on a <digit> nodes mica2 based network , we conclude that efficient aggregation in large scale networks can be achieved by our semi structured approach . categories and subject descriptors c . <digit> . <digit> computer communication networks network architecture and design wireless communication general terms design , performance", "tokenized_src": [3, 24079, 331, 3, 31761, 23, 106, 21, 4896, 984, 16, 7824, 5275, 3, 5, 32100, 10937, 11, 6011, 1229, 5278, 21, 2918, 331, 3, 31761, 23, 106, 18663, 7, 306, 15998, 21, 4896, 984, 213, 8, 356, 13, 150, 1395, 3952, 53, 46, 605, 1112, 28, 97, 3, 5, 72, 1890, 3, 6, 14039, 6315, 33, 6280, 12, 8, 2794, 97, 84, 19, 261, 57, 150, 1395, 12, 1749, 21, 13531, 7, 45, 70, 502, 274, 1039, 53, 8, 13531, 12, 8, 5067, 3, 5, 2199, 1809, 705, 6315, 54, 1115, 175, 807, 3, 6, 8, 821, 405, 59, 2643, 168, 28, 8, 1229, 812, 3, 5, 62, 4230, 3, 9, 4772, 14039, 1295, 24, 2284, 3, 9, 1809, 705, 3317, 8428, 2348, 57, 4896, 1039, 53, 30, 46, 21773, 120, 8520, 13531, 1039, 53, 1809, 12, 380, 1229, 3, 7, 1489, 2020, 3, 5, 8, 1809, 3, 6, 12, 26, 3, 6, 19, 10431, 13, 1317, 3, 31115, 2071, 3124, 3, 5, 227, 5505, 415, 3, 31761, 23, 106, 3, 6, 150, 1395, 4896, 1427, 2204, 8, 1039, 53, 2195, 3, 390, 30, 8, 1128, 13, 8, 2836, 3, 5, 8, 843, 8454, 1187, 12, 26, 19, 24, 12487, 150, 1395, 16, 3, 9, 8373, 56, 43, 731, 6606, 16, 80, 13, 175, 3124, 16, 12, 26, 3, 6, 2932, 3, 5490, 16, 778, 3, 31761, 23, 106, 13, 13531, 7, 3, 5, 3, 390, 30, 11108, 7, 30, 3, 9, 32101, 150, 1395, 1229, 11, 490, 12341, 30, 3, 9, 32101, 150, 1395, 18196, 357, 3, 390, 1229, 3, 6, 62, 12692, 24, 2918, 3, 31761, 23, 106, 16, 508, 2643, 5275, 54, 36, 5153, 57, 69, 4772, 14039, 1295, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 1218, 1901, 5275, 1229, 4648, 11, 408, 5419, 1901, 879, 1353, 408, 3, 6, 821, 1], "trg": "data aggregation;tod;structure free;anycasting", "tokenized_trg": [331, 3, 31761, 23, 106, 32100, 12, 26, 32100, 1809, 339, 32100, 136, 5254, 53, 1]}
{"src": "scalable mining of large disk based graph databases . <sep> mining frequent structural patterns from graph databases is an interesting problem with broad applications . most of the previous studies focus on pruning unfruitful search subspaces effectively , but few of them address the mining on large , disk based databases . as many graph databases in applications can not be held into main memory , scalable mining of large , disk based graph databases remains a challenging problem . in this paper , we develop an effective index structure , adi ( for adjacency index ) , to support mining various graph patterns over large databases that can not be held into main memory . the index is simple and efficient to build . moreover , the new index structure can be easily adopted in various existing graph pattern mining algorithms . as an example , we adapt the well known gspan algorithm by using the adi structure . the experimental results show that the new index structure enables the scalable graph pattern mining over large databases . in one set of the experiments , the new disk based method can mine graph databases with one million graphs , while the original gspan algorithm can only handle databases of up to <digit> thousand graphs . moreover , our new method is faster than gspan when both can run in main memory . categories and subject descriptors h . <digit> . <digit> database applications data mining general terms algorithms , performances .", "tokenized_src": [3, 24079, 5558, 13, 508, 8987, 3, 390, 8373, 16961, 3, 5, 32100, 5558, 8325, 8649, 4264, 45, 8373, 16961, 19, 46, 1477, 682, 28, 4358, 1564, 3, 5, 167, 13, 8, 1767, 2116, 992, 30, 31858, 73, 20243, 1329, 960, 769, 6633, 7, 3762, 3, 6, 68, 360, 13, 135, 1115, 8, 5558, 30, 508, 3, 6, 8987, 3, 390, 16961, 3, 5, 38, 186, 8373, 16961, 16, 1564, 54, 59, 36, 1213, 139, 711, 2594, 3, 6, 3, 24079, 5558, 13, 508, 3, 6, 8987, 3, 390, 8373, 16961, 3048, 3, 9, 4421, 682, 3, 5, 16, 48, 1040, 3, 6, 62, 1344, 46, 1231, 5538, 1809, 3, 6, 3, 9, 26, 23, 41, 21, 19181, 9, 75, 4392, 5538, 3, 61, 3, 6, 12, 380, 5558, 796, 8373, 4264, 147, 508, 16961, 24, 54, 59, 36, 1213, 139, 711, 2594, 3, 5, 8, 5538, 19, 650, 11, 2918, 12, 918, 3, 5, 72, 1890, 3, 6, 8, 126, 5538, 1809, 54, 36, 1153, 7546, 16, 796, 1895, 8373, 3275, 5558, 16783, 3, 5, 38, 46, 677, 3, 6, 62, 3374, 8, 168, 801, 3, 122, 7, 2837, 12628, 57, 338, 8, 3, 9, 26, 23, 1809, 3, 5, 8, 11082, 772, 504, 24, 8, 126, 5538, 1809, 3, 7161, 8, 3, 24079, 8373, 3275, 5558, 147, 508, 16961, 3, 5, 16, 80, 356, 13, 8, 12341, 3, 6, 8, 126, 8987, 3, 390, 1573, 54, 2000, 8373, 16961, 28, 80, 770, 8373, 7, 3, 6, 298, 8, 926, 3, 122, 7, 2837, 12628, 54, 163, 2174, 16961, 13, 95, 12, 32101, 7863, 8373, 7, 3, 5, 72, 1890, 3, 6, 69, 126, 1573, 19, 3627, 145, 3, 122, 7, 2837, 116, 321, 54, 661, 16, 711, 2594, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 1564, 331, 5558, 879, 1353, 16783, 3, 6, 7357, 3, 5, 1], "trg": "graph database;graph databases;disk bases databases;index;gspan algorithm;edge table;graph mining;memory based databases;subgraph mine;frequent graph pattern;adjacency list representation;frequent graph pattern mining;dfs code;adi index structure", "tokenized_trg": [8373, 3501, 32100, 8373, 16961, 32100, 8987, 14701, 16961, 32100, 5538, 32100, 3, 122, 7, 2837, 12628, 32100, 3023, 953, 32100, 8373, 5558, 32100, 2594, 3, 390, 16961, 32100, 769, 9413, 2000, 32100, 8325, 8373, 3275, 32100, 19181, 9, 75, 4392, 570, 6497, 32100, 8325, 8373, 3275, 5558, 32100, 3, 26, 89, 7, 1081, 32100, 3, 9, 26, 23, 5538, 1809, 1]}
{"src": "secure access to ip multimedia services using generic bootstrapping architecture ( gba ) for 3g beyond mobile networks . <sep> the ip multimedia subsystem ( ims ) defined by third generation partnership projects ( 3gpp and 3gpp2 ) is a technology designed to provide robust multimedia services across roaming boundaries and over diverse access technologies with promising features like quality of service ( qos ) , reliability and security . the ims defines an overlay service architecture that merges the paradigms and technologies of the internet with the cellular and fixed telecommunication worlds . its architecture enables the efficient provision of an open set of potentially highly integrated multimedia services , combining web browsing , email , instant messaging , presence , voip , video conferencing , application sharing , telephony , unified messaging , multimedia content delivery , etc . on top of possibly different network technologies . as such ims enables various business models for providing seamless business and consumer multimedia applications . in this communication converged world , the challenging issues are security , quality of service ( qos ) and management administration . in this paper our focus is to manage secure access to multimedia services and applications based on sip and http on top of ip multimedia subsystem ( ims ) . these services include presence , video conferencing , messaging , video broadcasting , and push to talk etc . we will utilize generic bootstrapping architecture ( gba ) model to authenticate multimedia applications before accessing these multimedia services offered by ims operators . we will make enhancement in gba model to access these services securely by introducing authentication proxy ( ap ) which is responsible to implement transport layer security ( tls ) for http and sip communication . this research work is part of secure service provisioning ( ssp ) framework for ip multimedia system at fokus fraunhofer ims 3gb testbed . categories and subject descriptors c . <digit> computer communication networks c . <digit> . <digit> general security and protection c . <digit> . <digit> network architecture and design c . <digit> . <digit> network operation . general terms algorithms , management , design , reliability , experimentation , security , standardization , verification .", "tokenized_src": [2451, 592, 12, 3, 23, 102, 19131, 364, 338, 8165, 10427, 1313, 5341, 4648, 41, 3, 122, 115, 9, 3, 61, 21, 220, 122, 1909, 1156, 5275, 3, 5, 32100, 8, 3, 23, 102, 19131, 769, 3734, 41, 256, 7, 3, 61, 4802, 57, 1025, 3381, 4696, 1195, 41, 220, 122, 1572, 11, 220, 122, 1572, 357, 3, 61, 19, 3, 9, 748, 876, 12, 370, 6268, 19131, 364, 640, 22327, 53, 11814, 11, 147, 2399, 592, 2896, 28, 12894, 753, 114, 463, 13, 313, 41, 3, 1824, 32, 7, 3, 61, 3, 6, 10581, 11, 1034, 3, 5, 8, 256, 7, 17692, 46, 25980, 313, 4648, 24, 7986, 7, 8, 20491, 7, 11, 2896, 13, 8, 1396, 28, 8, 3, 10791, 11, 3599, 3, 17, 18329, 296, 7, 3, 5, 165, 4648, 3, 7161, 8, 2918, 6537, 13, 46, 539, 356, 13, 6149, 1385, 4580, 19131, 364, 3, 6, 3, 13275, 765, 14139, 3, 6, 791, 3, 6, 5087, 16324, 3, 6, 3053, 3, 6, 3336, 102, 3, 6, 671, 3, 31883, 3, 6, 917, 2178, 3, 6, 3, 1931, 9621, 63, 3, 6, 3, 22927, 16324, 3, 6, 19131, 738, 1929, 3, 6, 672, 3, 5, 30, 420, 13, 3673, 315, 1229, 2896, 3, 5, 38, 224, 256, 7, 3, 7161, 796, 268, 2250, 21, 1260, 15870, 268, 11, 3733, 19131, 1564, 3, 5, 16, 48, 1901, 3, 28209, 26, 296, 3, 6, 8, 4421, 807, 33, 1034, 3, 6, 463, 13, 313, 41, 3, 1824, 32, 7, 3, 61, 11, 758, 3602, 3, 5, 16, 48, 1040, 69, 992, 19, 12, 1865, 2451, 592, 12, 19131, 364, 11, 1564, 3, 390, 30, 108, 102, 11, 2649, 30, 420, 13, 3, 23, 102, 19131, 769, 3734, 41, 256, 7, 3, 61, 3, 5, 175, 364, 560, 3053, 3, 6, 671, 3, 31883, 3, 6, 16324, 3, 6, 671, 6878, 53, 3, 6, 11, 3292, 12, 1350, 672, 3, 5, 62, 56, 5849, 8165, 10427, 1313, 5341, 4648, 41, 3, 122, 115, 9, 3, 61, 825, 12, 6876, 342, 19131, 1564, 274, 592, 53, 175, 19131, 364, 1860, 57, 256, 7, 9490, 3, 5, 62, 56, 143, 15220, 16, 3, 122, 115, 9, 825, 12, 592, 175, 364, 18518, 57, 3, 13505, 20188, 19784, 41, 3, 9, 102, 3, 61, 84, 19, 1966, 12, 4028, 1855, 3760, 1034, 41, 3, 17, 40, 7, 3, 61, 21, 2649, 11, 108, 102, 1901, 3, 5, 48, 585, 161, 19, 294, 13, 2451, 313, 6537, 53, 41, 3, 7, 7, 102, 3, 61, 4732, 21, 3, 23, 102, 19131, 358, 44, 5575, 2729, 7, 3, 17931, 19216, 49, 256, 7, 220, 122, 115, 794, 4143, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 1218, 1901, 5275, 3, 75, 3, 5, 32101, 3, 5, 32101, 879, 1034, 11, 1711, 3, 75, 3, 5, 32101, 3, 5, 32101, 1229, 4648, 11, 408, 3, 75, 3, 5, 32101, 3, 5, 32101, 1229, 2986, 3, 5, 879, 1353, 16783, 3, 6, 758, 3, 6, 408, 3, 6, 10581, 3, 6, 5016, 257, 3, 6, 1034, 3, 6, 1068, 1707, 3, 6, 17549, 3, 5, 1], "trg": "general bootstrapping architecture;generic bootstrapping architecture;gba;ip multimedia subsystem;authentication proxy;authentication proxy;ap;transport layer security;transport layer security;tls;ip multimedia system;glms xdms;security and privacy;naf;fokus ims testbed;signalling protocols;tls tunnel end points;ims platform;diameter proxy;generic authentication architecture;network authentication function", "tokenized_trg": [879, 10427, 1313, 5341, 4648, 32100, 8165, 10427, 1313, 5341, 4648, 32100, 3, 122, 115, 9, 32100, 3, 23, 102, 19131, 769, 3734, 32100, 20188, 19784, 32100, 20188, 19784, 32100, 3, 9, 102, 32100, 1855, 3760, 1034, 32100, 1855, 3760, 1034, 32100, 3, 17, 40, 7, 32100, 3, 23, 102, 19131, 358, 32100, 3, 122, 40, 51, 7, 3, 226, 26, 51, 7, 32100, 1034, 11, 4570, 32100, 3, 29, 9, 89, 32100, 5575, 2729, 7, 256, 7, 794, 4143, 32100, 3240, 697, 18870, 32100, 3, 17, 40, 7, 11916, 414, 979, 32100, 256, 7, 1585, 32100, 9260, 19784, 32100, 8165, 20188, 4648, 32100, 1229, 20188, 1681, 1]}
{"src": "secure hierarchical in network aggregation in sensor networks . <sep> in network aggregation is an essential primitive for performing queries on sensor network data . however , most aggregation algorithms assume that all intermediate nodes are trusted . in contrast , the standard threat model in sensor network security assumes that an attacker may control a fraction of the nodes , which may misbehave in an arbitrary ( byzantine ) manner . we present the first algorithm for provably secure hierarchical in network data aggregation . our algorithm is guaranteed to detect any manipulation of the aggregate by the adversary beyond what is achievable through direct injection of data values at compromised nodes . in other words , the adversary can never gain any advantage from misrepresenting intermediate aggregation computations . our algorithm incurs only o ( log <digit> n ) node congestion , supports arbitrary tree based aggregator topologies and retains its resistance against aggregation manipulation in the presence of arbitrary numbers of malicious nodes . the main algorithm is based on performing the sum aggregation securely by first forcing the adversary to commit to its choice of intermediate aggregation results , and then having the sensor nodes independently verify that their contributions to the aggregate are correctly incorporated . we show how to reduce secure median , count , and average to this primitive . categories and subject descriptors c . <digit> . <digit> computer communication networks general security and protection general terms security , algorithms", "tokenized_src": [2451, 1382, 7064, 1950, 16, 1229, 3, 31761, 23, 106, 16, 7824, 5275, 3, 5, 32100, 16, 1229, 3, 31761, 23, 106, 19, 46, 1832, 26322, 21, 5505, 13154, 30, 7824, 1229, 331, 3, 5, 983, 3, 6, 167, 3, 31761, 23, 106, 16783, 5344, 24, 66, 18957, 150, 1395, 33, 7731, 3, 5, 16, 4656, 3, 6, 8, 1068, 5888, 825, 16, 7824, 1229, 1034, 5344, 7, 24, 46, 22600, 164, 610, 3, 9, 12211, 13, 8, 150, 1395, 3, 6, 84, 164, 1817, 346, 7965, 16, 46, 3, 26968, 41, 57, 10241, 4070, 3, 61, 3107, 3, 5, 62, 915, 8, 166, 12628, 21, 813, 208, 3834, 2451, 1382, 7064, 1950, 16, 1229, 331, 3, 31761, 23, 106, 3, 5, 69, 12628, 19, 7206, 12, 8432, 136, 18175, 13, 8, 12955, 57, 8, 23210, 63, 1909, 125, 19, 30238, 190, 1223, 10672, 13, 331, 2620, 44, 22001, 150, 1395, 3, 5, 16, 119, 1234, 3, 6, 8, 23210, 63, 54, 470, 2485, 136, 2337, 45, 1817, 60, 12072, 18957, 3, 31761, 23, 106, 29761, 7, 3, 5, 69, 12628, 18663, 7, 163, 3, 32, 41, 4303, 32101, 3, 29, 3, 61, 150, 221, 26294, 3, 6, 4951, 3, 26968, 2195, 3, 390, 3, 31761, 127, 420, 4137, 7, 11, 7365, 7, 165, 5673, 581, 3, 31761, 23, 106, 18175, 16, 8, 3053, 13, 3, 26968, 2302, 13, 22326, 150, 1395, 3, 5, 8, 711, 12628, 19, 3, 390, 30, 5505, 8, 4505, 3, 31761, 23, 106, 18518, 57, 166, 19060, 8, 23210, 63, 12, 10042, 12, 165, 1160, 13, 18957, 3, 31761, 23, 106, 772, 3, 6, 11, 258, 578, 8, 7824, 150, 1395, 13971, 10446, 24, 70, 7548, 12, 8, 12955, 33, 6549, 3, 10975, 3, 5, 62, 504, 149, 12, 1428, 2451, 15572, 3, 6, 3476, 3, 6, 11, 1348, 12, 48, 26322, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 1218, 1901, 5275, 879, 1034, 11, 1711, 879, 1353, 1034, 3, 6, 16783, 1], "trg": "sensor networks;sensor network;algorithm;in network data aggregation;data aggregation;congestion complexity;secure hierarchical data aggregation protocol;secure aggregation;aggregation commit;result checking;query dissemination;commitment forest;commitment tree", "tokenized_trg": [7824, 5275, 32100, 7824, 1229, 32100, 12628, 32100, 16, 1229, 331, 3, 31761, 23, 106, 32100, 331, 3, 31761, 23, 106, 32100, 26294, 11641, 32100, 2451, 1382, 7064, 1950, 331, 3, 31761, 23, 106, 10015, 32100, 2451, 3, 31761, 23, 106, 32100, 3, 31761, 23, 106, 10042, 32100, 741, 6450, 32100, 11417, 31363, 32100, 3148, 5827, 32100, 3148, 2195, 1]}
{"src": "<unk> a middleware model for wireless sensor networks . <sep> the use of middleware eases the development of distributed applications by abstracting the intricacies ( communication and coordination among software components ) of the distributed network environment . in wireless sensor networks , this is even trickier because of their specific issues such as addressing , mobility , number of sensors and energy limited nodes . this paper describes <unk> , a message oriented middleware ( mom ) model for wireless sensor networks based on the publish subscribe paradigm and that allows the free exchange of the communication mechanism among sensor nodes allowing as result the capability of using more than one communication mechanism to address the requirements of larger number of applications . we intend to provide a platform which addresses the main characteristics of wireless sensor networks and also allows the development of energy efficient applications . <unk> incorporates constraint and query languages which will aid the development of interactive applications . it intends with the utilization of filters reduces data movement minimizing the energy consumption of nodes .", "tokenized_src": [2, 3, 9, 2214, 3404, 825, 21, 5419, 7824, 5275, 3, 5, 32100, 8, 169, 13, 2214, 3404, 4226, 7, 8, 606, 13, 8308, 1564, 57, 9838, 53, 8, 16, 3929, 9, 6267, 7, 41, 1901, 11, 13954, 859, 889, 3379, 3, 61, 13, 8, 8308, 1229, 1164, 3, 5, 16, 5419, 7824, 5275, 3, 6, 48, 19, 237, 7873, 972, 250, 13, 70, 806, 807, 224, 38, 3, 14198, 3, 6, 12337, 3, 6, 381, 13, 12237, 11, 827, 1643, 150, 1395, 3, 5, 48, 1040, 8788, 2, 3, 6, 3, 9, 1569, 3, 9442, 2214, 3404, 41, 3912, 3, 61, 825, 21, 5419, 7824, 5275, 3, 390, 30, 8, 8099, 10006, 20491, 11, 24, 1250, 8, 339, 2509, 13, 8, 1901, 8557, 859, 7824, 150, 1395, 3, 3232, 38, 741, 8, 9004, 13, 338, 72, 145, 80, 1901, 8557, 12, 1115, 8, 1502, 13, 2186, 381, 13, 1564, 3, 5, 62, 8286, 12, 370, 3, 9, 1585, 84, 7181, 8, 711, 6803, 13, 5419, 7824, 5275, 11, 92, 1250, 8, 606, 13, 827, 2918, 1564, 3, 5, 2, 6300, 7, 27354, 17, 11, 11417, 8024, 84, 56, 3052, 8, 606, 13, 6076, 1564, 3, 5, 34, 8286, 7, 28, 8, 21961, 13, 10607, 1428, 7, 331, 2426, 3, 28807, 8, 827, 5962, 13, 150, 1395, 3, 5, 1], "trg": "middleware;wireless sensor network;wireless sensor networks;publish subscribe paradigm;constraint and query languages;message service;message oriented middleware model;design pattern;application filters;context service;application service;environmental monitoring applications", "tokenized_trg": [2214, 3404, 32100, 5419, 7824, 1229, 32100, 5419, 7824, 5275, 32100, 8099, 10006, 20491, 32100, 27354, 17, 11, 11417, 8024, 32100, 1569, 313, 32100, 1569, 3, 9442, 2214, 3404, 825, 32100, 408, 3275, 32100, 917, 10607, 32100, 2625, 313, 32100, 917, 313, 32100, 3262, 4891, 1564, 1]}
{"src": "seven cardinal properties of sensor network broadcast authentication . <sep> we investigate the design space of sensor network broadcast authentication . we show that prior approaches can be organized based on a taxonomy of seven fundamental proprieties , such that each approach can satisfy at most six of the seven proprieties . an empirical study of the design space reveals possibilities of new approaches , which we present in the following two new authentication protocols rpt and lea . based on this taxonomy , we offer guidance in selecting the most appropriate protocol based on an application ' s desired proprieties . finally , we pose the open challenge for the research community to devise a protocol simultaneously providing all seven properties . categories and subject descriptors c . <digit> . <digit> computer communication networks general , security and protection k . <digit> . <digit> security and protection security and protection , authentication general terms security , design", "tokenized_src": [2391, 895, 10270, 2605, 13, 7824, 1229, 6878, 20188, 3, 5, 32100, 62, 9127, 8, 408, 628, 13, 7824, 1229, 6878, 20188, 3, 5, 62, 504, 24, 1884, 6315, 54, 36, 4997, 3, 390, 30, 3, 9, 1104, 32, 3114, 63, 13, 2391, 4431, 18282, 3010, 3, 6, 224, 24, 284, 1295, 54, 11132, 44, 167, 1296, 13, 8, 2391, 18282, 3010, 3, 5, 46, 23941, 810, 13, 8, 408, 628, 3, 15503, 7839, 13, 126, 6315, 3, 6, 84, 62, 915, 16, 8, 826, 192, 126, 20188, 18870, 3, 52, 102, 17, 11, 90, 9, 3, 5, 3, 390, 30, 48, 1104, 32, 3114, 63, 3, 6, 62, 462, 4864, 16, 9581, 8, 167, 2016, 10015, 3, 390, 30, 46, 917, 3, 31, 3, 7, 5327, 18282, 3010, 3, 5, 2031, 3, 6, 62, 7663, 8, 539, 1921, 21, 8, 585, 573, 12, 13282, 15, 3, 9, 10015, 11609, 1260, 66, 2391, 2605, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 1218, 1901, 5275, 879, 3, 6, 1034, 11, 1711, 3, 157, 3, 5, 32101, 3, 5, 32101, 1034, 11, 1711, 1034, 11, 1711, 3, 6, 20188, 879, 1353, 1034, 3, 6, 408, 1], "trg": "sensor network;broadcast authentication;taxonomy", "tokenized_trg": [7824, 1229, 32100, 6878, 20188, 32100, 1104, 32, 3114, 63, 1]}
{"src": "significance of gene ranking for classification of microarray samples . <sep> many methods for classification and gene selection with microarray data have been developed . these methods usually give a ranking of genes . evaluating the statistical significance of the gene ranking is important for understanding the results and for further biological investigations , but this question has not been well addressed for machine learning methods in existing works . here , we address this problem by formulating it in the framework of hypothesis testing and propose a solution based on resampling . the proposed r test methods convert gene ranking results into position p values to evaluate the significance of genes . the methods are tested on three real microarray data sets and three simulation data sets with support vector machines as the method of classification and gene selection . the obtained position p values help to determine the number of genes to be selected and enable scientists to analyze selection results by sophisticated multivariate methods under the same statistical inference paradigm as for simple hypothesis testing methods .", "tokenized_src": [11978, 13, 6510, 11592, 21, 13774, 13, 2179, 10116, 63, 5977, 3, 5, 32100, 186, 2254, 21, 13774, 11, 6510, 1801, 28, 2179, 10116, 63, 331, 43, 118, 1597, 3, 5, 175, 2254, 1086, 428, 3, 9, 11592, 13, 13485, 3, 5, 3, 17768, 8, 11775, 11978, 13, 8, 6510, 11592, 19, 359, 21, 1705, 8, 772, 11, 21, 856, 11432, 17032, 3, 6, 68, 48, 822, 65, 59, 118, 168, 8705, 21, 1437, 1036, 2254, 16, 1895, 930, 3, 5, 270, 3, 6, 62, 1115, 48, 682, 57, 5403, 1222, 34, 16, 8, 4732, 13, 22455, 2505, 11, 4230, 3, 9, 1127, 3, 390, 30, 3, 60, 7, 4624, 697, 3, 5, 8, 4382, 3, 52, 794, 2254, 5755, 6510, 11592, 772, 139, 1102, 3, 102, 2620, 12, 6825, 8, 11978, 13, 13485, 3, 5, 8, 2254, 33, 5285, 30, 386, 490, 2179, 10116, 63, 331, 3369, 11, 386, 11108, 331, 3369, 28, 380, 12938, 4096, 38, 8, 1573, 13, 13774, 11, 6510, 1801, 3, 5, 8, 5105, 1102, 3, 102, 2620, 199, 12, 2082, 8, 381, 13, 13485, 12, 36, 2639, 11, 2956, 7004, 12, 8341, 1801, 772, 57, 8732, 1249, 9504, 342, 2254, 365, 8, 337, 11775, 16, 11788, 20491, 38, 21, 650, 22455, 2505, 2254, 3, 5, 1], "trg": "significance of gene ranking;classification;gene selection;microarray data analysis", "tokenized_trg": [11978, 13, 6510, 11592, 32100, 13774, 32100, 6510, 1801, 32100, 2179, 10116, 63, 331, 1693, 1]}
{"src": "simplifying flexible isosurfaces using local geometric measures . <sep> the contour tree , an abstraction of a scalar field that encodes the nesting relationships of isosurfaces , can be used to accelerate isosurface extraction , to identify important isovalues for volume rendering transfer functions , and to guide exploratory visualization through a flexible isosurface interface . many real world data sets produce unmanageably large contour trees which require meaningful simplification . we define local geometric measures for individual contours , such as surface area and contained volume , and provide an algorithm to compute these measures in a contour tree . we then use these geometric measures to simplify the contour trees , suppressing minor topological features of the data . we combine this with a flexible isosurface interface to allow users to explore individual contours of a dataset interactively .", "tokenized_src": [18356, 53, 4136, 19, 32, 26899, 7, 338, 415, 21910, 3629, 3, 5, 32100, 8, 17643, 2195, 3, 6, 46, 28708, 13, 3, 9, 3, 7, 1489, 291, 1057, 24, 23734, 7, 8, 9190, 53, 3079, 13, 19, 32, 26899, 7, 3, 6, 54, 36, 261, 12, 16845, 19, 32, 26899, 16629, 3, 6, 12, 2862, 359, 19, 32, 12097, 7, 21, 2908, 18968, 2025, 3621, 3, 6, 11, 12, 1539, 26903, 6546, 21744, 190, 3, 9, 4136, 19, 32, 26899, 3459, 3, 5, 186, 490, 296, 331, 3369, 1759, 73, 348, 545, 3834, 508, 17643, 3124, 84, 1457, 7892, 108, 27717, 3, 5, 62, 6634, 415, 21910, 3629, 21, 928, 17643, 7, 3, 6, 224, 38, 1774, 616, 11, 6966, 2908, 3, 6, 11, 370, 46, 12628, 12, 29216, 175, 3629, 16, 3, 9, 17643, 2195, 3, 5, 62, 258, 169, 175, 21910, 3629, 12, 18356, 8, 17643, 3124, 3, 6, 18513, 53, 4012, 420, 4478, 753, 13, 8, 331, 3, 5, 62, 5148, 48, 28, 3, 9, 4136, 19, 32, 26899, 3459, 12, 995, 1105, 12, 2075, 928, 17643, 7, 13, 3, 9, 17953, 6076, 120, 3, 5, 1], "trg": "isosurfaces;contour trees;topological simplification", "tokenized_trg": [19, 32, 26899, 7, 32100, 17643, 3124, 32100, 420, 4478, 108, 27717, 1]}
{"src": "a resilient packet forwarding scheme against maliciously packet dropping nodes in sensor networks . <sep> this paper focuses on defending against compromised nodes ' dropping of legitimate reports and investigates the misbehavior of a maliciously packet dropping node in sensor networks . we present a resilient packet forwarding scheme using neighbor watch system ( nws ) , specifically designed for hop by hop reliable delivery in face of malicious nodes that drop relaying packets , as well as faulty nodes that fail to relay packets . unlike previous work with multipath data forwarding , our scheme basically employs single path data forwarding , which consumes less power than multipath schemes . as the packet is forwarded along the single path toward the base station , our scheme , however , converts into multipath data forwarding at the location where nws detects relaying nodes ' misbehavior . simulation experiments show that , with the help of nws , our forwarding scheme achieves a high success ratio in face of a large number of packet dropping nodes , and effectively adjusts its forwarding style , depending on the number of packet dropping nodes en route to the base station . categories and subject descriptors c . <digit> . <digit> computer communication networks general security and protection general terms security , algorithm , reliability", "tokenized_src": [3, 9, 24139, 13531, 1039, 53, 5336, 581, 22326, 120, 13531, 14087, 150, 1395, 16, 7824, 5275, 3, 5, 32100, 48, 1040, 3, 6915, 30, 3, 20309, 581, 22001, 150, 1395, 3, 31, 14087, 13, 12372, 2279, 11, 9127, 7, 8, 1817, 346, 107, 2960, 127, 13, 3, 9, 22326, 120, 13531, 14087, 150, 221, 16, 7824, 5275, 3, 5, 62, 915, 3, 9, 24139, 13531, 1039, 53, 5336, 338, 10678, 1605, 358, 41, 3, 29, 210, 7, 3, 61, 3, 6, 3346, 876, 21, 13652, 57, 13652, 3468, 1929, 16, 522, 13, 22326, 150, 1395, 24, 2328, 16010, 53, 13531, 7, 3, 6, 38, 168, 38, 3, 26545, 150, 1395, 24, 5124, 12, 16010, 13531, 7, 3, 5, 9770, 1767, 161, 28, 1249, 8292, 331, 1039, 53, 3, 6, 69, 5336, 6171, 5936, 7, 712, 2071, 331, 1039, 53, 3, 6, 84, 11037, 7, 705, 579, 145, 1249, 8292, 15171, 3, 5, 38, 8, 13531, 19, 21, 28288, 590, 8, 712, 2071, 2957, 8, 1247, 2478, 3, 6, 69, 5336, 3, 6, 983, 3, 6, 5755, 7, 139, 1249, 8292, 331, 1039, 53, 44, 8, 1128, 213, 3, 29, 210, 7, 8432, 7, 16010, 53, 150, 1395, 3, 31, 1817, 346, 107, 2960, 127, 3, 5, 11108, 12341, 504, 24, 3, 6, 28, 8, 199, 13, 3, 29, 210, 7, 3, 6, 69, 1039, 53, 5336, 1984, 7, 3, 9, 306, 1269, 5688, 16, 522, 13, 3, 9, 508, 381, 13, 13531, 14087, 150, 1395, 3, 6, 11, 3762, 6142, 7, 165, 1039, 53, 869, 3, 6, 3345, 30, 8, 381, 13, 13531, 14087, 150, 1395, 3, 35, 2981, 12, 8, 1247, 2478, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 1218, 1901, 5275, 879, 1034, 11, 1711, 879, 1353, 1034, 3, 6, 12628, 3, 6, 10581, 1], "trg": "neighbor watch system;reliable delivery;malicious node;degree of multipath;secure ad hoc network routing protocol;robustness;sensor network security;packet dropping attacks;legitimate node;single path forwarding;cluster key;critical area;aggregation protocols;secure routing", "tokenized_trg": [10678, 1605, 358, 32100, 3468, 1929, 32100, 22326, 150, 221, 32100, 1952, 13, 1249, 8292, 32100, 2451, 3, 9, 26, 3, 24344, 1229, 22764, 10015, 32100, 6268, 655, 32100, 7824, 1229, 1034, 32100, 13531, 14087, 6032, 32100, 12372, 150, 221, 32100, 712, 2071, 1039, 53, 32100, 9068, 843, 32100, 2404, 616, 32100, 3, 31761, 23, 106, 18870, 32100, 2451, 22764, 1]}
{"src": "simulating option prices and sensitivities by higher rank lattice rules . <sep> in this paper we introduce the intermediate rank or higher rank lattice rule for the general case when the number of quadrature points is n t m , where m is a composite integer , t is the rank of the rule , n is an integer such that ( n , m ) <digit> . our emphasis is the applications of higher rank lattice rules to a class of option pricing problems . the higher rank lattice rules are good candidates for applications to finance based on the following reasons the higher rank lattice rule has better asymptotic convergence rate than the conventional good lattice rule does and searching higher rank lattice points is much faster than that of good lattice points for the same number of quadrature points furthermore , numerical tests for application to option pricing problems showed that the higher rank lattice rules are not worse than the conventional good lattice rule on average . key words simulation of multivariate integrations monte carlo and quasi monte carlo methods lattice rules option pricing .", "tokenized_src": [108, 4115, 1014, 1182, 1596, 11, 3952, 23, 5499, 2197, 57, 1146, 11003, 50, 17, 1225, 15, 2219, 3, 5, 32100, 16, 48, 1040, 62, 4277, 8, 18957, 11003, 42, 1146, 11003, 50, 17, 1225, 15, 3356, 21, 8, 879, 495, 116, 8, 381, 13, 16429, 1795, 1462, 979, 19, 3, 29, 3, 17, 3, 51, 3, 6, 213, 3, 51, 19, 3, 9, 13723, 30278, 3, 6, 3, 17, 19, 8, 11003, 13, 8, 3356, 3, 6, 3, 29, 19, 46, 30278, 224, 24, 41, 3, 29, 3, 6, 3, 51, 3, 61, 32101, 3, 5, 69, 8053, 19, 8, 1564, 13, 1146, 11003, 50, 17, 1225, 15, 2219, 12, 3, 9, 853, 13, 1182, 5769, 982, 3, 5, 8, 1146, 11003, 50, 17, 1225, 15, 2219, 33, 207, 4341, 21, 1564, 12, 4747, 3, 390, 30, 8, 826, 2081, 8, 1146, 11003, 50, 17, 1225, 15, 3356, 65, 394, 38, 63, 1167, 17, 9798, 31098, 1080, 145, 8, 7450, 207, 50, 17, 1225, 15, 3356, 405, 11, 4549, 1146, 11003, 50, 17, 1225, 15, 979, 19, 231, 3627, 145, 24, 13, 207, 50, 17, 1225, 15, 979, 21, 8, 337, 381, 13, 16429, 1795, 1462, 979, 856, 3706, 3, 6, 25194, 3830, 21, 917, 12, 1182, 5769, 982, 3217, 24, 8, 1146, 11003, 50, 17, 1225, 15, 2219, 33, 59, 4131, 145, 8, 7450, 207, 50, 17, 1225, 15, 3356, 30, 1348, 3, 5, 843, 1234, 11108, 13, 1249, 9504, 342, 5660, 7, 6278, 15, 443, 40, 32, 11, 16172, 6278, 15, 443, 40, 32, 2254, 50, 17, 1225, 15, 2219, 1182, 5769, 3, 5, 1], "trg": "option pricing;lattice rules;simulation of multivariate integrations;monte carlo and quasi monte carlo methods", "tokenized_trg": [1182, 5769, 32100, 50, 17, 1225, 15, 2219, 32100, 11108, 13, 1249, 9504, 342, 5660, 7, 32100, 6278, 15, 443, 40, 32, 11, 16172, 6278, 15, 443, 40, 32, 2254, 1]}
{"src": "<unk> a new strategy for the exploration of the hidden web . <sep> the way current search engines work leaves a large amount of information available in the world wide web outside their catalogues . this is due to the fact that crawlers work by following hyperlinks and a few other references and ignore html forms . in this paper , we propose a search engine prototype that can retrieve information behind html forms by automatically generating queries for them . we describe the architecture , some implementation details and an experiment that proves that the information is not in fact indexed by current search engines . categories and subject descriptors h . <digit> . <digit> information storage and retrieval information search and retrieval retrieval models , search process h . <digit> . <digit> information interfaces and presentation hy <unk> hypermedia navigation general terms algorithms , experimentation", "tokenized_src": [2, 3, 9, 126, 1998, 21, 8, 9740, 13, 8, 5697, 765, 3, 5, 32100, 8, 194, 750, 960, 7277, 161, 3231, 3, 9, 508, 866, 13, 251, 347, 16, 8, 296, 1148, 765, 1067, 70, 14978, 7, 3, 5, 48, 19, 788, 12, 8, 685, 24, 18639, 277, 161, 57, 826, 29588, 7, 11, 3, 9, 360, 119, 9811, 11, 9751, 3, 10500, 2807, 3, 5, 16, 48, 1040, 3, 6, 62, 4230, 3, 9, 960, 1948, 14402, 24, 54, 21830, 251, 1187, 3, 10500, 2807, 57, 3269, 3, 11600, 13154, 21, 135, 3, 5, 62, 5530, 8, 4648, 3, 6, 128, 4432, 1030, 11, 46, 5016, 24, 4410, 7, 24, 8, 251, 19, 59, 16, 685, 3, 30564, 57, 750, 960, 7277, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 24515, 138, 2250, 3, 6, 960, 433, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 3459, 7, 11, 3831, 3, 107, 63, 2, 6676, 8172, 8789, 879, 1353, 16783, 3, 6, 5016, 257, 1], "trg": "hidden web;search engine;search engine;html form;architecture;implementation;experimentation;hidden web content;label extraction;information retrieval;web crawler;smartcrawl;extraction algorithm", "tokenized_trg": [5697, 765, 32100, 960, 1948, 32100, 960, 1948, 32100, 3, 10500, 607, 32100, 4648, 32100, 4432, 32100, 5016, 257, 32100, 5697, 765, 738, 32100, 3783, 16629, 32100, 251, 24515, 138, 32100, 765, 18639, 49, 32100, 2592, 2935, 210, 40, 32100, 16629, 12628, 1]}
{"src": "<unk> a comprehensive indian language toolset for the blind . <sep> braille and audio feedback based systems have vastly improved the lives of the visually impaired across a wide majority of the globe . however , more than <digit> million visually impaired people in the indian sub continent could not benefit much from such systems . this was primarily due to the difference in the technology required for indian languages compared to those corresponding to other popular languages of the world . in this paper , we describe the <unk> toolset . the contribution made by this research has enabled the visually impaired to read and write in indian <unk> with the help of a computer . categories and subject descriptors d . <digit> software general general terms human factors , experimentation .", "tokenized_src": [2, 3, 9, 3452, 16, 8603, 1612, 1339, 15, 17, 21, 8, 5480, 3, 5, 32100, 6397, 14424, 11, 2931, 3160, 3, 390, 1002, 43, 4248, 120, 3798, 8, 1342, 13, 8, 17307, 23484, 640, 3, 9, 1148, 2942, 13, 8, 7895, 3, 5, 983, 3, 6, 72, 145, 32101, 770, 17307, 23484, 151, 16, 8, 16, 8603, 769, 10829, 228, 59, 1656, 231, 45, 224, 1002, 3, 5, 48, 47, 3, 5325, 788, 12, 8, 1750, 16, 8, 748, 831, 21, 16, 8603, 8024, 3, 2172, 12, 273, 3, 9921, 12, 119, 1012, 8024, 13, 8, 296, 3, 5, 16, 48, 1040, 3, 6, 62, 5530, 8, 2, 1339, 15, 17, 3, 5, 8, 6275, 263, 57, 48, 585, 65, 9367, 8, 17307, 23484, 12, 608, 11, 1431, 16, 16, 8603, 2, 28, 8, 199, 13, 3, 9, 1218, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 889, 879, 879, 1353, 936, 2580, 3, 6, 5016, 257, 3, 5, 1], "trg": "indian languages;braille;audio feedback;visual impairment", "tokenized_trg": [16, 8603, 8024, 32100, 6397, 14424, 32100, 2931, 3160, 32100, 3176, 22018, 1]}
{"src": "<unk> interactive stylized 3d navigation using integrated spatial temporal controls . <sep> this paper describes <unk> , an approach for authoring 3d viewing experiences that incorporate stylistic elements that are not available in typical 3d viewers . a key aspect of <unk> is that it allows the author to significantly tailor what the user sees and when they see it . the resulting viewing experience can approach the visual richness and pacing of highly authored visual content such as television commercials or feature films . at the same time , <unk> allows for a satisfying level of interactivity while avoiding the problems inherent in using unconstrained camera models . the main components of <unk> are camera surfaces which spatially constrain the viewing camera animation clips that allow for visually appealing transitions between different camera surfaces and a simple , unified , interaction technique that permits the user to seamlessly and continuously move between spatial control of the camera and temporal control of the animated transitions . further , the user ' s focus of attention is always kept on the content , and not on extraneous interface widgets . in addition to describing the conceptual model of <unk> , its current implementation , and an example authored experience , we also present the results of an evaluation involving real users .", "tokenized_src": [2, 6076, 22437, 1601, 220, 26, 8789, 338, 4580, 15208, 10301, 8563, 7415, 3, 5, 32100, 48, 1040, 8788, 2, 3, 6, 46, 1295, 21, 2291, 53, 220, 26, 7426, 2704, 24, 6300, 22308, 447, 2479, 24, 33, 59, 347, 16, 4541, 220, 26, 13569, 3, 5, 3, 9, 843, 2663, 13, 2, 19, 24, 34, 1250, 8, 2291, 12, 4019, 13766, 125, 8, 1139, 217, 7, 11, 116, 79, 217, 34, 3, 5, 8, 3, 5490, 7426, 351, 54, 1295, 8, 3176, 2354, 655, 11, 3, 5379, 53, 13, 1385, 3, 23800, 3176, 738, 224, 38, 4390, 1328, 7, 42, 1451, 4852, 3, 5, 44, 8, 337, 97, 3, 6, 2, 1250, 21, 3, 9, 16156, 593, 13, 1413, 21661, 298, 3, 16217, 8, 982, 18340, 16, 338, 73, 1018, 22418, 1861, 2250, 3, 5, 8, 711, 3379, 13, 2, 33, 1861, 8983, 84, 15208, 120, 27354, 8, 7426, 1861, 9301, 16234, 24, 995, 21, 17307, 12817, 3508, 7, 344, 315, 1861, 8983, 11, 3, 9, 650, 3, 6, 3, 22927, 3, 6, 6565, 3317, 24, 14079, 8, 1139, 12, 20302, 11, 11721, 888, 344, 15208, 610, 13, 8, 1861, 11, 10301, 8563, 610, 13, 8, 16822, 3508, 7, 3, 5, 856, 3, 6, 8, 1139, 3, 31, 3, 7, 992, 13, 1388, 19, 373, 2697, 30, 8, 738, 3, 6, 11, 59, 30, 996, 29, 15, 1162, 3459, 19385, 7, 3, 5, 16, 811, 12, 3, 16012, 8, 17428, 825, 13, 2, 3, 6, 165, 750, 4432, 3, 6, 11, 46, 677, 3, 23800, 351, 3, 6, 62, 92, 915, 8, 772, 13, 46, 5002, 3, 6475, 490, 1105, 3, 5, 1], "trg": "3d navigation;3d viewers;interaction techniques;camera controls;3d visualization", "tokenized_trg": [220, 26, 8789, 32100, 220, 26, 13569, 32100, 6565, 2097, 32100, 1861, 7415, 32100, 220, 26, 21744, 1]}
{"src": "tactons structured tactile messages for non visual information display . <sep> tactile displays are now becoming available in a form that can be easily used in a user interface . this paper describes a new form of tactile output . tactons , or tactile icons , are structured , abstract messages that can be used to communicate messages non visually . a range of different parameters can be used for tacton construction including frequency , amplitude and duration of a tactile pulse , plus other parameters such as rhythm and location . tactons have the potential to improve interaction in a range of different areas , particularly where the visual display is overloaded , limited in size or not available , such as interfaces for blind people or in mobile and wearable devices . this paper describes tactons , the parameters used to construct them and some possible ways to design them . examples of where tactons might prove useful in user interfaces are given .", "tokenized_src": [9075, 8057, 14039, 28358, 4175, 21, 529, 3176, 251, 1831, 3, 5, 32100, 28358, 8397, 33, 230, 2852, 347, 16, 3, 9, 607, 24, 54, 36, 1153, 261, 16, 3, 9, 1139, 3459, 3, 5, 48, 1040, 8788, 3, 9, 126, 607, 13, 28358, 3911, 3, 5, 9075, 8057, 3, 6, 42, 28358, 17469, 3, 6, 33, 14039, 3, 6, 9838, 4175, 24, 54, 36, 261, 12, 4521, 4175, 529, 17307, 3, 5, 3, 9, 620, 13, 315, 8755, 54, 36, 261, 21, 9075, 17, 106, 1449, 379, 7321, 3, 6, 3, 24608, 19835, 11, 8659, 13, 3, 9, 28358, 13468, 3, 6, 303, 119, 8755, 224, 38, 10638, 11, 1128, 3, 5, 9075, 8057, 43, 8, 1055, 12, 1172, 6565, 16, 3, 9, 620, 13, 315, 844, 3, 6, 1989, 213, 8, 3176, 1831, 19, 147, 19496, 3, 6, 1643, 16, 812, 42, 59, 347, 3, 6, 224, 38, 3459, 7, 21, 5480, 151, 42, 16, 1156, 11, 2112, 179, 1904, 3, 5, 48, 1040, 8788, 9075, 8057, 3, 6, 8, 8755, 261, 12, 6774, 135, 11, 128, 487, 1155, 12, 408, 135, 3, 5, 4062, 13, 213, 9075, 8057, 429, 4410, 1934, 16, 1139, 3459, 7, 33, 787, 3, 5, 1], "trg": "tactons;tactile displays;multimodal interaction;non visual cues", "tokenized_trg": [9075, 8057, 32100, 28358, 8397, 32100, 1249, 20226, 6565, 32100, 529, 3176, 123, 15, 7, 1]}
{"src": "tcp ip performance over 3g wireless links with rate and delay variation . <sep> wireless link losses result in poor tcp throughput since losses are perceived as congestion by tcp , resulting in source throttling . in order to mitigate this effect , 3g wireless link designers have augmented their system with extensive local retransmission mechanisms . in addition , in order to increase throughput , intelligent channel state based scheduling have also been introduced . while these mechanisms have reduced the impact of losses on tcp throughput and improved the channel utilization , these gains have come at the expense of increased delay and rate variability . in this paper , we comprehensively evaluate the impact of variable rate and variable delay on long lived tcp performance . we propose a model to explain and predict tcp ' s throughput over a link with variable rate and or delay . we also propose a network based solution called ack regulator that mitigates the effect of variable rate and or delay without significantly increasing the round trip time , while improving tcp performance by up to <digit> % . categories and subject descriptors c . <digit> . <digit> network architecture and design wireless communication general terms algorithms , performance , design", "tokenized_src": [3, 17, 75, 102, 3, 23, 102, 821, 147, 220, 122, 5419, 2416, 28, 1080, 11, 7230, 12338, 3, 5, 32100, 5419, 1309, 8467, 741, 16, 2714, 3, 17, 75, 102, 190, 2562, 437, 8467, 33, 14057, 38, 26294, 57, 3, 17, 75, 102, 3, 6, 3, 5490, 16, 1391, 3, 189, 14369, 697, 3, 5, 16, 455, 12, 21002, 48, 1504, 3, 6, 220, 122, 5419, 1309, 6553, 43, 3, 28984, 70, 358, 28, 3616, 415, 3, 60, 7031, 5451, 12009, 3, 5, 16, 811, 3, 6, 16, 455, 12, 993, 190, 2562, 3, 6, 7951, 4245, 538, 3, 390, 16131, 43, 92, 118, 3665, 3, 5, 298, 175, 12009, 43, 3915, 8, 1113, 13, 8467, 30, 3, 17, 75, 102, 190, 2562, 11, 3798, 8, 4245, 21961, 3, 6, 175, 11391, 43, 369, 44, 8, 8225, 13, 1936, 7230, 11, 1080, 27980, 3, 5, 16, 48, 1040, 3, 6, 62, 3452, 120, 6825, 8, 1113, 13, 7660, 1080, 11, 7660, 7230, 30, 307, 4114, 3, 17, 75, 102, 821, 3, 5, 62, 4230, 3, 9, 825, 12, 3209, 11, 9689, 3, 17, 75, 102, 3, 31, 3, 7, 190, 2562, 147, 3, 9, 1309, 28, 7660, 1080, 11, 42, 7230, 3, 5, 62, 92, 4230, 3, 9, 1229, 3, 390, 1127, 718, 3, 4365, 14415, 24, 21002, 7, 8, 1504, 13, 7660, 1080, 11, 42, 7230, 406, 4019, 3094, 8, 1751, 1469, 97, 3, 6, 298, 4863, 3, 17, 75, 102, 821, 57, 95, 12, 32101, 3, 1454, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 1229, 4648, 11, 408, 5419, 1901, 879, 1353, 16783, 3, 6, 821, 3, 6, 408, 1], "trg": "tcp;3g wireless links;3g wireless;design;network;architecture;wireless communication;algorithm;prediction model;simulation result;congestion solution;link and rate variation;performance evaluation", "tokenized_trg": [3, 17, 75, 102, 32100, 220, 122, 5419, 2416, 32100, 220, 122, 5419, 32100, 408, 32100, 1229, 32100, 4648, 32100, 5419, 1901, 32100, 12628, 32100, 21332, 825, 32100, 11108, 741, 32100, 26294, 1127, 32100, 1309, 11, 1080, 12338, 32100, 821, 5002, 1]}
{"src": "the forest and the trees using oracle and sql server together to teach ansi standard sql . <sep> students in a sophomore level database fundamentals course were taught sql and database concepts using both oracle and sql server . previous offerings of the class had used one or the other database . classroom experiences suggest that students were able to handle learning sql in the dual environment , and , in fact , benefited from this approach by better understanding ansi standard versus database specific sql and implementation differences in the two database systems . categories and subject descriptors h . <digit> database management query languages h . <digit> . <digit> sql h . <digit> . <digit> microsoft sql server h . <digit> . <digit> oracle general terms languages", "tokenized_src": [8, 5827, 11, 8, 3124, 338, 42, 9, 2482, 11, 11820, 40, 2460, 544, 12, 3884, 46, 7, 23, 1068, 11820, 40, 3, 5, 32100, 481, 16, 3, 9, 23659, 593, 3501, 4431, 7, 503, 130, 4436, 11820, 40, 11, 3501, 6085, 338, 321, 42, 9, 2482, 11, 11820, 40, 2460, 3, 5, 1767, 11571, 13, 8, 853, 141, 261, 80, 42, 8, 119, 3501, 3, 5, 4858, 2704, 3130, 24, 481, 130, 3, 179, 12, 2174, 1036, 11820, 40, 16, 8, 7013, 1164, 3, 6, 11, 3, 6, 16, 685, 3, 6, 3, 26777, 45, 48, 1295, 57, 394, 1705, 46, 7, 23, 1068, 3, 8911, 3501, 806, 11820, 40, 11, 4432, 5859, 16, 8, 192, 3501, 1002, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3501, 758, 11417, 8024, 3, 107, 3, 5, 32101, 3, 5, 32101, 11820, 40, 3, 107, 3, 5, 32101, 3, 5, 32101, 3, 30574, 11820, 40, 2460, 3, 107, 3, 5, 32101, 3, 5, 32101, 42, 9, 2482, 879, 1353, 8024, 1], "trg": "oracle;sql server;sql;ansi standard sql;database;dual environment;database systems;student feedbacks;sql language;educational fundamentals;practical results;teaching in it;course design;training vs . education", "tokenized_trg": [42, 9, 2482, 32100, 11820, 40, 2460, 32100, 11820, 40, 32100, 46, 7, 23, 1068, 11820, 40, 32100, 3501, 32100, 7013, 1164, 32100, 3501, 1002, 32100, 1236, 3160, 7, 32100, 11820, 40, 1612, 32100, 3472, 4431, 7, 32100, 3236, 772, 32100, 2119, 16, 34, 32100, 503, 408, 32100, 761, 3, 208, 7, 3, 5, 1073, 1]}
{"src": "the maximum entropy method for analyzing retrieval measures . <sep> we present a model , based on the maximum entropy method , for analyzing various measures of retrieval performance such as average precision , r precision , and precision at cutoffs . our methodology treats the value of such a measure as a constraint on the distribution of relevant documents in an unknown list , and the maximum entropy distribution can be determined subject to these constraints . for good measures of overall performance ( such as average precision ) , the resulting maximum entropy distributions are highly correlated with actual distributions of relevant documents in lists as demonstrated through trec data for poor measures of overall performance , the correlation is weaker . as such , the maximum entropy method can be used to quantify the overall quality of a retrieval measure . furthermore , for good measures of overall performance ( such as average precision ) , we show that the corresponding maximum entropy distributions can be used to accurately infer precision recall curves and the values of other measures of performance , and we demonstrate that the quality of these inferences far exceeds that predicted by simple retrieval measure correlation , as demonstrated through trec data . categories and subject descriptors h . <digit> . <digit> information storage and retrieval systems and software , performance evaluation general terms theory , measurement , experimentation", "tokenized_src": [8, 2411, 3, 35, 12395, 63, 1573, 21, 3, 19175, 24515, 138, 3629, 3, 5, 32100, 62, 915, 3, 9, 825, 3, 6, 3, 390, 30, 8, 2411, 3, 35, 12395, 63, 1573, 3, 6, 21, 3, 19175, 796, 3629, 13, 24515, 138, 821, 224, 38, 1348, 11723, 3, 6, 3, 52, 11723, 3, 6, 11, 11723, 44, 1340, 1647, 7, 3, 5, 69, 15663, 11954, 8, 701, 13, 224, 3, 9, 3613, 38, 3, 9, 27354, 17, 30, 8, 3438, 13, 2193, 2691, 16, 46, 7752, 570, 3, 6, 11, 8, 2411, 3, 35, 12395, 63, 3438, 54, 36, 4187, 1426, 12, 175, 17765, 3, 5, 21, 207, 3629, 13, 1879, 821, 41, 224, 38, 1348, 11723, 3, 61, 3, 6, 8, 3, 5490, 2411, 3, 35, 12395, 63, 3438, 7, 33, 1385, 3, 29604, 28, 1805, 3438, 7, 13, 2193, 2691, 16, 7809, 38, 9028, 190, 18172, 331, 21, 2714, 3629, 13, 1879, 821, 3, 6, 8, 18712, 19, 5676, 49, 3, 5, 38, 224, 3, 6, 8, 2411, 3, 35, 12395, 63, 1573, 54, 36, 261, 12, 30389, 8, 1879, 463, 13, 3, 9, 24515, 138, 3613, 3, 5, 856, 3706, 3, 6, 21, 207, 3629, 13, 1879, 821, 41, 224, 38, 1348, 11723, 3, 61, 3, 6, 62, 504, 24, 8, 3, 9921, 2411, 3, 35, 12395, 63, 3438, 7, 54, 36, 261, 12, 12700, 16, 1010, 11723, 7881, 8435, 7, 11, 8, 2620, 13, 119, 3629, 13, 821, 3, 6, 11, 62, 5970, 24, 8, 463, 13, 175, 16, 11788, 7, 623, 8193, 7, 24, 15439, 57, 650, 24515, 138, 3613, 18712, 3, 6, 38, 9028, 190, 18172, 331, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 1002, 11, 889, 3, 6, 821, 5002, 879, 1353, 4516, 3, 6, 9753, 3, 6, 5016, 257, 1], "trg": "maximum entropy;average precision;evaluation", "tokenized_trg": [2411, 3, 35, 12395, 63, 32100, 1348, 11723, 32100, 5002, 1]}
{"src": "a similarity measure for motion stream segmentation and recognition . <sep> recognition of motion streams such as data streams generated by different sign languages or various captured human body motions requires a high performance similarity measure . the motion streams have multiple attributes , and motion patterns in the streams can have different lengths from those of isolated motion patterns and different attributes can have different temporal shifts and variations . to address these issues , this paper proposes a similarity measure based on singular value decomposition ( svd ) of motion matrices . eigenvector differences weighed by the corresponding eigenvalues are considered for the proposed similarity measure . experiments with general hand gestures and human motion streams show that the proposed similarity measure gives good performance for recognizing motion patterns in the motion streams in real time . categories and subject descriptors h . <digit> . <digit> database management database applications , data mining general terms algorithm", "tokenized_src": [3, 9, 1126, 485, 3613, 21, 4644, 6093, 5508, 257, 11, 5786, 3, 5, 32100, 5786, 13, 4644, 15841, 224, 38, 331, 15841, 6126, 57, 315, 1320, 8024, 42, 796, 9534, 936, 643, 4644, 7, 2311, 3, 9, 306, 821, 1126, 485, 3613, 3, 5, 8, 4644, 15841, 43, 1317, 12978, 3, 6, 11, 4644, 4264, 16, 8, 15841, 54, 43, 315, 2475, 7, 45, 273, 13, 12996, 4644, 4264, 11, 315, 12978, 54, 43, 315, 10301, 8563, 4108, 7, 11, 10914, 3, 5, 12, 1115, 175, 807, 3, 6, 48, 1040, 4230, 7, 3, 9, 1126, 485, 3613, 3, 390, 30, 22166, 701, 20, 287, 4718, 41, 3, 7, 208, 26, 3, 61, 13, 4644, 3, 20705, 15, 7, 3, 5, 3, 15, 2211, 162, 5317, 5859, 3, 24902, 57, 8, 3, 9921, 3, 15, 2211, 12097, 7, 33, 1702, 21, 8, 4382, 1126, 485, 3613, 3, 5, 12341, 28, 879, 609, 17374, 7, 11, 936, 4644, 15841, 504, 24, 8, 4382, 1126, 485, 3613, 1527, 207, 821, 21, 3, 22873, 4644, 4264, 16, 8, 4644, 15841, 16, 490, 97, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 3501, 1564, 3, 6, 331, 5558, 879, 1353, 12628, 1], "trg": "similarity measure;motion stream;segmentation;recognition;data streams;singular value decomposition;eigenvector;eigenvalue;gesture;pattern recognition", "tokenized_trg": [1126, 485, 3613, 32100, 4644, 6093, 32100, 5508, 257, 32100, 5786, 32100, 331, 15841, 32100, 22166, 701, 20, 287, 4718, 32100, 3, 15, 2211, 162, 5317, 32100, 3, 15, 2211, 12097, 32100, 17374, 32100, 3275, 5786, 1]}
{"src": "the model , formalizing topic maps . <sep> this paper presents a formalization for topic maps ( tm ) . we first simplify tmrm , the current iso standard proposal for a tm reference model and then characterize topic map instances . after defining a minimal merging operator for maps we propose a formal foundation for a tm query language . this path expression language allows us to navigate through given topic maps and to extract information . we also show how such a language can be the basis for a more industrial version of a query language and how it may serve as foundation for a constraint language to define tm based ontologies . keywords knowledge engineering , semantic web , topic maps", "tokenized_src": [8, 825, 3, 6, 4727, 2610, 2859, 8111, 3, 5, 32100, 48, 1040, 6621, 3, 9, 4727, 1707, 21, 2859, 8111, 41, 3, 17, 51, 3, 61, 3, 5, 62, 166, 18356, 3, 17, 51, 52, 51, 3, 6, 8, 750, 19, 32, 1068, 6384, 21, 3, 9, 3, 17, 51, 2848, 825, 11, 258, 1848, 1737, 2859, 2828, 10316, 3, 5, 227, 3, 16123, 3, 9, 6211, 12147, 53, 7221, 21, 8111, 62, 4230, 3, 9, 4727, 3361, 21, 3, 9, 3, 17, 51, 11417, 1612, 3, 5, 48, 2071, 3893, 1612, 1250, 178, 12, 7939, 190, 787, 2859, 8111, 11, 12, 5819, 251, 3, 5, 62, 92, 504, 149, 224, 3, 9, 1612, 54, 36, 8, 1873, 21, 3, 9, 72, 2913, 988, 13, 3, 9, 11417, 1612, 11, 149, 34, 164, 1716, 38, 3361, 21, 3, 9, 27354, 17, 1612, 12, 6634, 3, 17, 51, 3, 390, 30, 17, 4137, 7, 3, 5, 12545, 1103, 3867, 3, 6, 27632, 765, 3, 6, 2859, 8111, 1], "trg": "topic maps;knowledge engineering;semantic web", "tokenized_trg": [2859, 8111, 32100, 1103, 3867, 32100, 27632, 765, 1]}
{"src": "the potential of the cell processor for scientific computing . <sep> the slowing pace of commodity microprocessor performance improvements combined with ever increasing chip power demands has become of utmost concern to computational scientists . as a result , the high performance computing community is examining alternative architectures that address the limitations of modern cache based designs . in this work , we examine the potential of using the forthcoming sti cell processor as a building block for future high end computing systems . our work contains several novel contributions . first , we introduce a performance model for cell and apply it to several key scientific computing kernels dense matrix multiply , sparse matrix vector multiply , stencil computations , and 1d 2d ffts . the difficulty of programming cell , which requires assembly level intrinsics for the best performance , makes this model useful as an initial step in algorithm design and evaluation . next , we validate the accuracy of our model by comparing results against published hardware results , as well as our own implementations on the cell full system simulator . additionally , we compare cell performance to benchmarks run on leading superscalar ( amd opteron ) , vliw ( intel itanium2 ) , and vector ( cray x1e ) architectures . our work also explores several different mappings of the kernels and demonstrates a simple and effective programming model for cell ' s unique architecture . finally , we propose modest microarchitectural modifications that could significantly increase the efficiency of double precision calculations . overall results demonstrate the tremendous potential of the cell architecture for scientific computations in terms of both raw performance and power efficiency . categories and subject descriptors c . <digit> . <digit> processor architectures multiple data stream architectures single instruction stream , multiple data stream processors ( simd ) c . <digit> . <digit> processor architectures other architecture styles heterogeneous ( hybrid ) systems c . <digit> . <digit> processor architectures parallel architectures c . <digit> performance of systems design studies , modeling techniques , performance attributes d . <digit> . <digit> programming techniques concurrent programming parallel programming general terms performance , design", "tokenized_src": [8, 1055, 13, 8, 2358, 7502, 21, 4290, 10937, 3, 5, 32100, 8, 2684, 53, 4974, 13, 23070, 2179, 15056, 127, 821, 6867, 3334, 28, 664, 3094, 6591, 579, 7328, 65, 582, 13, 3, 76, 17, 5463, 2410, 12, 25850, 7004, 3, 5, 38, 3, 9, 741, 3, 6, 8, 306, 821, 10937, 573, 19, 3, 20424, 2433, 4648, 7, 24, 1115, 8, 10005, 13, 941, 11800, 3, 390, 2888, 3, 5, 16, 48, 161, 3, 6, 62, 5443, 8, 1055, 13, 338, 8, 22316, 3, 2248, 2358, 7502, 38, 3, 9, 740, 2463, 21, 647, 306, 414, 10937, 1002, 3, 5, 69, 161, 2579, 633, 3714, 7548, 3, 5, 166, 3, 6, 62, 4277, 3, 9, 821, 825, 21, 2358, 11, 1581, 34, 12, 633, 843, 4290, 10937, 20563, 7, 13809, 16826, 30333, 3, 6, 14144, 7, 15, 16826, 12938, 30333, 3, 6, 27215, 29761, 7, 3, 6, 11, 209, 26, 204, 26, 3, 89, 89, 17, 7, 3, 5, 8, 8565, 13, 6020, 2358, 3, 6, 84, 2311, 7889, 593, 26075, 7, 21, 8, 200, 821, 3, 6, 656, 48, 825, 1934, 38, 46, 2332, 1147, 16, 12628, 408, 11, 5002, 3, 5, 416, 3, 6, 62, 16742, 8, 7452, 13, 69, 825, 57, 3, 14622, 772, 581, 1790, 4214, 772, 3, 6, 38, 168, 38, 69, 293, 4432, 7, 30, 8, 2358, 423, 358, 26927, 3, 5, 11700, 3, 6, 62, 4048, 2358, 821, 12, 15705, 7, 661, 30, 1374, 1355, 7, 1489, 291, 41, 183, 26, 3, 19893, 106, 3, 61, 3, 6, 3, 208, 40, 23, 210, 41, 16, 1625, 34, 152, 2552, 357, 3, 61, 3, 6, 11, 12938, 41, 3, 2935, 63, 3, 226, 536, 15, 3, 61, 4648, 7, 3, 5, 69, 161, 92, 2075, 7, 633, 315, 14670, 7, 13, 8, 20563, 7, 11, 3, 21275, 3, 9, 650, 11, 1231, 6020, 825, 21, 2358, 3, 31, 3, 7, 775, 4648, 3, 5, 2031, 3, 6, 62, 4230, 11306, 2179, 7064, 23, 5822, 17, 9709, 14172, 24, 228, 4019, 993, 8, 3949, 13, 1486, 11723, 19868, 3, 5, 1879, 772, 5970, 8, 9425, 1055, 13, 8, 2358, 4648, 21, 4290, 29761, 7, 16, 1353, 13, 321, 5902, 821, 11, 579, 3949, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 7502, 4648, 7, 1317, 331, 6093, 4648, 7, 712, 8033, 6093, 3, 6, 1317, 331, 6093, 7502, 7, 41, 108, 51, 26, 3, 61, 3, 75, 3, 5, 32101, 3, 5, 32101, 7502, 4648, 7, 119, 4648, 4634, 26481, 729, 15, 1162, 41, 9279, 3, 61, 1002, 3, 75, 3, 5, 32101, 3, 5, 32101, 7502, 4648, 7, 8449, 4648, 7, 3, 75, 3, 5, 32101, 821, 13, 1002, 408, 2116, 3, 6, 15309, 2097, 3, 6, 821, 12978, 3, 26, 3, 5, 32101, 3, 5, 32101, 6020, 2097, 18964, 6020, 8449, 6020, 879, 1353, 821, 3, 6, 408, 1], "trg": "cell processor;sparse matrix;stencil;fft;gemm;spmv;three level memory", "tokenized_trg": [2358, 7502, 32100, 14144, 7, 15, 16826, 32100, 27215, 32100, 3, 89, 89, 17, 32100, 7929, 51, 32100, 3, 7, 2028, 208, 32100, 386, 593, 2594, 1]}
{"src": "the use of mediation and ontology technologies for software component information retrieval . <sep> component based development aims at constructing software through the inter relationship between pre existing components . however , these components should be bound to a specific application domain in order to be effectively reused . reusable domain components and their related documentation are usually stored in a great variety of data sources . thus , a possible solution for accessing this information is to use a software layer that integrates different component information sources . we present a component information integration data layer , based on mediators . through mediators , domain ontology acts as a technique formalism for specifying ontological commitments or agreements between component users and providers , enabling more accurate software component information search .", "tokenized_src": [8, 169, 13, 24290, 11, 30, 17, 1863, 2896, 21, 889, 3876, 251, 24515, 138, 3, 5, 32100, 3876, 3, 390, 606, 3, 8345, 44, 3, 24246, 889, 190, 8, 1413, 1675, 344, 554, 1895, 3379, 3, 5, 983, 3, 6, 175, 3379, 225, 36, 8120, 12, 3, 9, 806, 917, 3303, 16, 455, 12, 36, 3762, 15677, 26, 3, 5, 3, 28147, 3303, 3379, 11, 70, 1341, 7192, 33, 1086, 5816, 16, 3, 9, 248, 1196, 13, 331, 2836, 3, 5, 2932, 3, 6, 3, 9, 487, 1127, 21, 592, 53, 48, 251, 19, 12, 169, 3, 9, 889, 3760, 24, 9162, 7, 315, 3876, 251, 2836, 3, 5, 62, 915, 3, 9, 3876, 251, 5660, 331, 3760, 3, 6, 3, 390, 30, 26882, 7, 3, 5, 190, 26882, 7, 3, 6, 3303, 30, 17, 1863, 6775, 38, 3, 9, 3317, 607, 6835, 21, 11610, 53, 2400, 6207, 3148, 7, 42, 10663, 344, 3876, 1105, 11, 3580, 3, 6, 3, 10165, 72, 4034, 889, 3876, 251, 960, 3, 5, 1], "trg": "component based engineering;component repositories;software classification and identification;domain engineering", "tokenized_trg": [3876, 3, 390, 3867, 32100, 3876, 14173, 15467, 15, 7, 32100, 889, 13774, 11, 10356, 32100, 3303, 3867, 1]}
{"src": "through different eyes assessing multiple conceptual views for querying web services . <sep> we present enhancements for uddi daml s registries allowing cooperative discovery and selection of web services with a focus on personalization . to find the most useful service in each instance of a request , not only explicit parameters of the request have to be matched against the service offers . also user preferences or implicit assumptions of a user with respect to common knowledge in a certain domain have to be considered to improve the quality of service provisioning . in the area of web services the notion of service ontologies together with cooperative answering techniques can take a lot of this responsibility . however , without quality assessments for the relaxation of service requests and queries a personalized service discovery and selection is virtually impossible . this paper focuses on assessing the semantic meaning of query relaxation plans over multiple conceptual views of the service ontology , each one representing a soft query constraint of the user request . our focus is on the question what constitutes a minimum amount of necessary relaxation to answer each individual request in a cooperative manner . incorporating such assessments as early as possible we propose to integrate ontology based discovery directly into uddi directories or query facilities in service provisioning portals . using the quality assessments presented here , this integration promises to propel today ' s web services towards an intuitive user centered service provisioning . categories and subject descriptors h . <digit> . <digit> information storage and retrieval online information services , web based services . general terms algorithms , human factors , design .", "tokenized_src": [190, 315, 2053, 3, 20861, 1317, 17428, 2441, 21, 11417, 53, 765, 364, 3, 5, 32100, 62, 915, 15220, 7, 21, 3, 76, 26, 26, 23, 10157, 40, 3, 7, 3, 5200, 725, 3, 3232, 20270, 9087, 11, 1801, 13, 765, 364, 28, 3, 9, 992, 30, 525, 1707, 3, 5, 12, 253, 8, 167, 1934, 313, 16, 284, 3421, 13, 3, 9, 1690, 3, 6, 59, 163, 17623, 8755, 13, 8, 1690, 43, 12, 36, 3, 10304, 581, 8, 313, 704, 3, 5, 92, 1139, 11177, 42, 21773, 20298, 13, 3, 9, 1139, 28, 1445, 12, 1017, 1103, 16, 3, 9, 824, 3303, 43, 12, 36, 1702, 12, 1172, 8, 463, 13, 313, 6537, 53, 3, 5, 16, 8, 616, 13, 765, 364, 8, 9347, 13, 313, 30, 17, 4137, 7, 544, 28, 20270, 18243, 2097, 54, 240, 3, 9, 418, 13, 48, 3263, 3, 5, 983, 3, 6, 406, 463, 16396, 21, 8, 12633, 13, 313, 6166, 11, 13154, 3, 9, 9354, 313, 9087, 11, 1801, 19, 9114, 4586, 3, 5, 48, 1040, 3, 6915, 30, 3, 20861, 8, 27632, 2530, 13, 11417, 12633, 1390, 147, 1317, 17428, 2441, 13, 8, 313, 30, 17, 1863, 3, 6, 284, 80, 9085, 3, 9, 1835, 11417, 27354, 17, 13, 8, 1139, 1690, 3, 5, 69, 992, 19, 30, 8, 822, 125, 11708, 7, 3, 9, 2559, 866, 13, 1316, 12633, 12, 1525, 284, 928, 1690, 16, 3, 9, 20270, 3107, 3, 5, 3, 18218, 224, 16396, 38, 778, 38, 487, 62, 4230, 12, 9162, 30, 17, 1863, 3, 390, 9087, 1461, 139, 3, 76, 26, 26, 23, 2090, 725, 42, 11417, 2465, 16, 313, 6537, 53, 8948, 7, 3, 5, 338, 8, 463, 16396, 2569, 270, 3, 6, 48, 5660, 11236, 12, 24075, 469, 3, 31, 3, 7, 765, 364, 1587, 46, 12954, 1139, 3, 12809, 313, 6537, 53, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 367, 251, 364, 3, 6, 765, 3, 390, 364, 3, 5, 879, 1353, 16783, 3, 6, 936, 2580, 3, 6, 408, 3, 5, 1], "trg": "web services;personalization;generalization hierarchy of concepts;subsequent execution;web service definition language;universal description discovery and integration;discovery of possible services;preference based service provisioning;semantic web;the generalization throughout ontologies;user profiling;relaxing multiple ontologies;domain specific understanding of concepts;ontology resembles common knowledge;tree shaped clipping of ontologies;selection of the most useful;cooperative service discovery", "tokenized_trg": [765, 364, 32100, 525, 1707, 32100, 879, 1707, 25515, 13, 6085, 32100, 8697, 9328, 32100, 765, 313, 4903, 1612, 32100, 7687, 4210, 9087, 11, 5660, 32100, 9087, 13, 487, 364, 32100, 11633, 3, 390, 313, 6537, 53, 32100, 27632, 765, 32100, 8, 879, 1707, 1019, 30, 17, 4137, 7, 32100, 1139, 9639, 53, 32100, 8354, 1317, 30, 17, 4137, 7, 32100, 3303, 806, 1705, 13, 6085, 32100, 30, 17, 1863, 3, 17083, 7, 1017, 1103, 32100, 2195, 3, 6489, 5516, 2462, 13, 30, 17, 4137, 7, 32100, 1801, 13, 8, 167, 1934, 32100, 20270, 313, 9087, 1]}
{"src": "topic modeling in fringe word prediction for aac . <sep> word prediction can be used for enhancing the communication ability of persons with speech and language impair ments . in this work , we explore two methods of adapting a language model to the topic of conversation , and apply these methods to the prediction of fringe words . categories and subject descriptors i . <digit> . m document and text processing miscellaneous general terms algorithms", "tokenized_src": [2859, 15309, 16, 26533, 1448, 21332, 21, 3, 9, 9, 75, 3, 5, 32100, 1448, 21332, 54, 36, 261, 21, 3, 14762, 8, 1901, 1418, 13, 7609, 28, 5023, 11, 1612, 4840, 2256, 3, 4128, 3, 5, 16, 48, 161, 3, 6, 62, 2075, 192, 2254, 13, 3374, 53, 3, 9, 1612, 825, 12, 8, 2859, 13, 3634, 3, 6, 11, 1581, 175, 2254, 12, 8, 21332, 13, 26533, 1234, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 23, 3, 5, 32101, 3, 5, 3, 51, 1708, 11, 1499, 3026, 1817, 7125, 8102, 1162, 879, 1353, 16783, 1], "trg": "topic modeling;word prediction;aac;language modeling;prediction of fringe words;communication rate;identify current topic of conversation;increase probability of related words;prediction window size;conversations in the switchboard corpus;accuracy of prediction method;fringe vocabulary;decrease probability of unrelated words;core vocabulary;immediate prediction;construct a new language model", "tokenized_trg": [2859, 15309, 32100, 1448, 21332, 32100, 3, 9, 9, 75, 32100, 1612, 15309, 32100, 21332, 13, 26533, 1234, 32100, 1901, 1080, 32100, 2862, 750, 2859, 13, 3634, 32100, 993, 15834, 13, 1341, 1234, 32100, 21332, 2034, 812, 32100, 9029, 16, 8, 3615, 1976, 11736, 302, 32100, 7452, 13, 21332, 1573, 32100, 26533, 19067, 32100, 6313, 15834, 13, 73, 3897, 1234, 32100, 2583, 19067, 32100, 5299, 21332, 32100, 6774, 3, 9, 126, 1612, 825, 1]}
{"src": "topic transition detection using hierarchical hidden markov and semi markov models . <sep> in this paper we introduce a probabilistic framework to exploit hierarchy , structure sharing and duration information for topic transition detection in videos . our probabilistic detection framework is a combination of a shot classification step and a detection phase using hierarchical probabilistic models . we consider two models in this paper the extended hierarchical hidden markov model ( hhmm ) and the coxian switching hidden semi markov model ( s hsmm ) because they allow the natural decomposition of semantics in videos , including shared structures , to be modeled directly , and thus enabling efficient inference and reducing the sample complexity in learning . additionally , the s hsmm allows the duration information to be incorporated , consequently the modeling of long term dependencies in videos is enriched through both hierarchical and duration modeling . furthermore , the use of the coxian distribution in the s hsmm makes it tractable to deal with long sequences in video . our experimentation of the proposed framework on twelve educational and training videos shows that both models outperform the baseline cases ( flat hmm and hsmm ) and performances reported in earlier work in topic detection . the superior performance of the s hsmm over the hhmm verifies our belief that duration information is an important factor in video content modeling . categories and subject descriptors h . <digit> . <digit> information storage and retrieval content analysis and indexing . general terms algorithms , management", "tokenized_src": [2859, 3508, 10664, 338, 1382, 7064, 1950, 5697, 3157, 9789, 11, 4772, 3157, 9789, 2250, 3, 5, 32100, 16, 48, 1040, 62, 4277, 3, 9, 9551, 3040, 4732, 12, 9248, 25515, 3, 6, 1809, 2178, 11, 8659, 251, 21, 2859, 3508, 10664, 16, 3075, 3, 5, 69, 9551, 3040, 10664, 4732, 19, 3, 9, 2711, 13, 3, 9, 2538, 13774, 1147, 11, 3, 9, 10664, 3944, 338, 1382, 7064, 1950, 9551, 3040, 2250, 3, 5, 62, 1099, 192, 2250, 16, 48, 1040, 8, 4760, 1382, 7064, 1950, 5697, 3157, 9789, 825, 41, 3, 107, 107, 635, 3, 61, 11, 8, 576, 19838, 29, 14569, 5697, 4772, 3157, 9789, 825, 41, 3, 7, 3, 107, 7, 635, 3, 61, 250, 79, 995, 8, 793, 20, 287, 4718, 13, 27632, 7, 16, 3075, 3, 6, 379, 2471, 5278, 3, 6, 12, 36, 3, 25125, 1461, 3, 6, 11, 2932, 3, 10165, 2918, 16, 11788, 11, 3, 5503, 8, 3106, 11641, 16, 1036, 3, 5, 11700, 3, 6, 8, 3, 7, 3, 107, 7, 635, 1250, 8, 8659, 251, 12, 36, 3, 10975, 3, 6, 21612, 120, 8, 15309, 13, 307, 1657, 6002, 11573, 16, 3075, 19, 3, 27307, 190, 321, 1382, 7064, 1950, 11, 8659, 15309, 3, 5, 856, 3706, 3, 6, 8, 169, 13, 8, 576, 19838, 29, 3438, 16, 8, 3, 7, 3, 107, 7, 635, 656, 34, 13499, 179, 12, 1154, 28, 307, 5932, 7, 16, 671, 3, 5, 69, 5016, 257, 13, 8, 4382, 4732, 30, 13369, 3472, 11, 761, 3075, 1267, 24, 321, 2250, 91, 883, 2032, 8, 20726, 1488, 41, 2667, 3, 107, 635, 11, 3, 107, 7, 635, 3, 61, 11, 7357, 2196, 16, 2283, 161, 16, 2859, 10664, 3, 5, 8, 4784, 821, 13, 8, 3, 7, 3, 107, 7, 635, 147, 8, 3, 107, 107, 635, 548, 15821, 69, 7750, 24, 8659, 251, 19, 46, 359, 2945, 16, 671, 738, 15309, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 738, 1693, 11, 5538, 53, 3, 5, 879, 1353, 16783, 3, 6, 758, 1], "trg": "topic transition detection;topic transition detection;probabilistic framework;extended hierarchical hidden markov model;hierarchical hidden markov model;coxian;coxian switching hidden semi markov model;coxian switching hidden semi markov model;semantic relationship of neighborhood scenes;natural hierarchical organization of videos;shot based semantic classification;hierarchical markov models;domain knowledge;their semantically shared substructures;typical durations of important semantics;educational videos;a variety in directional styles;model educational video content;unified and coherent probabilistic framework;modeling temporal correlation", "tokenized_trg": [2859, 3508, 10664, 32100, 2859, 3508, 10664, 32100, 9551, 3040, 4732, 32100, 4760, 1382, 7064, 1950, 5697, 3157, 9789, 825, 32100, 1382, 7064, 1950, 5697, 3157, 9789, 825, 32100, 576, 19838, 29, 32100, 576, 19838, 29, 14569, 5697, 4772, 3157, 9789, 825, 32100, 576, 19838, 29, 14569, 5697, 4772, 3157, 9789, 825, 32100, 27632, 1675, 13, 5353, 8073, 32100, 793, 1382, 7064, 1950, 1470, 13, 3075, 32100, 2538, 3, 390, 27632, 13774, 32100, 1382, 7064, 1950, 3157, 9789, 2250, 32100, 3303, 1103, 32100, 70, 27632, 1427, 2471, 769, 16180, 7, 32100, 4541, 8659, 7, 13, 359, 27632, 7, 32100, 3472, 3075, 32100, 3, 9, 1196, 16, 3, 26352, 4634, 32100, 825, 3472, 671, 738, 32100, 3, 22927, 11, 28911, 9551, 3040, 4732, 32100, 15309, 10301, 8563, 18712, 1]}
{"src": "towards content based relevance ranking for video search . <sep> most existing web video search engines index videos by file names , urls , and surrounding texts . these types of video metadata roughly describe the whole video in an abstract level without taking the rich content , such as semantic content descriptions and speech within the video , into consideration . therefore the relevance ranking of the video search results is not satisfactory as the details of video contents are ignored . in this paper we propose a novel relevance ranking approach for web based video search using both video metadata and the rich content contained in the videos . to leverage real content into ranking , the videos are segmented into shots , which are smaller and more semantic meaningful retrievable units , and then more detailed information of video content such as semantic descriptions and speech of each shots are used to improve the retrieval and ranking performance . with video metadata and content information of shots , we developed an integrated ranking approach , which achieves improved ranking performance . we also introduce machine learning into the ranking system , and compare them with <unk> ( information retrieval model ) based method . the evaluation results demonstrate the effectiveness of the proposed ranking methods . categories and subject descriptors h . <digit> . <digit> information storage and retrieval information search and retrieval search process general terms algorithms , performance , experimentation .", "tokenized_src": [1587, 738, 3, 390, 20208, 11592, 21, 671, 960, 3, 5, 32100, 167, 1895, 765, 671, 960, 7277, 5538, 3075, 57, 1042, 3056, 3, 6, 3, 16137, 7, 3, 6, 11, 3825, 14877, 3, 5, 175, 1308, 13, 671, 26686, 10209, 5530, 8, 829, 671, 16, 46, 9838, 593, 406, 838, 8, 2354, 738, 3, 6, 224, 38, 27632, 738, 15293, 11, 5023, 441, 8, 671, 3, 6, 139, 4587, 3, 5, 2459, 8, 20208, 11592, 13, 8, 671, 960, 772, 19, 59, 25140, 38, 8, 1030, 13, 671, 10223, 33, 14986, 3, 5, 16, 48, 1040, 62, 4230, 3, 9, 3714, 20208, 11592, 1295, 21, 765, 3, 390, 671, 960, 338, 321, 671, 26686, 11, 8, 2354, 738, 6966, 16, 8, 3075, 3, 5, 12, 11531, 490, 738, 139, 11592, 3, 6, 8, 3075, 33, 5508, 15, 26, 139, 6562, 3, 6, 84, 33, 2755, 11, 72, 27632, 7892, 24515, 179, 3173, 3, 6, 11, 258, 72, 3117, 251, 13, 671, 738, 224, 38, 27632, 15293, 11, 5023, 13, 284, 6562, 33, 261, 12, 1172, 8, 24515, 138, 11, 11592, 821, 3, 5, 28, 671, 26686, 11, 738, 251, 13, 6562, 3, 6, 62, 1597, 46, 4580, 11592, 1295, 3, 6, 84, 1984, 7, 3798, 11592, 821, 3, 5, 62, 92, 4277, 1437, 1036, 139, 8, 11592, 358, 3, 6, 11, 4048, 135, 28, 2, 41, 251, 24515, 138, 825, 3, 61, 3, 390, 1573, 3, 5, 8, 5002, 772, 5970, 8, 9570, 13, 8, 4382, 11592, 2254, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 960, 433, 879, 1353, 16783, 3, 6, 821, 3, 6, 5016, 257, 3, 5, 1], "trg": "content based relevance ranking;relevance ranking;video search;video search;video metadata;metadata;segmented;content information;integrated ranking;ranking method;machine learning model;ir model based ranking;learning based ranking;video segmentation;neutral network based ranking;content based ranking;content based approach;ir model;video index , relevance ranking;video retrieval", "tokenized_trg": [738, 3, 390, 20208, 11592, 32100, 20208, 11592, 32100, 671, 960, 32100, 671, 960, 32100, 671, 26686, 32100, 26686, 32100, 5508, 15, 26, 32100, 738, 251, 32100, 4580, 11592, 32100, 11592, 1573, 32100, 1437, 1036, 825, 32100, 3, 23, 52, 825, 3, 390, 11592, 32100, 1036, 3, 390, 11592, 32100, 671, 5508, 257, 32100, 7163, 1229, 3, 390, 11592, 32100, 738, 3, 390, 11592, 32100, 738, 3, 390, 1295, 32100, 3, 23, 52, 825, 32100, 671, 5538, 3, 6, 20208, 11592, 32100, 671, 24515, 138, 1]}
{"src": "towards reasonability properties for access control policy languages . <sep> the growing importance of access control has led to the definition of numerous languages for specifying policies . since these languages are based on different foundations , language users and designers would benefit from formal means to compare them . we present a set of properties that examine the behavior of policies under enlarged requests , policy growth , and policy decomposition . they therefore suggest whether policies written in these languages are easier or harder to reason about under various circumstances . we then evaluate multiple policy languages , including xacml and lithium , using these properties . categories and subject descriptors d . <digit> . <digit> operating systems security and protection access controls general terms languages , security", "tokenized_src": [1587, 1053, 2020, 2605, 21, 592, 610, 1291, 8024, 3, 5, 32100, 8, 1710, 3172, 13, 592, 610, 65, 2237, 12, 8, 4903, 13, 2724, 8024, 21, 11610, 53, 3101, 3, 5, 437, 175, 8024, 33, 3, 390, 30, 315, 3361, 7, 3, 6, 1612, 1105, 11, 6553, 133, 1656, 45, 4727, 598, 12, 4048, 135, 3, 5, 62, 915, 3, 9, 356, 13, 2605, 24, 5443, 8, 3889, 13, 3101, 365, 3, 30670, 6166, 3, 6, 1291, 1170, 3, 6, 11, 1291, 20, 287, 4718, 3, 5, 79, 2459, 3130, 823, 3101, 1545, 16, 175, 8024, 33, 1842, 42, 7501, 12, 1053, 81, 365, 796, 4616, 3, 5, 62, 258, 6825, 1317, 1291, 8024, 3, 6, 379, 3, 226, 9, 75, 51, 40, 11, 26780, 3, 6, 338, 175, 2605, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 2699, 1002, 1034, 11, 1711, 592, 7415, 879, 1353, 8024, 3, 6, 1034, 1], "trg": "reasonability property;properties;access control;access control;access control policy;policy;policy language;formalize;policy decomposition;multiple policy language;xacml;xacml;lithium;security;modularity;first order logic;policy combinator;policy languague;common features;policy language property;comtemporary policy", "tokenized_trg": [1053, 2020, 785, 32100, 2605, 32100, 592, 610, 32100, 592, 610, 32100, 592, 610, 1291, 32100, 1291, 32100, 1291, 1612, 32100, 4727, 1737, 32100, 1291, 20, 287, 4718, 32100, 1317, 1291, 1612, 32100, 3, 226, 9, 75, 51, 40, 32100, 3, 226, 9, 75, 51, 40, 32100, 26780, 32100, 1034, 32100, 15741, 485, 32100, 166, 455, 9769, 32100, 1291, 10374, 1016, 32100, 1291, 12142, 76, 9, 5398, 32100, 1017, 753, 32100, 1291, 1612, 785, 32100, 3, 287, 13089, 52, 1208, 1291, 1]}
{"src": "tracking dynamics of topic trends using a finite mixture model . <sep> in a wide range of business areas dealing with text data streams , including crm , knowledge management , and web monitoring services , it is an important issue to discover topic trends and analyze their dynamics in real time . specifically we consider the following three tasks in topic trend analysis <digit> ) topic structure identification identifying what kinds of main topics exist and how important they are , <digit> ) topic emergence detection detecting the emergence of a new topic and recognizing how it grows , <digit> ) topic characterization identifying the characteristics for each of main topics . for real topic analysis systems , we may require that these three tasks be performed in an on line fashion rather than in a retrospective way , and be dealt with in a single framework . this paper proposes a new topic analysis framework which satisfies this requirement from a unifying viewpoint that a topic structure is modeled using a finite mixture model and that any change of a topic trend is tracked by learning the finite mixture model dynamically . in this framework we propose the usage of a time stamp based discounting learning algorithm in order to realize real time topic structure identification . this enables tracking the topic structure adaptively by forgetting out of date statistics . further we apply the theory of dynamic model selection to detecting changes of main components in the finite mixture model in order to realize topic emergence detection . we demonstrate the effectiveness of our framework using real data collected at a help desk to show that we are able to track dynamics of topic trends in a timely fashion . categories and subject descriptors h . <digit> . <digit> database management database applications data mining", "tokenized_src": [6418, 14966, 13, 2859, 5001, 338, 3, 9, 361, 7980, 4989, 825, 3, 5, 32100, 16, 3, 9, 1148, 620, 13, 268, 844, 4945, 28, 1499, 331, 15841, 3, 6, 379, 5764, 51, 3, 6, 1103, 758, 3, 6, 11, 765, 4891, 364, 3, 6, 34, 19, 46, 359, 962, 12, 2928, 2859, 5001, 11, 8341, 70, 14966, 16, 490, 97, 3, 5, 3346, 62, 1099, 8, 826, 386, 4145, 16, 2859, 4166, 1693, 32101, 3, 61, 2859, 1809, 10356, 3, 9690, 125, 4217, 13, 711, 4064, 3223, 11, 149, 359, 79, 33, 3, 6, 32101, 3, 61, 2859, 3, 25120, 10664, 3, 29782, 8, 3, 25120, 13, 3, 9, 126, 2859, 11, 3, 22873, 149, 34, 13919, 3, 6, 32101, 3, 61, 2859, 3, 28561, 3, 9690, 8, 6803, 21, 284, 13, 711, 4064, 3, 5, 21, 490, 2859, 1693, 1002, 3, 6, 62, 164, 1457, 24, 175, 386, 4145, 36, 3032, 16, 46, 30, 689, 2934, 1066, 145, 16, 3, 9, 29825, 194, 3, 6, 11, 36, 15228, 28, 16, 3, 9, 712, 4732, 3, 5, 48, 1040, 4230, 7, 3, 9, 126, 2859, 1693, 4732, 84, 3, 9275, 7, 8549, 7, 48, 5971, 45, 3, 9, 73, 8587, 21897, 24, 3, 9, 2859, 1809, 19, 3, 25125, 338, 3, 9, 361, 7980, 4989, 825, 11, 24, 136, 483, 13, 3, 9, 2859, 4166, 19, 22679, 57, 1036, 8, 361, 7980, 4989, 825, 4896, 1427, 3, 5, 16, 48, 4732, 62, 4230, 8, 4742, 13, 3, 9, 97, 7334, 3, 390, 3898, 53, 1036, 12628, 16, 455, 12, 3384, 490, 97, 2859, 1809, 10356, 3, 5, 48, 3, 7161, 6418, 8, 2859, 1809, 25326, 120, 57, 2612, 1222, 91, 13, 833, 7475, 3, 5, 856, 62, 1581, 8, 4516, 13, 4896, 825, 1801, 12, 3, 29782, 1112, 13, 711, 3379, 16, 8, 361, 7980, 4989, 825, 16, 455, 12, 3384, 2859, 3, 25120, 10664, 3, 5, 62, 5970, 8, 9570, 13, 69, 4732, 338, 490, 331, 4759, 44, 3, 9, 199, 4808, 12, 504, 24, 62, 33, 3, 179, 12, 1463, 14966, 13, 2859, 5001, 16, 3, 9, 10063, 2934, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 3501, 1564, 331, 5558, 1], "trg": "tracking dynamics;topic trends;topic trend;finite mixture model;text data streams;crm;topic structure identification;topic structure identification;topic emergence detection;topic emergence detection;topic characterization;topic characterization;topic analysis;time stamp based discounting learning algorithm;dynamic model selection;model selection;data mining;text mining;time stamp based learning algorithm;topic detection and tracking;information gain", "tokenized_trg": [6418, 14966, 32100, 2859, 5001, 32100, 2859, 4166, 32100, 361, 7980, 4989, 825, 32100, 1499, 331, 15841, 32100, 5764, 51, 32100, 2859, 1809, 10356, 32100, 2859, 1809, 10356, 32100, 2859, 3, 25120, 10664, 32100, 2859, 3, 25120, 10664, 32100, 2859, 3, 28561, 32100, 2859, 3, 28561, 32100, 2859, 1693, 32100, 97, 7334, 3, 390, 3898, 53, 1036, 12628, 32100, 4896, 825, 1801, 32100, 825, 1801, 32100, 331, 5558, 32100, 1499, 5558, 32100, 97, 7334, 3, 390, 1036, 12628, 32100, 2859, 10664, 11, 6418, 32100, 251, 2485, 1]}
{"src": "a case study on how to manage the theft of information . <sep> this paper shows the importance that management plays in the protection of information and in the planning to handle a security breach when a theft of information happens . recent thefts of information that have hit major companies have caused concern . these thefts were caused by companies ' inability to determine risks associated with the protection of their data and these companies lack of planning to properly manage a security breach when it occurs . it is becoming necessary , if not mandatory , for organizations to perform ongoing risk analysis to protect their systems . organizations need to realize that the theft of information is a management issue as well as a technology one , and that these recent security breaches were mainly caused by business decisions by management and not a lack of technology . categories and subject descriptors c . <digit> . <digit> computer communication networks general security and protection . k . <digit> . <digit> computers and education computer and information science education curriculum , information systems education . k . <digit> . <digit> , . <digit> , . <digit> computers and society . <digit> public policy issues abuse and crime involving computers , computer related health issues , ethics , intellectual property right , privacy . . <digit> social issues abuse and crime involving computers . . <digit> electronic commerce security . k . <digit> . <digit> management of computing and information systems security and protection authentication , invasive software , unauthorized access . general terms management , security , human factors , standardization , legal aspects .", "tokenized_src": [3, 9, 495, 810, 30, 149, 12, 1865, 8, 14806, 13, 251, 3, 5, 32100, 48, 1040, 1267, 8, 3172, 24, 758, 4805, 16, 8, 1711, 13, 251, 11, 16, 8, 1459, 12, 2174, 3, 9, 1034, 10564, 116, 3, 9, 14806, 13, 251, 2906, 3, 5, 1100, 14806, 7, 13, 251, 24, 43, 1560, 779, 688, 43, 2953, 2410, 3, 5, 175, 14806, 7, 130, 2953, 57, 688, 3, 31, 16, 2020, 12, 2082, 5217, 1968, 28, 8, 1711, 13, 70, 331, 11, 175, 688, 2136, 13, 1459, 12, 3085, 1865, 3, 9, 1034, 10564, 116, 34, 6986, 3, 5, 34, 19, 2852, 1316, 3, 6, 3, 99, 59, 13488, 3, 6, 21, 2371, 12, 1912, 4912, 1020, 1693, 12, 1822, 70, 1002, 3, 5, 2371, 174, 12, 3384, 24, 8, 14806, 13, 251, 19, 3, 9, 758, 962, 38, 168, 38, 3, 9, 748, 80, 3, 6, 11, 24, 175, 1100, 1034, 27358, 130, 3, 4894, 2953, 57, 268, 3055, 57, 758, 11, 59, 3, 9, 2136, 13, 748, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 1218, 1901, 5275, 879, 1034, 11, 1711, 3, 5, 3, 157, 3, 5, 32101, 3, 5, 32101, 7827, 11, 1073, 1218, 11, 251, 2056, 1073, 7850, 3, 6, 251, 1002, 1073, 3, 5, 3, 157, 3, 5, 32101, 3, 5, 32101, 3, 6, 3, 5, 32101, 3, 6, 3, 5, 32101, 7827, 11, 2710, 3, 5, 32101, 452, 1291, 807, 5384, 11, 5447, 3, 6475, 7827, 3, 6, 1218, 1341, 533, 807, 3, 6, 16083, 3, 6, 8445, 785, 269, 3, 6, 4570, 3, 5, 3, 5, 32101, 569, 807, 5384, 11, 5447, 3, 6475, 7827, 3, 5, 3, 5, 32101, 3031, 12794, 1034, 3, 5, 3, 157, 3, 5, 32101, 3, 5, 32101, 758, 13, 10937, 11, 251, 1002, 1034, 11, 1711, 20188, 3, 6, 3, 15267, 889, 3, 6, 3, 22556, 592, 3, 5, 879, 1353, 758, 3, 6, 1034, 3, 6, 936, 2580, 3, 6, 1068, 1707, 3, 6, 1281, 3149, 3, 5, 1], "trg": "theft of information;security breach;risk analysis;management issue;information system;privacy;human factor;security management;information security;encryption;cyber crime;information security;confidential information;data protection;cases of information theft;business practises and policy;incident response plan;information security management;data protection procedure;personal information", "tokenized_trg": [14806, 13, 251, 32100, 1034, 10564, 32100, 1020, 1693, 32100, 758, 962, 32100, 251, 358, 32100, 4570, 32100, 936, 2945, 32100, 1034, 758, 32100, 251, 1034, 32100, 19849, 32100, 9738, 5447, 32100, 251, 1034, 32100, 11602, 251, 32100, 331, 1711, 32100, 1488, 13, 251, 14806, 32100, 268, 25420, 7, 11, 1291, 32100, 5415, 1773, 515, 32100, 251, 1034, 758, 32100, 331, 1711, 3979, 32100, 525, 251, 1]}
{"src": "a survey of collaborative information seeking practices of academic researchers . <sep> information seeking and management practices are an integral aspect of people ' s daily work . however , we still have little understanding of collaboration in the information seeking process . through a survey of collaborative information seeking practices of academic researchers , we found that researchers reported that ( <digit> ) the lack of expertise is the primary reason that they collaborate when seeking information ( <digit> ) traditional methods , including face to face , phone , and email are the preferred communication mediums for collaboration and ( <digit> ) collaborative information seeking activities are usually successful and more useful than individually seeking information . these results begin to highlight the important role that collaborative information seeking plays in daily work . categories and subject descriptors h . <digit> . <digit> information search and retrieval general terms human factors", "tokenized_src": [3, 9, 3719, 13, 9642, 251, 3945, 2869, 13, 2705, 4768, 3, 5, 32100, 251, 3945, 11, 758, 2869, 33, 46, 9074, 2663, 13, 151, 3, 31, 3, 7, 1444, 161, 3, 5, 983, 3, 6, 62, 341, 43, 385, 1705, 13, 3561, 16, 8, 251, 3945, 433, 3, 5, 190, 3, 9, 3719, 13, 9642, 251, 3945, 2869, 13, 2705, 4768, 3, 6, 62, 435, 24, 4768, 2196, 24, 41, 32101, 3, 61, 8, 2136, 13, 2980, 19, 8, 2329, 1053, 24, 79, 11194, 116, 3945, 251, 41, 32101, 3, 61, 1435, 2254, 3, 6, 379, 522, 12, 522, 3, 6, 951, 3, 6, 11, 791, 33, 8, 6241, 1901, 2768, 7, 21, 3561, 11, 41, 32101, 3, 61, 9642, 251, 3945, 1087, 33, 1086, 1574, 11, 72, 1934, 145, 12011, 3945, 251, 3, 5, 175, 772, 1731, 12, 6481, 8, 359, 1075, 24, 9642, 251, 3945, 4805, 16, 1444, 161, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 960, 11, 24515, 138, 879, 1353, 936, 2580, 1], "trg": "survey;collaborative information seeking;collaboration;information seeking;academic researchers;group work;communication media", "tokenized_trg": [3719, 32100, 9642, 251, 3945, 32100, 3561, 32100, 251, 3945, 32100, 2705, 4768, 32100, 563, 161, 32100, 1901, 783, 1]}
{"src": "transactional agent model for fault tolerant object systems . <sep> a transactional agent is a mobile agent which manipulates objects in multiple computers by autonomously finding a way to visit the computers . the transactional agent commits only if its commitment condition like atomicity is satisfied in presence of faults of computers . on leaving a computer , an agent creates a surrogate agent which holds objects manipulated . a surrogate can recreate a new incarnation of the agent if the agent itself is faulty . if a destination computer is faulty , the transactional agent finds another operational computer to visit . after visiting computers , a transactional agent makes a destination on commitment according to its commitment condition . we discuss design and implementation of the transactional agent which is tolerant of computer faults . categories and subject descriptors h . <digit> . <digit> systems transaction processing general terms algorithms , reliability", "tokenized_src": [5878, 138, 3102, 825, 21, 7828, 3, 23267, 3735, 1002, 3, 5, 32100, 3, 9, 5878, 138, 3102, 19, 3, 9, 1156, 3102, 84, 23307, 7, 4820, 16, 1317, 7827, 57, 21286, 120, 2342, 3, 9, 194, 12, 719, 8, 7827, 3, 5, 8, 5878, 138, 3102, 10042, 7, 163, 3, 99, 165, 3148, 1706, 114, 3, 20844, 485, 19, 7035, 16, 3053, 13, 7828, 7, 13, 7827, 3, 5, 30, 3140, 3, 9, 1218, 3, 6, 46, 3102, 482, 7, 3, 9, 244, 3822, 342, 3102, 84, 4532, 4820, 3, 31968, 3, 5, 3, 9, 244, 3822, 342, 54, 23952, 3, 9, 126, 3, 18860, 257, 13, 8, 3102, 3, 99, 8, 3102, 1402, 19, 3, 26545, 3, 5, 3, 99, 3, 9, 3954, 1218, 19, 3, 26545, 3, 6, 8, 5878, 138, 3102, 12902, 430, 7763, 1218, 12, 719, 3, 5, 227, 3644, 7827, 3, 6, 3, 9, 5878, 138, 3102, 656, 3, 9, 3954, 30, 3148, 1315, 12, 165, 3148, 1706, 3, 5, 62, 2497, 408, 11, 4432, 13, 8, 5878, 138, 3102, 84, 19, 3, 23267, 13, 1218, 7828, 7, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 1002, 5878, 3026, 879, 1353, 16783, 3, 6, 10581, 1], "trg": "transactional agent;transaction;fault tolerant;fault tolerant;mobile agent;mobile agent;surrogate agent;computer fault;transaction processing;acid transaction;fault tolerant agent", "tokenized_trg": [5878, 138, 3102, 32100, 5878, 32100, 7828, 3, 23267, 32100, 7828, 3, 23267, 32100, 1156, 3102, 32100, 1156, 3102, 32100, 244, 3822, 342, 3102, 32100, 1218, 7828, 32100, 5878, 3026, 32100, 3562, 5878, 32100, 7828, 3, 23267, 3102, 1]}
{"src": "translating unknown cross lingual queries in digital libraries using a web based approach . <sep> users ' cross lingual queries to a digital library system might be short and not included in a common translation dictionary ( unknown terms ) . in this paper , we investigate the feasibility of exploiting the web as the corpus source to translate unknown query terms for cross language information retrieval ( clir ) in digital libraries . we propose a web based term translation approach to determine effective translations for unknown query terms by mining bilingual search result pages obtained from a real web search engine . this approach can enhance the construction of a domain specific bilingual lexicon and benefit clir services in a digital library that only has monolingual document collections . very promising results have been obtained in generating effective translation equivalents for many unknown terms , including proper nouns , technical terms and web query terms . categories and subject descriptors h . <digit> . <digit> information storage and retrieval information search and retrieval h . <digit> . <digit> information storage and retrieval digital libraries . general terms algorithms , experimentation , performance", "tokenized_src": [31328, 7752, 2269, 3, 25207, 13154, 16, 1125, 12256, 338, 3, 9, 765, 3, 390, 1295, 3, 5, 32100, 1105, 3, 31, 2269, 3, 25207, 13154, 12, 3, 9, 1125, 3595, 358, 429, 36, 710, 11, 59, 1285, 16, 3, 9, 1017, 7314, 24297, 41, 7752, 1353, 3, 61, 3, 5, 16, 48, 1040, 3, 6, 62, 9127, 8, 28297, 13, 9248, 53, 8, 765, 38, 8, 11736, 302, 1391, 12, 13959, 7752, 11417, 1353, 21, 2269, 1612, 251, 24515, 138, 41, 3, 14758, 52, 3, 61, 16, 1125, 12256, 3, 5, 62, 4230, 3, 9, 765, 3, 390, 1657, 7314, 1295, 12, 2082, 1231, 7314, 7, 21, 7752, 11417, 1353, 57, 5558, 30521, 960, 741, 1688, 5105, 45, 3, 9, 490, 765, 960, 1948, 3, 5, 48, 1295, 54, 3391, 8, 1449, 13, 3, 9, 3303, 806, 30521, 3, 30949, 106, 11, 1656, 3, 14758, 52, 364, 16, 3, 9, 1125, 3595, 24, 163, 65, 7414, 25207, 1708, 8274, 3, 5, 182, 12894, 772, 43, 118, 5105, 16, 3, 11600, 1231, 7314, 7072, 7, 21, 186, 7752, 1353, 3, 6, 379, 2757, 150, 202, 7, 3, 6, 2268, 1353, 11, 765, 11417, 1353, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 1125, 12256, 3, 5, 879, 1353, 16783, 3, 6, 5016, 257, 3, 6, 821, 1], "trg": "unknown cross lingual queries;digital library;digital libraries;translation dictionary;cross language information retrieval;web based term translation approach;term translation;clir services;information search and retrieval;term extraction;bilingual lexicon construction;pat tree based local maxima algorithm;web mining;context vector analysis", "tokenized_trg": [7752, 2269, 3, 25207, 13154, 32100, 1125, 3595, 32100, 1125, 12256, 32100, 7314, 24297, 32100, 2269, 1612, 251, 24515, 138, 32100, 765, 3, 390, 1657, 7314, 1295, 32100, 1657, 7314, 32100, 3, 14758, 52, 364, 32100, 251, 960, 11, 24515, 138, 32100, 1657, 16629, 32100, 30521, 3, 30949, 106, 1449, 32100, 6234, 2195, 3, 390, 415, 7340, 9, 12628, 32100, 765, 5558, 32100, 2625, 12938, 1693, 1]}
{"src": "typecase a design pattern for type indexed functions . <sep> a type indexed function is a function that is defined for each member of some family of types . haskell ' s type class mechanism provides collections of open type indexed functions , in which the indexing family can be extended by defining a new type class instance but the collection of functions is fixed . the purpose of this paper is to present typecase a design pattern that allows the definition of closed type indexed functions , in which the index family is fixed but the collection of functions is extensible . it is inspired by cheney and hinze ' s work on lightweight approaches to generic programming . we generalise their techniques as a design pattern . furthermore , we show that type indexed functions with type indexed types , and consequently generic functions with generic types , can also be encoded in a lightweight manner , thereby overcoming one of the main limitations of the lightweight approaches . categories and subject descriptors d . <digit> . <digit> programming languages language constructs and features general terms languages", "tokenized_src": [686, 6701, 3, 9, 408, 3275, 21, 686, 3, 30564, 3621, 3, 5, 32100, 3, 9, 686, 3, 30564, 1681, 19, 3, 9, 1681, 24, 19, 4802, 21, 284, 1144, 13, 128, 384, 13, 1308, 3, 5, 65, 5768, 40, 3, 31, 3, 7, 686, 853, 8557, 795, 8274, 13, 539, 686, 3, 30564, 3621, 3, 6, 16, 84, 8, 5538, 53, 384, 54, 36, 4760, 57, 3, 16123, 3, 9, 126, 686, 853, 3421, 68, 8, 1232, 13, 3621, 19, 3599, 3, 5, 8, 1730, 13, 48, 1040, 19, 12, 915, 686, 6701, 3, 9, 408, 3275, 24, 1250, 8, 4903, 13, 3168, 686, 3, 30564, 3621, 3, 6, 16, 84, 8, 5538, 384, 19, 3599, 68, 8, 1232, 13, 3621, 19, 28659, 2296, 3, 5, 34, 19, 3555, 57, 3, 1033, 3186, 11, 3811, 776, 3, 31, 3, 7, 161, 30, 10182, 6315, 12, 8165, 6020, 3, 5, 62, 879, 159, 15, 70, 2097, 38, 3, 9, 408, 3275, 3, 5, 856, 3706, 3, 6, 62, 504, 24, 686, 3, 30564, 3621, 28, 686, 3, 30564, 1308, 3, 6, 11, 21612, 120, 8165, 3621, 28, 8165, 1308, 3, 6, 54, 92, 36, 23734, 26, 16, 3, 9, 10182, 3107, 3, 6, 3, 12550, 3, 29297, 80, 13, 8, 711, 10005, 13, 8, 10182, 6315, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 6020, 8024, 1612, 6774, 7, 11, 753, 879, 1353, 8024, 1], "trg": "type indexed functions;type classes;generic programming", "tokenized_trg": [686, 3, 30564, 3621, 32100, 686, 2287, 32100, 8165, 6020, 1]}
{"src": "uml based service robot software development a case study . <sep> the research field of intelligent service robots , which has become more and more popular over the last years , covers a wide range of applications from climbing machines for cleaning large storefronts to robotic assistance for disabled or elderly people . when developing service robot software , it is a challenging problem to design the robot architecture by carefully considering user needs and requirements , implement robot application components based on the architecture , and integrate these components in a systematic and comprehensive way for maintainability and reusability . furthermore , it becomes more difficult to communicate among development teams and with others when many engineers from different teams participate in developing the service robot . to solve these problems , we applied the comet design method , which uses the industry standard uml notation , to developing the software of an intelligent service robot for the elderly , called t rot , under development at center for intelligent robotics ( cir ) . in this paper , we discuss our experiences with the project in which we successfully addressed these problems and developed the autonomous navigation system of the robot with the comet uml method . categories and subject descriptors d . <digit> . <digit> software engineering design tools and techniques object oriented design methods general terms design", "tokenized_src": [561, 40, 3, 390, 313, 7567, 889, 606, 3, 9, 495, 810, 3, 5, 32100, 8, 585, 1057, 13, 7951, 313, 7567, 7, 3, 6, 84, 65, 582, 72, 11, 72, 1012, 147, 8, 336, 203, 3, 6, 3792, 3, 9, 1148, 620, 13, 1564, 45, 11908, 4096, 21, 2327, 508, 1078, 6849, 7, 12, 20407, 2927, 21, 10860, 42, 12766, 151, 3, 5, 116, 2421, 313, 7567, 889, 3, 6, 34, 19, 3, 9, 4421, 682, 12, 408, 8, 7567, 4648, 57, 4321, 4014, 1139, 523, 11, 1502, 3, 6, 4028, 7567, 917, 3379, 3, 390, 30, 8, 4648, 3, 6, 11, 9162, 175, 3379, 16, 3, 9, 20036, 11, 3452, 194, 21, 1961, 2020, 11, 3, 60, 302, 2020, 3, 5, 856, 3706, 3, 6, 34, 2992, 72, 1256, 12, 4521, 859, 606, 2323, 11, 28, 717, 116, 186, 8702, 45, 315, 2323, 3716, 16, 2421, 8, 313, 7567, 3, 5, 12, 4602, 175, 982, 3, 6, 62, 2930, 8, 369, 17, 408, 1573, 3, 6, 84, 2284, 8, 681, 1068, 561, 40, 59, 257, 3, 6, 12, 2421, 8, 889, 13, 46, 7951, 313, 7567, 21, 8, 12766, 3, 6, 718, 3, 17, 3, 2719, 3, 6, 365, 606, 44, 1530, 21, 7951, 20407, 7, 41, 3, 15357, 3, 61, 3, 5, 16, 48, 1040, 3, 6, 62, 2497, 69, 2704, 28, 8, 516, 16, 84, 62, 4234, 8705, 175, 982, 11, 1597, 8, 21286, 8789, 358, 13, 8, 7567, 28, 8, 369, 17, 561, 40, 1573, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 889, 3867, 408, 1339, 11, 2097, 3735, 3, 9442, 408, 2254, 879, 1353, 408, 1], "trg": "uml;software engineering;service robot development;object oriented analysis and design methods", "tokenized_trg": [561, 40, 32100, 889, 3867, 32100, 313, 7567, 606, 32100, 3735, 3, 9442, 1693, 11, 408, 2254, 1]}
{"src": "unified utility maximization framework for resource selection . <sep> this paper presents a unified utility framework for resource selection of distributed text information retrieval . this new framework shows an efficient and effective way to infer the probabilities of relevance of all the documents across the text databases . with the estimated relevance information , resource selection can be made by explicitly optimizing the goals of different applications . specifically , when used for database recommendation , the selection is optimized for the goal of high recall ( include as many relevant documents as possible in the selected databases ) when used for distributed document retrieval , the selection targets the high precision goal ( high precision in the final merged list of documents ) . this new model provides a more solid framework for distributed information retrieval . empirical studies show that it is at least as effective as other state of the art algorithms . categories and subject descriptors h . <digit> . <digit> information search and retrieval general terms algorithms", "tokenized_src": [3, 22927, 6637, 7340, 1707, 4732, 21, 3487, 1801, 3, 5, 32100, 48, 1040, 6621, 3, 9, 3, 22927, 6637, 4732, 21, 3487, 1801, 13, 8308, 1499, 251, 24515, 138, 3, 5, 48, 126, 4732, 1267, 46, 2918, 11, 1231, 194, 12, 16, 1010, 8, 9551, 2197, 13, 20208, 13, 66, 8, 2691, 640, 8, 1499, 16961, 3, 5, 28, 8, 5861, 20208, 251, 3, 6, 3487, 1801, 54, 36, 263, 57, 21119, 19769, 53, 8, 1766, 13, 315, 1564, 3, 5, 3346, 3, 6, 116, 261, 21, 3501, 10919, 3, 6, 8, 1801, 19, 18149, 21, 8, 1288, 13, 306, 7881, 41, 560, 38, 186, 2193, 2691, 38, 487, 16, 8, 2639, 16961, 3, 61, 116, 261, 21, 8308, 1708, 24515, 138, 3, 6, 8, 1801, 8874, 8, 306, 11723, 1288, 41, 306, 11723, 16, 8, 804, 3, 21726, 570, 13, 2691, 3, 61, 3, 5, 48, 126, 825, 795, 3, 9, 72, 1973, 4732, 21, 8308, 251, 24515, 138, 3, 5, 23941, 2116, 504, 24, 34, 19, 44, 709, 38, 1231, 38, 119, 538, 13, 8, 768, 16783, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 960, 11, 24515, 138, 879, 1353, 16783, 1], "trg": "resource selection;distributed information retrieval", "tokenized_trg": [3487, 1801, 32100, 8308, 251, 24515, 138, 1]}
{"src": "unwanted traffic in 3g networks . <sep> the presence of unwanted ( or background ) traffic in the internet is a well known fact . in principle any network that has been engineered without taking its presence into account might experience troubles during periods of massive exposure to unwanted traffic , e . g . during large scale infections . a concrete example was provided by the spreading of code red ii in <digit> , which caused several routers crashes worldwide . similar events might take place in 3g networks as well , with further potential complications arising from their high functional complexity and the scarcity of radio resources . for example , under certain hypothetical network configuration settings unwanted traffic , and specifically scanning traffic from infected mobile stations , can cause large scale wastage of logical resources , and in extreme cases even starvation . unwanted traffic is present nowdays also in gprs umts , mainly due to the widespread use of 3g connect cards for laptops . we urge the research community and network operators to consider the issue of 3g robustness to unwanted traffic as a prominent research area . categories and subject descriptors c . <digit> . <digit> network operations public networks , network monitoring . general terms security , reliability , measurement .", "tokenized_src": [15230, 2117, 16, 220, 122, 5275, 3, 5, 32100, 8, 3053, 13, 15230, 41, 42, 2458, 3, 61, 2117, 16, 8, 1396, 19, 3, 9, 168, 801, 685, 3, 5, 16, 8454, 136, 1229, 24, 65, 118, 1948, 3737, 406, 838, 165, 3053, 139, 905, 429, 351, 16973, 383, 8811, 13, 3805, 4773, 12, 15230, 2117, 3, 6, 3, 15, 3, 5, 3, 122, 3, 5, 383, 508, 2643, 13315, 3, 5, 3, 9, 4427, 677, 47, 937, 57, 8, 16436, 13, 1081, 1131, 3, 23, 23, 16, 32101, 3, 6, 84, 2953, 633, 13696, 7, 22298, 4388, 3, 5, 1126, 984, 429, 240, 286, 16, 220, 122, 5275, 38, 168, 3, 6, 28, 856, 1055, 14497, 3, 14739, 45, 70, 306, 5014, 11641, 11, 8, 6541, 6726, 13, 2252, 1438, 3, 5, 21, 677, 3, 6, 365, 824, 31754, 1229, 5298, 3803, 15230, 2117, 3, 6, 11, 3346, 18269, 2117, 45, 16, 89, 7633, 1156, 6991, 3, 6, 54, 1137, 508, 2643, 47, 6505, 13, 3, 6207, 1438, 3, 6, 11, 16, 5272, 1488, 237, 2213, 208, 257, 3, 5, 15230, 2117, 19, 915, 230, 1135, 7, 92, 16, 3, 122, 102, 52, 7, 561, 17, 7, 3, 6, 3, 4894, 788, 12, 8, 14047, 169, 13, 220, 122, 1979, 2190, 21, 4544, 7, 3, 5, 62, 11872, 8, 585, 573, 11, 1229, 9490, 12, 1099, 8, 962, 13, 220, 122, 6268, 655, 12, 15230, 2117, 38, 3, 9, 8304, 585, 616, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 1229, 2673, 452, 5275, 3, 6, 1229, 4891, 3, 5, 879, 1353, 1034, 3, 6, 10581, 3, 6, 9753, 3, 5, 1], "trg": "unwanted traffic;3g;cellular networks", "tokenized_trg": [15230, 2117, 32100, 220, 122, 32100, 3, 10791, 5275, 1]}
{"src": "use of contextualized attention metadata for ranking and recommending learning objects . <sep> the tools used to search and find learning objects in different systems do not provide a meaningful and scalable way to rank or recommend learning material . this work propose and detail the use of contextual attention metadata , gathered from the different tools used in the lifecycle of the learning object , to create ranking and recommending metrics to improve the user experience . four types of metrics are detailed link analysis ranking , similarity recommendation , personalized ranking and contextual recommendation . while designed for learning objects , it is shown that these metrics could also be applied to rank and recommend other types of reusable components like software libraries . categories and subject descriptors h . <digit> . <digit> information storage and retrieval information search and retrieval , information filtering , relevance feedback . general terms algorithms , measurement , design , human factors , standardization", "tokenized_src": [169, 13, 28131, 1601, 1388, 26686, 21, 11592, 11, 3, 29288, 1036, 4820, 3, 5, 32100, 8, 1339, 261, 12, 960, 11, 253, 1036, 4820, 16, 315, 1002, 103, 59, 370, 3, 9, 7892, 11, 3, 24079, 194, 12, 11003, 42, 1568, 1036, 1037, 3, 5, 48, 161, 4230, 11, 2736, 8, 169, 13, 28131, 1388, 26686, 3, 6, 3, 9094, 45, 8, 315, 1339, 261, 16, 8, 280, 10136, 13, 8, 1036, 3735, 3, 6, 12, 482, 11592, 11, 3, 29288, 15905, 12, 1172, 8, 1139, 351, 3, 5, 662, 1308, 13, 15905, 33, 3117, 1309, 1693, 11592, 3, 6, 1126, 485, 10919, 3, 6, 9354, 11592, 11, 28131, 10919, 3, 5, 298, 876, 21, 1036, 4820, 3, 6, 34, 19, 2008, 24, 175, 15905, 228, 92, 36, 2930, 12, 11003, 11, 1568, 119, 1308, 13, 3, 28147, 3379, 114, 889, 12256, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 3, 6, 251, 4191, 53, 3, 6, 20208, 3160, 3, 5, 879, 1353, 16783, 3, 6, 9753, 3, 6, 408, 3, 6, 936, 2580, 3, 6, 1068, 1707, 1], "trg": "attention metadata;ranking;recommending;learning objects", "tokenized_trg": [1388, 26686, 32100, 11592, 32100, 3, 29288, 32100, 1036, 4820, 1]}
{"src": "use of relative code churn measures to predict system defect density . <sep> software systems evolve over time due to changes in requirements , optimization of code , fixes for security and reliability bugs etc . code churn , which measures the changes made to a component over a period of time , quantifies the extent of this change . we present a technique for early prediction of system defect density using a set of relative code churn measures that relate the amount of churn to other variables such as component size and the temporal extent of churn . using statistical regression models , we show that while absolute measures of code churn are poor predictors of defect density , our set of relative measures of code churn is highly predictive of defect density . a case study performed on windows server <digit> indicates the validity of the relative code churn measures as early indicators of system defect density . furthermore , our code churn metric suite is able to discriminate between fault and not fault prone binaries with an accuracy of <digit> . <digit> percent . categories and subject descriptors d . <digit> . <digit> software engineering distribution , maintenance , and enhancement , version control . d . <digit> . <digit> software engineering metrics performance measures , process metrics , product metrics . general terms measurement , design , reliability .", "tokenized_src": [169, 13, 5237, 1081, 3, 524, 450, 29, 3629, 12, 9689, 358, 15595, 11048, 3, 5, 32100, 889, 1002, 15824, 147, 97, 788, 12, 1112, 16, 1502, 3, 6, 11295, 13, 1081, 3, 6, 19674, 21, 1034, 11, 10581, 13348, 672, 3, 5, 1081, 3, 524, 450, 29, 3, 6, 84, 3629, 8, 1112, 263, 12, 3, 9, 3876, 147, 3, 9, 1059, 13, 97, 3, 6, 13500, 15821, 8, 5996, 13, 48, 483, 3, 5, 62, 915, 3, 9, 3317, 21, 778, 21332, 13, 358, 15595, 11048, 338, 3, 9, 356, 13, 5237, 1081, 3, 524, 450, 29, 3629, 24, 9098, 8, 866, 13, 3, 524, 450, 29, 12, 119, 11445, 224, 38, 3876, 812, 11, 8, 10301, 8563, 5996, 13, 3, 524, 450, 29, 3, 5, 338, 11775, 26625, 2250, 3, 6, 62, 504, 24, 298, 6097, 3629, 13, 1081, 3, 524, 450, 29, 33, 2714, 9689, 127, 7, 13, 15595, 11048, 3, 6, 69, 356, 13, 5237, 3629, 13, 1081, 3, 524, 450, 29, 19, 1385, 27875, 13, 15595, 11048, 3, 5, 3, 9, 495, 810, 3032, 30, 3196, 2460, 32101, 9379, 8, 21264, 13, 8, 5237, 1081, 3, 524, 450, 29, 3629, 38, 778, 15600, 13, 358, 15595, 11048, 3, 5, 856, 3706, 3, 6, 69, 1081, 3, 524, 450, 29, 3, 7959, 3132, 19, 3, 179, 12, 9192, 342, 344, 7828, 11, 59, 7828, 3, 15897, 2701, 5414, 28, 46, 7452, 13, 32101, 3, 5, 32101, 1093, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 889, 3867, 3438, 3, 6, 2453, 3, 6, 11, 15220, 3, 6, 988, 610, 3, 5, 3, 26, 3, 5, 32101, 3, 5, 32101, 889, 3867, 15905, 821, 3629, 3, 6, 433, 15905, 3, 6, 556, 15905, 3, 5, 879, 1353, 9753, 3, 6, 408, 3, 6, 10581, 3, 5, 1], "trg": "relative code churn;defect density;fault proneness;multiple regression;principal component analysis", "tokenized_trg": [5237, 1081, 3, 524, 450, 29, 32100, 15595, 11048, 32100, 7828, 3, 15897, 655, 32100, 1317, 26625, 32100, 3218, 3876, 1693, 1]}
{"src": "using case based reasoning in traffic pattern recognition for best resource management in 3g networks . <sep> with the underlying w cdma technique in 3g networks , resource management is a very significant issue as it can directly influence the system capacity and also lead to system qos . however , the resource can be dynamically managed in order to maintain the qos according to the sla . in this paper , cbr is used as part of an intelligent based agent management system . it uses information from previously managed situations to maintain the qos in order to meet the sla . the results illustrate the performance of an agent in traffic pattern recognition in order to identify the specific type of problem and finally propose the right solution . categories and subject descriptors c . <digit> . <digit> computer communication networks network operations network management , network monitoring . i . <digit> . <digit> simulation and modeling simulation output analysis . general terms algorithms , management , performance", "tokenized_src": [338, 495, 3, 390, 20893, 16, 2117, 3275, 5786, 21, 200, 3487, 758, 16, 220, 122, 5275, 3, 5, 32100, 28, 8, 3, 10067, 3, 210, 3, 75, 26, 51, 9, 3317, 16, 220, 122, 5275, 3, 6, 3487, 758, 19, 3, 9, 182, 1516, 962, 38, 34, 54, 1461, 2860, 8, 358, 2614, 11, 92, 991, 12, 358, 3, 1824, 32, 7, 3, 5, 983, 3, 6, 8, 3487, 54, 36, 4896, 1427, 3030, 16, 455, 12, 1961, 8, 3, 1824, 32, 7, 1315, 12, 8, 3, 7, 521, 3, 5, 16, 48, 1040, 3, 6, 3, 75, 115, 52, 19, 261, 38, 294, 13, 46, 7951, 3, 390, 3102, 758, 358, 3, 5, 34, 2284, 251, 45, 3150, 3030, 4147, 12, 1961, 8, 3, 1824, 32, 7, 16, 455, 12, 942, 8, 3, 7, 521, 3, 5, 8, 772, 11485, 8, 821, 13, 46, 3102, 16, 2117, 3275, 5786, 16, 455, 12, 2862, 8, 806, 686, 13, 682, 11, 2031, 4230, 8, 269, 1127, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 1218, 1901, 5275, 1229, 2673, 1229, 758, 3, 6, 1229, 4891, 3, 5, 3, 23, 3, 5, 32101, 3, 5, 32101, 11108, 11, 15309, 11108, 3911, 1693, 3, 5, 879, 1353, 16783, 3, 6, 758, 3, 6, 821, 1], "trg": "service level agreement;intelligent agent and case based reasoning;3g resource management", "tokenized_trg": [313, 593, 2791, 32100, 7951, 3102, 11, 495, 3, 390, 20893, 32100, 220, 122, 3487, 758, 1]}
{"src": "using roles and business objects to model and understand business processes . <sep> business process modeling focus on describing how activities interact with other business objects while sustaining the organization ' s strategy . business objects are object oriented representations of organizational concepts , such as resources and actors , which collaborate with one another in order to achieve business goals . these objects exhibit different behavior according to each specific collaboration context . this means the perception of a business object depends on its collaborations with other objects . business process modeling techniques do not clearly separate the multiple collaborative aspects of a business object from its internal aspects , making it difficult to understand objects which are used in different contexts , thus hindering reuse . to cope with such issues , this paper proposes using role modeling as a separation of concerns mechanism to increase the understandability and reusability of business process models . the approach divides a business process model into a business object model and a role model . the business object models deals with specifying the structure and intrinsic behavior of business objects while the role model specifies its collaborative aspects . categories and subject descriptors d . <digit> . <digit> management software process models d . <digit> . <digit> design methodologies h . <digit> . <digit> models and principles general", "tokenized_src": [338, 6270, 11, 268, 4820, 12, 825, 11, 734, 268, 2842, 3, 5, 32100, 268, 433, 15309, 992, 30, 3, 16012, 149, 1087, 6815, 28, 119, 268, 4820, 298, 3, 28523, 8, 1470, 3, 31, 3, 7, 1998, 3, 5, 268, 4820, 33, 3735, 3, 9442, 6497, 7, 13, 13477, 6085, 3, 6, 224, 38, 1438, 11, 10485, 3, 6, 84, 11194, 28, 80, 430, 16, 455, 12, 1984, 268, 1766, 3, 5, 175, 4820, 6981, 315, 3889, 1315, 12, 284, 806, 3561, 2625, 3, 5, 48, 598, 8, 8136, 13, 3, 9, 268, 3735, 5619, 30, 165, 3561, 7, 28, 119, 4820, 3, 5, 268, 433, 15309, 2097, 103, 59, 3133, 2450, 8, 1317, 9642, 3149, 13, 3, 9, 268, 3735, 45, 165, 3224, 3149, 3, 6, 492, 34, 1256, 12, 734, 4820, 84, 33, 261, 16, 315, 2625, 7, 3, 6, 2932, 22190, 53, 15677, 3, 5, 12, 14331, 28, 224, 807, 3, 6, 48, 1040, 4230, 7, 338, 1075, 15309, 38, 3, 9, 13608, 13, 3315, 8557, 12, 993, 8, 734, 2020, 11, 3, 60, 302, 2020, 13, 268, 433, 2250, 3, 5, 8, 1295, 14514, 7, 3, 9, 268, 433, 825, 139, 3, 9, 268, 3735, 825, 11, 3, 9, 1075, 825, 3, 5, 8, 268, 3735, 2250, 3694, 28, 11610, 53, 8, 1809, 11, 26075, 3889, 13, 268, 4820, 298, 8, 1075, 825, 29628, 7, 165, 9642, 3149, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 758, 889, 433, 2250, 3, 26, 3, 5, 32101, 3, 5, 32101, 408, 25984, 3, 107, 3, 5, 32101, 3, 5, 32101, 2250, 11, 5559, 879, 1], "trg": "business object;business process modeling;role modeling;organizational engineering", "tokenized_trg": [268, 3735, 32100, 268, 433, 15309, 32100, 1075, 15309, 32100, 13477, 3867, 1]}
{"src": "a taxonomy of ambient information systems four patterns of design . <sep> researchers have explored the design of ambient information systems across a wide range of physical and screen based media . this work has yielded rich examples of design approaches to the problem of presenting information about a user ' s world in a way that is not distracting , but is aesthetically pleasing , and tangible to varying degrees . despite these successes , accumulating theoretical and craft knowledge has been stymied by the lack of a unified vocabulary to describe these systems and a consequent lack of a framework for understanding their design attributes . we argue that this area would significantly benefit from consensus about the design space of ambient information systems and the design attributes that define and distinguish existing approaches . we present a definition of ambient information systems and a taxonomy across four design dimensions information capacity , notification level , representational fidelity , and aesthetic emphasis . our analysis has uncovered four patterns of system design and points to unexplored regions of the design space , which may motivate future work in the field . categories and subject descriptors visual interface design , tangible interfaces", "tokenized_src": [3, 9, 1104, 32, 3114, 63, 13, 21128, 251, 1002, 662, 4264, 13, 408, 3, 5, 32100, 4768, 43, 15883, 8, 408, 13, 21128, 251, 1002, 640, 3, 9, 1148, 620, 13, 1722, 11, 1641, 3, 390, 783, 3, 5, 48, 161, 65, 6339, 15, 26, 2354, 4062, 13, 408, 6315, 12, 8, 682, 13, 3, 12072, 251, 81, 3, 9, 1139, 3, 31, 3, 7, 296, 16, 3, 9, 194, 24, 19, 59, 15980, 53, 3, 6, 68, 19, 3, 30807, 21404, 3, 6, 11, 20951, 12, 3, 14177, 4526, 3, 5, 3, 3565, 175, 21231, 3, 6, 3, 22274, 1014, 13605, 11, 5449, 1103, 65, 118, 3, 7, 17, 63, 2720, 26, 57, 8, 2136, 13, 3, 9, 3, 22927, 19067, 12, 5530, 175, 1002, 11, 3, 9, 21612, 2136, 13, 3, 9, 4732, 21, 1705, 70, 408, 12978, 3, 5, 62, 9409, 24, 48, 616, 133, 4019, 1656, 45, 16698, 81, 8, 408, 628, 13, 21128, 251, 1002, 11, 8, 408, 12978, 24, 6634, 11, 15849, 1895, 6315, 3, 5, 62, 915, 3, 9, 4903, 13, 21128, 251, 1002, 11, 3, 9, 1104, 32, 3114, 63, 640, 662, 408, 8393, 251, 2614, 3, 6, 11420, 593, 3, 6, 6497, 138, 3, 31374, 3, 6, 11, 9386, 8053, 3, 5, 69, 1693, 65, 3, 24530, 662, 4264, 13, 358, 408, 11, 979, 12, 73, 9080, 1271, 6266, 13, 8, 408, 628, 3, 6, 84, 164, 18198, 647, 161, 16, 8, 1057, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3176, 3459, 408, 3, 6, 20951, 3459, 7, 1], "trg": "taxonomy;ambient information system;symbolic sculptural display;multiple information consolidators;information monitor display;user interface;ubiquitous computing;high throughput textual display;design guidelines;notification systems and peripheral displays;peripheral display;four main design patterns;definition and characteristics of ambient systems;ambient display;framework to understand design attributes;calm computing;notification system", "tokenized_trg": [1104, 32, 3114, 63, 32100, 21128, 251, 358, 32100, 24981, 3, 12184, 9709, 1831, 32100, 1317, 251, 13250, 6230, 32100, 251, 3393, 1831, 32100, 1139, 3459, 32100, 29840, 10937, 32100, 306, 190, 2562, 1499, 3471, 1831, 32100, 408, 5749, 32100, 11420, 1002, 11, 22586, 8397, 32100, 22586, 1831, 32100, 662, 711, 408, 4264, 32100, 4903, 11, 6803, 13, 21128, 1002, 32100, 21128, 1831, 32100, 4732, 12, 734, 408, 12978, 32100, 4447, 10937, 32100, 11420, 358, 1]}
{"src": "using web helper agent profiles in query generation . <sep> personalized information agents can help overcome some of the limitations of communal web information sources such as portals and search engines . two important components of these agents are user profiles and information filtering or gathering services . ideally , these components can be sep <unk> so that a single user profile can be leveraged for a variety of information services . toward that end , we are building an information agent called surfagent in previous studies , we have developed and tested methods for automatically learning a user profile <digit> . in this paper , we evaluate alternative methods for recommending new documents to a user by generating queries from the user profile and submitting them to a popular search engine . our study focuses on three questions how do different algorithms for query generation perform relative to each other is positive relevance feedback adequate to support the task can a user profile be learned independent of the service we found that three algorithms appear to excel and that using only positive feedback does degrade the results somewhat . we conclude with the results of a pilot user study for assessing interaction of the profile and the query generation mechanisms . categories and subject descriptors h . <digit> . <digit> information storage and retrieval information search and retrieval query formulation , search process , information filtering", "tokenized_src": [338, 765, 199, 49, 3102, 10958, 16, 11417, 3381, 3, 5, 32100, 9354, 251, 4373, 54, 199, 8269, 128, 13, 8, 10005, 13, 22393, 765, 251, 2836, 224, 38, 8948, 7, 11, 960, 7277, 3, 5, 192, 359, 3379, 13, 175, 4373, 33, 1139, 10958, 11, 251, 4191, 53, 42, 7241, 364, 3, 5, 3, 20690, 3, 6, 175, 3379, 54, 36, 142, 102, 2, 78, 24, 3, 9, 712, 1139, 3278, 54, 36, 11531, 26, 21, 3, 9, 1196, 13, 251, 364, 3, 5, 2957, 24, 414, 3, 6, 62, 33, 740, 46, 251, 3102, 718, 12245, 9, 5560, 16, 1767, 2116, 3, 6, 62, 43, 1597, 11, 5285, 2254, 21, 3269, 1036, 3, 9, 1139, 3278, 32101, 3, 5, 16, 48, 1040, 3, 6, 62, 6825, 2433, 2254, 21, 3, 29288, 126, 2691, 12, 3, 9, 1139, 57, 3, 11600, 13154, 45, 8, 1139, 3278, 11, 3, 14975, 135, 12, 3, 9, 1012, 960, 1948, 3, 5, 69, 810, 3, 6915, 30, 386, 746, 149, 103, 315, 16783, 21, 11417, 3381, 1912, 5237, 12, 284, 119, 19, 1465, 20208, 3160, 9289, 12, 380, 8, 2491, 54, 3, 9, 1139, 3278, 36, 2525, 2547, 13, 8, 313, 62, 435, 24, 386, 16783, 2385, 12, 11197, 11, 24, 338, 163, 1465, 3160, 405, 20, 6801, 8, 772, 6309, 3, 5, 62, 12692, 28, 8, 772, 13, 3, 9, 4487, 1139, 810, 21, 3, 20861, 6565, 13, 8, 3278, 11, 8, 11417, 3381, 12009, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 11417, 20029, 3, 6, 960, 433, 3, 6, 251, 4191, 53, 1], "trg": "query generation;information agents;user modeling", "tokenized_trg": [11417, 3381, 32100, 251, 4373, 32100, 1139, 15309, 1]}
{"src": "very low complexity mpeg <digit> to h . <digit> transcoding using machine learning . <sep> this paper presents a novel macroblock mode decision algorithm for inter frame prediction based on machine learning techniques to be used as part of a very low complexity mpeg <digit> to h . <digit> video transcoder . since coding mode decisions take up the most resources in video transcoding , a fast macro block ( mb ) mode estimation would lead to reduced complexity . the proposed approach is based on the hypothesis that mb coding mode decisions in h . <digit> video have a correlation with the distribution of the motion compensated residual in mpeg <digit> video . we use machine learning tools to exploit the correlation and derive decision trees to classify the incoming mpeg <digit> mbs into one of the <digit> coding modes in h . <digit> . the proposed approach reduces the h . <digit> mb mode computation process into a decision tree lookup with very low complexity . the proposed transcoder is compared with a reference transcoder comprised of a mpeg <digit> decoder and an h . <digit> encoder . our results show that the proposed transcoder reduces the h . <digit> encoding time by over <digit> % with negligible loss in quality and bitrate . categories and subject descriptors i . <digit> . <digit> image processing and computer vision compression ( coding ) , approximate methods . general terms algorithms , performance , design .", "tokenized_src": [182, 731, 11641, 3, 1167, 15, 122, 32101, 12, 3, 107, 3, 5, 32101, 3017, 9886, 338, 1437, 1036, 3, 5, 32100, 48, 1040, 6621, 3, 9, 3714, 11663, 10734, 2175, 1357, 12628, 21, 1413, 2835, 21332, 3, 390, 30, 1437, 1036, 2097, 12, 36, 261, 38, 294, 13, 3, 9, 182, 731, 11641, 3, 1167, 15, 122, 32101, 12, 3, 107, 3, 5, 32101, 671, 3017, 4978, 52, 3, 5, 437, 3, 9886, 2175, 3055, 240, 95, 8, 167, 1438, 16, 671, 3017, 9886, 3, 6, 3, 9, 1006, 11663, 2463, 41, 3, 51, 115, 3, 61, 2175, 22781, 133, 991, 12, 3915, 11641, 3, 5, 8, 4382, 1295, 19, 3, 390, 30, 8, 22455, 24, 3, 51, 115, 3, 9886, 2175, 3055, 16, 3, 107, 3, 5, 32101, 671, 43, 3, 9, 18712, 28, 8, 3438, 13, 8, 4644, 17077, 26, 27687, 16, 3, 1167, 15, 122, 32101, 671, 3, 5, 62, 169, 1437, 1036, 1339, 12, 9248, 8, 18712, 11, 74, 757, 1357, 3124, 12, 853, 4921, 8, 3, 19583, 3, 1167, 15, 122, 32101, 3, 51, 115, 7, 139, 80, 13, 8, 32101, 3, 9886, 12632, 16, 3, 107, 3, 5, 32101, 3, 5, 8, 4382, 1295, 1428, 7, 8, 3, 107, 3, 5, 32101, 3, 51, 115, 2175, 29761, 433, 139, 3, 9, 1357, 2195, 320, 413, 28, 182, 731, 11641, 3, 5, 8, 4382, 3017, 4978, 52, 19, 3, 2172, 28, 3, 9, 2848, 3017, 4978, 52, 9418, 26, 13, 3, 9, 3, 1167, 15, 122, 32101, 20, 4978, 52, 11, 46, 3, 107, 3, 5, 32101, 23734, 52, 3, 5, 69, 772, 504, 24, 8, 4382, 3017, 4978, 52, 1428, 7, 8, 3, 107, 3, 5, 32101, 3, 35, 9886, 97, 57, 147, 32101, 3, 1454, 28, 14261, 2825, 2317, 1453, 16, 463, 11, 720, 2206, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 23, 3, 5, 32101, 3, 5, 32101, 1023, 3026, 11, 1218, 2267, 16685, 41, 3, 9886, 3, 61, 3, 6, 24672, 2254, 3, 5, 879, 1353, 16783, 3, 6, 821, 3, 6, 408, 3, 5, 1], "trg": "mpeg <digit>;h . <digit>;transcoding;machine learning;inter frame", "tokenized_trg": [3, 1167, 15, 122, 32101, 32100, 3, 107, 3, 5, 32101, 32100, 3017, 9886, 32100, 1437, 1036, 32100, 1413, 2835, 1]}
{"src": "video streaming for fast moving users in 3g mobile networks . <sep> the emergence of third generation ( 3g ) mobile networks offers new opportunities for the effective delivery of data with rich content including multimedia messaging and video streaming . provided that streaming services have proved highly successful over stationary networks in the past , we anticipate that the same trend will soon take place in 3g networks . although mobile operators currently make available pertinent services , the available resources of the underlying networks for the delivery of rich data remain in <unk> constrained . at this stage and in light of large numbers of users moving fast across cells , 3g networks may not be able to warrant the needed quality of service requirements . the support for streaming services necessitates the presence of content or media servers properly placed over the 3g network such servers essen tially become the source for streaming applications . evidently , a centralized approach in organizing streaming content might lead to highly congested media nodes which in presence of moving users will certainly yield increased response times and jitter to user requests . in this paper , we propose a workaround that enables 3g networks to offer uninterrupted video streaming services in the presence of a large number of users moving in high speed . at the same time , we offer a distributed organization for the network ' s media servers to better handle over utilization . categories and subject descriptors h . <digit> . <digit> systems and software information networks h . <digit> . <digit> online information services data sharing c . <digit> . <digit> distributed systems distributed applications general terms algorithms , design , performance", "tokenized_src": [671, 8340, 21, 1006, 1735, 1105, 16, 220, 122, 1156, 5275, 3, 5, 32100, 8, 3, 25120, 13, 1025, 3381, 41, 220, 122, 3, 61, 1156, 5275, 704, 126, 1645, 21, 8, 1231, 1929, 13, 331, 28, 2354, 738, 379, 19131, 16324, 11, 671, 8340, 3, 5, 937, 24, 8340, 364, 43, 9193, 1385, 1574, 147, 28033, 5275, 16, 8, 657, 3, 6, 62, 16900, 24, 8, 337, 4166, 56, 1116, 240, 286, 16, 220, 122, 5275, 3, 5, 2199, 1156, 9490, 1083, 143, 347, 19689, 364, 3, 6, 8, 347, 1438, 13, 8, 3, 10067, 5275, 21, 8, 1929, 13, 2354, 331, 2367, 16, 2, 975, 22418, 3, 5, 44, 48, 1726, 11, 16, 659, 13, 508, 2302, 13, 1105, 1735, 1006, 640, 2640, 3, 6, 220, 122, 5275, 164, 59, 36, 3, 179, 12, 11741, 8, 906, 463, 13, 313, 1502, 3, 5, 8, 380, 21, 8340, 364, 9705, 15, 7, 7, 1734, 7, 8, 3053, 13, 738, 42, 783, 8379, 3085, 2681, 147, 8, 220, 122, 1229, 224, 8379, 3, 8185, 3, 10646, 120, 582, 8, 1391, 21, 8340, 1564, 3, 5, 6843, 120, 3, 6, 3, 9, 3, 21411, 1295, 16, 14308, 8340, 738, 429, 991, 12, 1385, 975, 397, 6265, 783, 150, 1395, 84, 16, 3053, 13, 1735, 1105, 56, 1852, 6339, 1936, 1773, 648, 11, 3, 13272, 449, 12, 1139, 6166, 3, 5, 16, 48, 1040, 3, 6, 62, 4230, 3, 9, 161, 15590, 24, 3, 7161, 220, 122, 5275, 12, 462, 29574, 671, 8340, 364, 16, 8, 3053, 13, 3, 9, 508, 381, 13, 1105, 1735, 16, 306, 1634, 3, 5, 44, 8, 337, 97, 3, 6, 62, 462, 3, 9, 8308, 1470, 21, 8, 1229, 3, 31, 3, 7, 783, 8379, 12, 394, 2174, 147, 21961, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 1002, 11, 889, 251, 5275, 3, 107, 3, 5, 32101, 3, 5, 32101, 367, 251, 364, 331, 2178, 3, 75, 3, 5, 32101, 3, 5, 32101, 8308, 1002, 8308, 1564, 879, 1353, 16783, 3, 6, 408, 3, 6, 821, 1], "trg": "streaming for moving users;real time streaming;rate adaptation;mobile multimedia services", "tokenized_trg": [8340, 21, 1735, 1105, 32100, 490, 97, 8340, 32100, 1080, 14340, 32100, 1156, 19131, 364, 1]}
{"src": "web taxonomy integration through co bootstrapping . <sep> we address the problem of integrating objects from a source taxonomy into a master taxonomy . this problem is not only currently pervasive on the web , but also important to the emerging semantic web . a straightforward approach to automating this process would be to learn a classifier that can classify objects from the source taxonomy into categories of the master taxonomy . the key insight is that the availability of the source taxonomy data could be helpful to build better classifiers for the master taxonomy if their categorizations have some semantic overlap . in this paper , we propose a new approach , co bootstrapping , to enhance the classification by exploiting such implicit knowledge . our experiments with real world web data show substantial improvements in the performance of taxonomy integration . categories and subject descriptors h . <digit> . <digit> database management database applications , data mining h . <digit> . <digit> database management heterogeneous databases i . <digit> . <digit> artificial intelligence learning i . <digit> . <digit> pattern recognition design methodology , classifier design and evaluation . general terms algorithms , experimentation , theory .", "tokenized_src": [765, 1104, 32, 3114, 63, 5660, 190, 576, 10427, 1313, 5341, 3, 5, 32100, 62, 1115, 8, 682, 13, 3, 20030, 4820, 45, 3, 9, 1391, 1104, 32, 3114, 63, 139, 3, 9, 2325, 1104, 32, 3114, 63, 3, 5, 48, 682, 19, 59, 163, 1083, 399, 9856, 757, 30, 8, 765, 3, 6, 68, 92, 359, 12, 8, 7821, 27632, 765, 3, 5, 3, 9, 11753, 1295, 12, 7791, 53, 48, 433, 133, 36, 12, 669, 3, 9, 853, 7903, 24, 54, 853, 4921, 4820, 45, 8, 1391, 1104, 32, 3114, 63, 139, 5897, 13, 8, 2325, 1104, 32, 3114, 63, 3, 5, 8, 843, 6574, 19, 24, 8, 5576, 13, 8, 1391, 1104, 32, 3114, 63, 331, 228, 36, 2690, 12, 918, 394, 853, 7903, 7, 21, 8, 2325, 1104, 32, 3114, 63, 3, 99, 70, 9624, 122, 127, 1707, 7, 43, 128, 27632, 21655, 3, 5, 16, 48, 1040, 3, 6, 62, 4230, 3, 9, 126, 1295, 3, 6, 576, 10427, 1313, 5341, 3, 6, 12, 3391, 8, 13774, 57, 9248, 53, 224, 21773, 1103, 3, 5, 69, 12341, 28, 490, 296, 765, 331, 504, 7354, 6867, 16, 8, 821, 13, 1104, 32, 3114, 63, 5660, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 3501, 1564, 3, 6, 331, 5558, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 26481, 729, 15, 1162, 16961, 3, 23, 3, 5, 32101, 3, 5, 32101, 7353, 6123, 1036, 3, 23, 3, 5, 32101, 3, 5, 32101, 3275, 5786, 408, 15663, 3, 6, 853, 7903, 408, 11, 5002, 3, 5, 879, 1353, 16783, 3, 6, 5016, 257, 3, 6, 4516, 3, 5, 1], "trg": "taxonomy integration;bootstrapping;semantic web;classification;machine learning;ontology mapping;boosting", "tokenized_trg": [1104, 32, 3114, 63, 5660, 32100, 10427, 1313, 5341, 32100, 27632, 765, 32100, 13774, 32100, 1437, 1036, 32100, 30, 17, 1863, 14670, 32100, 3, 24220, 1]}
{"src": "<unk> indian language ir from multiple character encodings . <sep> today web search engines provide the easiest way to reach information on the web . in this scenario , more than <digit> % of indian language content on the web is not searchable due to multiple encodings of web pages . most of these encodings are proprietary and hence need some kind of standardization for making the content accessible via a search engine . in this paper we present a search engine called <unk> which is capable of searching multi script and multi encoded indian language content on the web . we describe a language focused crawler and the transcoding processes involved to achieve accessibility of indian langauge content . in the end we report some of the experiments that were conducted along with results on indian language web content . categories and subject descriptors h . <digit> . <digit> information search and retrieval information filtering , selection process h . <digit> . <digit> content analysis and indexing linguistic processing general terms standardization , languages", "tokenized_src": [2, 16, 8603, 1612, 3, 23, 52, 45, 1317, 1848, 3, 35, 9886, 7, 3, 5, 32100, 469, 765, 960, 7277, 370, 8, 11926, 194, 12, 1535, 251, 30, 8, 765, 3, 5, 16, 48, 8616, 3, 6, 72, 145, 32101, 3, 1454, 13, 16, 8603, 1612, 738, 30, 8, 765, 19, 59, 960, 179, 788, 12, 1317, 3, 35, 9886, 7, 13, 765, 1688, 3, 5, 167, 13, 175, 3, 35, 9886, 7, 33, 16950, 11, 10321, 174, 128, 773, 13, 1068, 1707, 21, 492, 8, 738, 3551, 1009, 3, 9, 960, 1948, 3, 5, 16, 48, 1040, 62, 915, 3, 9, 960, 1948, 718, 2, 84, 19, 3919, 13, 4549, 1249, 4943, 11, 1249, 23734, 26, 16, 8603, 1612, 738, 30, 8, 765, 3, 5, 62, 5530, 3, 9, 1612, 2937, 18639, 49, 11, 8, 3017, 9886, 2842, 1381, 12, 1984, 17275, 13, 16, 8603, 13624, 12972, 738, 3, 5, 16, 8, 414, 62, 934, 128, 13, 8, 12341, 24, 130, 4468, 590, 28, 772, 30, 16, 8603, 1612, 765, 738, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 960, 11, 24515, 138, 251, 4191, 53, 3, 6, 1801, 433, 3, 107, 3, 5, 32101, 3, 5, 32101, 738, 1693, 11, 5538, 53, 3, 24703, 3026, 879, 1353, 1068, 1707, 3, 6, 8024, 1], "trg": "indian languages;web search;non standard encodings", "tokenized_trg": [16, 8603, 8024, 32100, 765, 960, 32100, 529, 1068, 3, 35, 9886, 7, 1]}
{"src": "what ' s there and what ' s not focused crawling for missing documents in digital libraries . <sep> some large scale topical digital libraries , such as citeseer , harvest online academic documents by crawling open access archives , university and author homepages , and authors ' self submissions . while these approaches have so far built reasonable size libraries , they can suffer from having only a portion of the documents from specific publishing venues . we propose to use alternative online resources and techniques that maximally exploit other resources to build the complete document collection of any given publication venue . we investigate the feasibility of using publication metadata to guide the crawler towards authors ' homepages to harvest what is missing from a digital library collection . we collect a real world dataset from two computer science publishing venues , involving a total of <digit> unique authors over a time frame of <digit> to <digit> . we then identify the missing papers that are not indexed by citeseer . using a fully automatic heuristic based system that has the capability of locating authors ' homepages and then using focused crawling to download the desired papers , we demonstrate that it is practical to harvest using a focused crawler academic papers that are missing from our digital library . our harvester achieves a performance with an average recall level of <digit> . <digit> overall and <digit> . <digit> for those missing documents . evaluation of the crawler ' s performance based on the harvest rate shows definite advantages over other crawling approaches and consistently outperforms a defined baseline crawler on a number of measures . categories and subject descriptors h . <digit> . <digit> information systems information storage and retrieval , digital libraries general terms algorithms , performance , design , experimentation .", "tokenized_src": [125, 3, 31, 3, 7, 132, 11, 125, 3, 31, 3, 7, 59, 2937, 18639, 53, 21, 3586, 2691, 16, 1125, 12256, 3, 5, 32100, 128, 508, 2643, 2859, 138, 1125, 12256, 3, 6, 224, 38, 3, 8464, 7, 15, 49, 3, 6, 10515, 367, 2705, 2691, 57, 18639, 53, 539, 592, 18274, 3, 6, 3819, 11, 2291, 22844, 7, 3, 6, 11, 5921, 3, 31, 1044, 8121, 7, 3, 5, 298, 175, 6315, 43, 78, 623, 1192, 4360, 812, 12256, 3, 6, 79, 54, 5696, 45, 578, 163, 3, 9, 4149, 13, 8, 2691, 45, 806, 9002, 11778, 3, 5, 62, 4230, 12, 169, 2433, 367, 1438, 11, 2097, 24, 13393, 120, 9248, 119, 1438, 12, 918, 8, 743, 1708, 1232, 13, 136, 787, 5707, 5669, 3, 5, 62, 9127, 8, 28297, 13, 338, 5707, 26686, 12, 1539, 8, 18639, 49, 1587, 5921, 3, 31, 22844, 7, 12, 10515, 125, 19, 3586, 45, 3, 9, 1125, 3595, 1232, 3, 5, 62, 2868, 3, 9, 490, 296, 17953, 45, 192, 1218, 2056, 9002, 11778, 3, 6, 3, 6475, 3, 9, 792, 13, 32101, 775, 5921, 147, 3, 9, 97, 2835, 13, 32101, 12, 32101, 3, 5, 62, 258, 2862, 8, 3586, 5778, 24, 33, 59, 3, 30564, 57, 3, 8464, 7, 15, 49, 3, 5, 338, 3, 9, 1540, 6569, 3, 88, 450, 3040, 3, 390, 358, 24, 65, 8, 9004, 13, 3, 21240, 5921, 3, 31, 22844, 7, 11, 258, 338, 2937, 18639, 53, 12, 946, 8, 5327, 5778, 3, 6, 62, 5970, 24, 34, 19, 3236, 12, 10515, 338, 3, 9, 2937, 18639, 49, 2705, 5778, 24, 33, 3586, 45, 69, 1125, 3595, 3, 5, 69, 10515, 49, 1984, 7, 3, 9, 821, 28, 46, 1348, 7881, 593, 13, 32101, 3, 5, 32101, 1879, 11, 32101, 3, 5, 32101, 21, 273, 3586, 2691, 3, 5, 5002, 13, 8, 18639, 49, 3, 31, 3, 7, 821, 3, 390, 30, 8, 10515, 1080, 1267, 3, 14339, 7648, 147, 119, 18639, 53, 6315, 11, 8182, 91, 883, 2032, 7, 3, 9, 4802, 20726, 18639, 49, 30, 3, 9, 381, 13, 3629, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1002, 251, 1606, 11, 24515, 138, 3, 6, 1125, 12256, 879, 1353, 16783, 3, 6, 821, 3, 6, 408, 3, 6, 5016, 257, 3, 5, 1], "trg": "digital libraries;citeseer;harvesting;focused crawler;dblp;acm", "tokenized_trg": [1125, 12256, 32100, 3, 8464, 7, 15, 49, 32100, 10515, 53, 32100, 2937, 18639, 49, 32100, 3, 26, 115, 40, 102, 32100, 3, 9, 75, 51, 1]}
{"src": "a two phase sampling technique for information extraction from hidden web databases . <sep> hidden web databases maintain a collection of specialised documents , which are dynamically generated in response to users ' queries . however , the documents are generated by web page templates , which contain information that is irrelevant to queries . this paper presents a two phase sampling ( 2ps ) technique that detects templates and extracts query related information from the sampled documents of a database . in the first phase , 2ps queries databases with terms contained in their search interface pages and the subsequently sampled documents . this process retrieves a required number of documents . in the second phase , 2ps detects web page templates in the sampled documents in order to extract information relevant to queries . we test 2ps on a number of real world hidden web databases . experimental results demonstrate that 2ps effectively eliminates irrelevant information contained in web page templates and generates terms and frequencies with improved accuracy . categories and subject descriptors h . <digit> . <digit> information storage and retrieval online information services web based services . general terms algorithms , experimentation .", "tokenized_src": [3, 9, 192, 3944, 17222, 3317, 21, 251, 16629, 45, 5697, 765, 16961, 3, 5, 32100, 5697, 765, 16961, 1961, 3, 9, 1232, 13, 3, 26725, 2691, 3, 6, 84, 33, 4896, 1427, 6126, 16, 1773, 12, 1105, 3, 31, 13154, 3, 5, 983, 3, 6, 8, 2691, 33, 6126, 57, 765, 543, 7405, 3, 6, 84, 3480, 251, 24, 19, 26213, 12, 13154, 3, 5, 48, 1040, 6621, 3, 9, 192, 3944, 17222, 41, 204, 102, 7, 3, 61, 3317, 24, 8432, 7, 7405, 11, 5819, 7, 11417, 1341, 251, 45, 8, 3106, 26, 2691, 13, 3, 9, 3501, 3, 5, 16, 8, 166, 3944, 3, 6, 204, 102, 7, 13154, 16961, 28, 1353, 6966, 16, 70, 960, 3459, 1688, 11, 8, 3, 14064, 3106, 26, 2691, 3, 5, 48, 433, 21830, 7, 3, 9, 831, 381, 13, 2691, 3, 5, 16, 8, 511, 3944, 3, 6, 204, 102, 7, 8432, 7, 765, 543, 7405, 16, 8, 3106, 26, 2691, 16, 455, 12, 5819, 251, 2193, 12, 13154, 3, 5, 62, 794, 204, 102, 7, 30, 3, 9, 381, 13, 490, 296, 5697, 765, 16961, 3, 5, 11082, 772, 5970, 24, 204, 102, 7, 3762, 6312, 7, 26213, 251, 6966, 16, 765, 543, 7405, 11, 3806, 7, 1353, 11, 23446, 28, 3798, 7452, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 367, 251, 364, 765, 3, 390, 364, 3, 5, 879, 1353, 16783, 3, 6, 5016, 257, 3, 5, 1], "trg": "information extraction;information extraction;hidden web databases;hidden web databases;web page templates;search interface pages;document sampling;neighbouring adjacent tag segments;irrelavant information extraction;<digit> phase sampling technique;query based sampling;string matching techniques;hypertext markup langauges", "tokenized_trg": [251, 16629, 32100, 251, 16629, 32100, 5697, 765, 16961, 32100, 5697, 765, 16961, 32100, 765, 543, 7405, 32100, 960, 3459, 1688, 32100, 1708, 17222, 32100, 14245, 53, 12487, 7860, 15107, 32100, 19598, 40, 15990, 251, 16629, 32100, 32101, 3944, 17222, 3317, 32100, 11417, 3, 390, 17222, 32100, 6108, 8150, 2097, 32100, 6676, 6327, 3946, 413, 13624, 12972, 7, 1]}
{"src": "a unified approach for improving qos and provider revenue in 3g mobile networks . <sep> in this paper , we introduce a unified approach for the adaptive control of 3g mobile networks in order to improve both quality of service ( qos ) for mobile subscribers and to increase revenue for service providers . the introduced approach constantly monitors qos measures as packet loss probability and the current number of active mobile users during operation of the network . based on the values of the qos measures just observed , the system parameters of the admission controller and packet scheduler are controlled by the adaptive performance management entity . considering umts , we present performance curves showing that handover failure probability is improved by more than one order of magnitude . moreover , the packet loss probability can be effectively regulated to a predefined level and provider revenue is significantly increased for all pricing policies .", "tokenized_src": [3, 9, 3, 22927, 1295, 21, 4863, 3, 1824, 32, 7, 11, 3175, 3751, 16, 220, 122, 1156, 5275, 3, 5, 32100, 16, 48, 1040, 3, 6, 62, 4277, 3, 9, 3, 22927, 1295, 21, 8, 25326, 610, 13, 220, 122, 1156, 5275, 16, 455, 12, 1172, 321, 463, 13, 313, 41, 3, 1824, 32, 7, 3, 61, 21, 1156, 17303, 11, 12, 993, 3751, 21, 313, 3580, 3, 5, 8, 3665, 1295, 4259, 3393, 7, 3, 1824, 32, 7, 3629, 38, 13531, 1453, 15834, 11, 8, 750, 381, 13, 1676, 1156, 1105, 383, 2986, 13, 8, 1229, 3, 5, 3, 390, 30, 8, 2620, 13, 8, 3, 1824, 32, 7, 3629, 131, 6970, 3, 6, 8, 358, 8755, 13, 8, 7209, 8612, 11, 13531, 2023, 52, 33, 6478, 57, 8, 25326, 821, 758, 10409, 3, 5, 4014, 561, 17, 7, 3, 6, 62, 915, 821, 8435, 7, 2924, 24, 609, 1890, 3338, 15834, 19, 3798, 57, 72, 145, 80, 455, 13, 20722, 3, 5, 72, 1890, 3, 6, 8, 13531, 1453, 15834, 54, 36, 3762, 3, 12990, 12, 3, 9, 554, 17094, 593, 11, 3175, 3751, 19, 4019, 1936, 21, 66, 5769, 3101, 3, 5, 1], "trg": "qos;provider revenue;3g mobile networks;packet loss probability;admission control;packet scheduler;adaptive performance management;pricing policy;quality of service in mobile systems;admission control in mobile system;performance evaluation of next generation mobile systems;pricing and revenue optimization", "tokenized_trg": [3, 1824, 32, 7, 32100, 3175, 3751, 32100, 220, 122, 1156, 5275, 32100, 13531, 1453, 15834, 32100, 7209, 610, 32100, 13531, 2023, 52, 32100, 25326, 821, 758, 32100, 5769, 1291, 32100, 463, 13, 313, 16, 1156, 1002, 32100, 7209, 610, 16, 1156, 358, 32100, 821, 5002, 13, 416, 3381, 1156, 1002, 32100, 5769, 11, 3751, 11295, 1]}
{"src": "a weighted ranking algorithm for facet based component retrieval system . <sep> facet based component retrieval techniques have been proved to be an effective way for retrieving . these techniques are widely adopted by component library systems , but they usually simply list out all the retrieval results without any kind of ranking . in our work , we focus on the problem that how to determine the ranks of the components retrieved by user . factors which can influence the ranking are extracted and identified through the analysis of er diagram of facet based component library system . in this paper , a mathematical model of weighted ranking algorithm is proposed and the timing of ranks calculation is discussed . experiment results show that this algorithm greatly improves the efficiency of component retrieval system .", "tokenized_src": [3, 9, 1293, 15, 26, 11592, 12628, 21, 522, 17, 3, 390, 3876, 24515, 138, 358, 3, 5, 32100, 522, 17, 3, 390, 3876, 24515, 138, 2097, 43, 118, 9193, 12, 36, 46, 1231, 194, 21, 24515, 53, 3, 5, 175, 2097, 33, 5456, 7546, 57, 3876, 3595, 1002, 3, 6, 68, 79, 1086, 914, 570, 91, 66, 8, 24515, 138, 772, 406, 136, 773, 13, 11592, 3, 5, 16, 69, 161, 3, 6, 62, 992, 30, 8, 682, 24, 149, 12, 2082, 8, 13799, 13, 8, 3379, 3, 31340, 57, 1139, 3, 5, 2580, 84, 54, 2860, 8, 11592, 33, 21527, 11, 4313, 190, 8, 1693, 13, 3, 49, 6423, 13, 522, 17, 3, 390, 3876, 3595, 358, 3, 5, 16, 48, 1040, 3, 6, 3, 9, 18913, 825, 13, 1293, 15, 26, 11592, 12628, 19, 4382, 11, 8, 9398, 13, 13799, 18643, 19, 5172, 3, 5, 5016, 772, 504, 24, 48, 12628, 6891, 1172, 7, 8, 3949, 13, 3876, 24515, 138, 358, 3, 5, 1], "trg": "weighted ranking algorithm;ranking algorithm;facet based component retrieval;facet;component retrieval;retrieval system;component library;component rank;and component library;matching degree", "tokenized_trg": [1293, 15, 26, 11592, 12628, 32100, 11592, 12628, 32100, 522, 17, 3, 390, 3876, 24515, 138, 32100, 522, 17, 32100, 3876, 24515, 138, 32100, 24515, 138, 358, 32100, 3876, 3595, 32100, 3876, 11003, 32100, 11, 3876, 3595, 32100, 8150, 1952, 1]}
{"src": "accelerated focused crawling through online relevance feedback . <sep> the organization of html into a tag tree structure , which is rendered by browsers as roughly rectangular regions with embedded text and href links , greatly helps surfers locate and click on links that best satisfy their information need . can an automatic program emulate this human behavior and thereby learn to predict the relevance of an unseen href target page w . r . t . an information need , based on information limited to the href source page such a capability would be of great interest in focused crawling and resource discovery , because it can fine tune the priority of unvisited urls in the crawl frontier , and reduce the number of irrelevant pages which are fetched and discarded . we show that there is indeed a great deal of usable information on a href source page about the relevance of the target page . this information , encoded suitably , can be exploited by a supervised apprentice which takes online lessons from a traditional focused crawler by observing a carefully designed set of features and events associated with the crawler . once the apprentice gets a sufficient number of examples , the crawler starts consulting it to better prioritize urls in the crawl frontier . experiments on a dozen topics using a <digit> topic taxonomy from the open directory ( dmoz ) show that online relevance feedback can reduce false positives by <digit> % to <digit> % . categories and subject descriptors h . <digit> . <digit> information interfaces and presentation hypertext hypermedia i . <digit> . <digit> pattern recognition applications , text processing i . <digit> . <digit> artificial intelligence learning i . <digit> . <digit> artificial intelligence problem solving , control methods , and search . general terms algorithms , performance , measurements , experimentation .", "tokenized_src": [3, 26389, 2937, 18639, 53, 190, 367, 20208, 3160, 3, 5, 32100, 8, 1470, 13, 3, 10500, 139, 3, 9, 7860, 2195, 1809, 3, 6, 84, 19, 20518, 57, 3509, 7, 38, 10209, 24675, 6266, 28, 13612, 1499, 11, 3, 107, 60, 89, 2416, 3, 6, 6891, 1691, 12245, 277, 9586, 11, 1214, 30, 2416, 24, 200, 11132, 70, 251, 174, 3, 5, 54, 46, 6569, 478, 29953, 48, 936, 3889, 11, 3, 12550, 669, 12, 9689, 8, 20208, 13, 46, 1149, 15, 35, 3, 107, 60, 89, 2387, 543, 3, 210, 3, 5, 3, 52, 3, 5, 3, 17, 3, 5, 46, 251, 174, 3, 6, 3, 390, 30, 251, 1643, 12, 8, 3, 107, 60, 89, 1391, 543, 224, 3, 9, 9004, 133, 36, 13, 248, 1046, 16, 2937, 18639, 53, 11, 3487, 9087, 3, 6, 250, 34, 54, 1399, 7368, 8, 5734, 13, 73, 3466, 23, 1054, 3, 16137, 7, 16, 8, 18639, 20515, 3, 6, 11, 1428, 8, 381, 13, 26213, 1688, 84, 33, 3, 89, 25872, 11, 3, 29611, 3, 5, 62, 504, 24, 132, 19, 5071, 3, 9, 248, 1154, 13, 178, 179, 251, 30, 3, 9, 3, 107, 60, 89, 1391, 543, 81, 8, 20208, 13, 8, 2387, 543, 3, 5, 48, 251, 3, 6, 23734, 26, 3237, 3834, 3, 6, 54, 36, 9248, 15, 26, 57, 3, 9, 3, 23313, 29255, 84, 1217, 367, 5182, 45, 3, 9, 1435, 2937, 18639, 49, 57, 3, 23493, 3, 9, 4321, 876, 356, 13, 753, 11, 984, 1968, 28, 8, 18639, 49, 3, 5, 728, 8, 29255, 2347, 3, 9, 6684, 381, 13, 4062, 3, 6, 8, 18639, 49, 3511, 9157, 34, 12, 394, 25370, 3, 16137, 7, 16, 8, 18639, 20515, 3, 5, 12341, 30, 3, 9, 9611, 4064, 338, 3, 9, 32101, 2859, 1104, 32, 3114, 63, 45, 8, 539, 8174, 41, 3, 26, 51, 32, 172, 3, 61, 504, 24, 367, 20208, 3160, 54, 1428, 6136, 1465, 7, 57, 32101, 3, 1454, 12, 32101, 3, 1454, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 3459, 7, 11, 3831, 6676, 6327, 6676, 8172, 3, 23, 3, 5, 32101, 3, 5, 32101, 3275, 5786, 1564, 3, 6, 1499, 3026, 3, 23, 3, 5, 32101, 3, 5, 32101, 7353, 6123, 1036, 3, 23, 3, 5, 32101, 3, 5, 32101, 7353, 6123, 682, 11795, 3, 6, 610, 2254, 3, 6, 11, 960, 3, 5, 879, 1353, 16783, 3, 6, 821, 3, 6, 11110, 3, 6, 5016, 257, 3, 5, 1], "trg": "focused crawling;href link;urls;focused crawlers;taxonomy;dom;reinforcement learning;document object model;classifiers", "tokenized_trg": [2937, 18639, 53, 32100, 3, 107, 60, 89, 1309, 32100, 3, 16137, 7, 32100, 2937, 18639, 277, 32100, 1104, 32, 3114, 63, 32100, 3, 5012, 32100, 28050, 1036, 32100, 1708, 3735, 825, 32100, 853, 7903, 7, 1]}
{"src": "accelerating 3d convolution using graphics hardware . <sep> many volume filtering operations used for image enhancement , data processing or feature detection can be written in terms of three dimensional convolutions . it is not possible to yield interactive frame rates on todays hardware when applying such convolutions on volume data using software filter routines . as modern graphics workstations have the ability to render two dimensional convoluted images to the frame buffer , this feature can be used to accelerate the process significantly . this way generic 3d convolution can be added as a powerful tool in interactive volume visualization toolkits .", "tokenized_src": [3, 30819, 220, 26, 975, 24817, 338, 6484, 4214, 3, 5, 32100, 186, 2908, 4191, 53, 2673, 261, 21, 1023, 15220, 3, 6, 331, 3026, 42, 1451, 10664, 54, 36, 1545, 16, 1353, 13, 386, 3, 11619, 975, 24817, 7, 3, 5, 34, 19, 59, 487, 12, 6339, 6076, 2835, 1917, 30, 469, 7, 4214, 116, 6247, 224, 975, 24817, 7, 30, 2908, 331, 338, 889, 4191, 3860, 7, 3, 5, 38, 941, 6484, 161, 6682, 7, 43, 8, 1418, 12, 16061, 192, 3, 11619, 21362, 18453, 26, 1383, 12, 8, 2835, 17164, 3, 6, 48, 1451, 54, 36, 261, 12, 16845, 8, 433, 4019, 3, 5, 48, 194, 8165, 220, 26, 975, 24817, 54, 36, 974, 38, 3, 9, 2021, 1464, 16, 6076, 2908, 21744, 1464, 9229, 7, 3, 5, 1], "trg": "3d convolution;convolution;filtering;volume visualization;visualization;hardware acceleration;volume rendering", "tokenized_trg": [220, 26, 975, 24817, 32100, 975, 24817, 32100, 4191, 53, 32100, 2908, 21744, 32100, 21744, 32100, 4214, 23224, 32100, 2908, 18968, 1]}
{"src": "agent technology for personalized information filtering the pia system . <sep> as today the amount of accessible information is overwhelming , the intelligent and personalized filtering of available information is a main challenge . additionally , there is a growing need for the seamless mobile and multi modal system usage throughout the whole day to meet the requirements of the modern society ( anytime , anywhere , anyhow ) . a personal information agent that is delivering the right information at the right time by accessing , filtering and presenting information in a situation aware matter is needed . applying agent technology is promising , because the inherent capabilities of agents like autonomy , pro and reactiveness offer an adequate approach . we developed an agent based personal information system called pia for collecting , filtering , and integrating information at a common point , offering access to the information by www , e mail , sms , mms , and j2me clients . push and pull techniques are combined allowing the user to search explicitly for specific information on the one hand and to be informed automatically about relevant information divided in pre , work and recreation slots on the other hand . in the core of the pia system advanced filtering techniques are deployed through multiple filtering agent communities for content based and collaborative filtering . information extracting agents are constantly gathering new relevant information from a variety of selected sources ( internet , files , databases , web services etc . ) . a personal agent for each user is managing the individual information provisioning , tailored to the needs of this specific user , knowing the profile , the current situation and learning from feedback . categories and subject descriptors information systems information systems applications general , communications applications . general terms algorithms , management", "tokenized_src": [3102, 748, 21, 9354, 251, 4191, 53, 8, 2816, 9, 358, 3, 5, 32100, 38, 469, 8, 866, 13, 3551, 251, 19, 11316, 3, 6, 8, 7951, 11, 9354, 4191, 53, 13, 347, 251, 19, 3, 9, 711, 1921, 3, 5, 11700, 3, 6, 132, 19, 3, 9, 1710, 174, 21, 8, 15870, 1156, 11, 1249, 3, 20226, 358, 4742, 1019, 8, 829, 239, 12, 942, 8, 1502, 13, 8, 941, 2710, 41, 11008, 3, 6, 3461, 3, 6, 136, 4067, 3, 61, 3, 5, 3, 9, 525, 251, 3102, 24, 19, 3, 6930, 8, 269, 251, 44, 8, 269, 97, 57, 592, 53, 3, 6, 4191, 53, 11, 3, 12072, 251, 16, 3, 9, 1419, 2718, 1052, 19, 906, 3, 5, 6247, 3102, 748, 19, 12894, 3, 6, 250, 8, 18340, 5644, 13, 4373, 114, 29007, 3, 6, 813, 11, 28360, 655, 462, 46, 9289, 1295, 3, 5, 62, 1597, 46, 3102, 3, 390, 525, 251, 358, 718, 2816, 9, 21, 10858, 3, 6, 4191, 53, 3, 6, 11, 3, 20030, 251, 44, 3, 9, 1017, 500, 3, 6, 1772, 592, 12, 8, 251, 57, 2442, 3, 6, 3, 15, 4842, 3, 6, 3, 7, 51, 7, 3, 6, 3, 635, 7, 3, 6, 11, 3, 354, 357, 526, 820, 3, 5, 3292, 11, 3197, 2097, 33, 3334, 3, 3232, 8, 1139, 12, 960, 21119, 21, 806, 251, 30, 8, 80, 609, 11, 12, 36, 4862, 3269, 81, 2193, 251, 8807, 16, 554, 3, 6, 161, 11, 17711, 9653, 30, 8, 119, 609, 3, 5, 16, 8, 2583, 13, 8, 2816, 9, 358, 2496, 4191, 53, 2097, 33, 16163, 190, 1317, 4191, 53, 3102, 2597, 21, 738, 3, 390, 11, 9642, 4191, 53, 3, 5, 251, 5819, 53, 4373, 33, 4259, 7241, 126, 2193, 251, 45, 3, 9, 1196, 13, 2639, 2836, 41, 1396, 3, 6, 2073, 3, 6, 16961, 3, 6, 765, 364, 672, 3, 5, 3, 61, 3, 5, 3, 9, 525, 3102, 21, 284, 1139, 19, 5037, 8, 928, 251, 6537, 53, 3, 6, 11051, 12, 8, 523, 13, 48, 806, 1139, 3, 6, 4265, 8, 3278, 3, 6, 8, 750, 1419, 11, 1036, 45, 3160, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 251, 1002, 251, 1002, 1564, 879, 3, 6, 5030, 1564, 3, 5, 879, 1353, 16783, 3, 6, 758, 1], "trg": "agent technology;filtering;intelligent and personalized filtering;personal information agent;evolution;recommendation systems;adaptation and learning;agents and complex systems;agent based deployed applications;ubiquitous access", "tokenized_trg": [3102, 748, 32100, 4191, 53, 32100, 7951, 11, 9354, 4191, 53, 32100, 525, 251, 3102, 32100, 9009, 32100, 10919, 1002, 32100, 14340, 11, 1036, 32100, 4373, 11, 1561, 1002, 32100, 3102, 3, 390, 16163, 1564, 32100, 29840, 592, 1]}
{"src": "an adaptive information retrieval system based on associative networks . <sep> in this paper we present a multilingual information retrieval system that provides access to tourism information by exploiting the intuitiveness of natural language . in particular , we describe the knowledge representation model underlying the information retrieval system . this knowledge representation approach is based on associative networks and allows the definition of semantic relationships between domain intrinsic information items . the network structure is used to define weighted associations between information items and augments the system with a fuzzy search strategy . this particular search strategy is performed by a constrained spreading activation algorithm that implements information retrieval on associative networks . strictly speaking , we take the relatedness of terms into account and show , how this fuzzy search strategy yields beneficial results and , moreover , determines highly associated matches to users ' queries . thus , the combination of the associative network and the constrained spreading activation approach constitutes a search algorithm that evaluates the relatedness of terms and , therefore , provides a means for implicit query expansion .", "tokenized_src": [46, 25326, 251, 24515, 138, 358, 3, 390, 30, 38, 5444, 1528, 5275, 3, 5, 32100, 16, 48, 1040, 62, 915, 3, 9, 1249, 25207, 251, 24515, 138, 358, 24, 795, 592, 12, 8676, 251, 57, 9248, 53, 8, 12954, 655, 13, 793, 1612, 3, 5, 16, 1090, 3, 6, 62, 5530, 8, 1103, 6497, 825, 3, 10067, 8, 251, 24515, 138, 358, 3, 5, 48, 1103, 6497, 1295, 19, 3, 390, 30, 38, 5444, 1528, 5275, 11, 1250, 8, 4903, 13, 27632, 3079, 344, 3303, 26075, 251, 1173, 3, 5, 8, 1229, 1809, 19, 261, 12, 6634, 1293, 15, 26, 10906, 344, 251, 1173, 11, 15189, 7, 8, 358, 28, 3, 9, 31089, 960, 1998, 3, 5, 48, 1090, 960, 1998, 19, 3032, 57, 3, 9, 975, 22418, 16436, 5817, 257, 12628, 24, 4028, 7, 251, 24515, 138, 30, 38, 5444, 1528, 5275, 3, 5, 15154, 4461, 3, 6, 62, 240, 8, 1341, 655, 13, 1353, 139, 905, 11, 504, 3, 6, 149, 48, 31089, 960, 1998, 6339, 7, 6473, 772, 11, 3, 6, 72, 1890, 3, 6, 2082, 7, 1385, 1968, 6407, 12, 1105, 3, 31, 13154, 3, 5, 2932, 3, 6, 8, 2711, 13, 8, 38, 5444, 1528, 1229, 11, 8, 975, 22418, 16436, 5817, 257, 1295, 11708, 7, 3, 9, 960, 12628, 24, 6825, 7, 8, 1341, 655, 13, 1353, 11, 3, 6, 2459, 3, 6, 795, 3, 9, 598, 21, 21773, 11417, 5919, 3, 5, 1], "trg": "associative networks;multilingual information retrieval system;knowledge representation;knowledge representation model;constrained spreading activation;spreading activation;query expansion;natural language information retrieval;natural language query", "tokenized_trg": [38, 5444, 1528, 5275, 32100, 1249, 25207, 251, 24515, 138, 358, 32100, 1103, 6497, 32100, 1103, 6497, 825, 32100, 975, 22418, 16436, 5817, 257, 32100, 16436, 5817, 257, 32100, 11417, 5919, 32100, 793, 1612, 251, 24515, 138, 32100, 793, 1612, 11417, 1]}
{"src": "an analytical model based on g m <digit> with self similar input to provide end to end qos in 3g networks . <sep> the dramatic increase in demand for wireless internet access has lead to the introduction of new wireless architectures and systems including 3g , wi fi and wimax . 3g systems such as umts and cdma2000 are leaning towards an all ip architecture for transporting ip multimedia services , mainly due to its scalability and promising capability of inter working heterogeneous wireless access networks . during the last ten years , substantial work has been done to understand the nature of wired ip traffic and it has been proven that ip traffic exhibits self similar properties and burstiness over a large range of time scales . recently , because of the large deployment of new wireless architectures , researchers have focused their attention towards understanding the nature of traffic carried by different wireless architecture and early studies have shown that wireless data traffic also exhibits strong long range dependency . thus , the classical tele traffic theory based on a simple markovian process can not be used to evaluate the performance of wireless networks . unfortunately , the area of understanding and modeling of different kinds of wireless traffic is still immature which constitutes a problem since it is crucial to guarantee tight bound qos parameters to heterogeneous end users of the mobile internet . in this paper , we make several contributions to the accurate modeling of wireless ip traffic by presenting a novel analytical model that takes into account four different classes of self similar traffic . the model consists of four queues and is based on a g m <digit> queueing system . we analyze it on the basis of priority with no preemption and find exact packet delays . to date , no closed form expressions have been presented for g m <digit> with priority . categories and subject descriptors c . <digit> . <digit> . computer communication networks network management g . <digit> . mathematics of computing queueing theory , markov processes general terms theory , design , performance , reliability", "tokenized_src": [46, 18355, 825, 3, 390, 30, 3, 122, 3, 51, 32101, 28, 1044, 1126, 3785, 12, 370, 414, 12, 414, 3, 1824, 32, 7, 16, 220, 122, 5275, 3, 5, 32100, 8, 8417, 993, 16, 2173, 21, 5419, 1396, 592, 65, 991, 12, 8, 5302, 13, 126, 5419, 4648, 7, 11, 1002, 379, 220, 122, 3, 6, 11064, 361, 11, 11064, 9128, 3, 5, 220, 122, 1002, 224, 38, 561, 17, 7, 11, 3, 75, 26, 51, 9, 13527, 33, 90, 152, 53, 1587, 46, 66, 3, 23, 102, 4648, 21, 1855, 53, 3, 23, 102, 19131, 364, 3, 6, 3, 4894, 788, 12, 165, 3, 7, 1489, 2020, 11, 12894, 9004, 13, 1413, 464, 26481, 729, 15, 1162, 5419, 592, 5275, 3, 5, 383, 8, 336, 3, 324, 203, 3, 6, 7354, 161, 65, 118, 612, 12, 734, 8, 1405, 13, 4107, 26, 3, 23, 102, 2117, 11, 34, 65, 118, 4162, 24, 3, 23, 102, 2117, 6981, 7, 1044, 1126, 2605, 11, 7018, 2248, 655, 147, 3, 9, 508, 620, 13, 97, 2643, 7, 3, 5, 1310, 3, 6, 250, 13, 8, 508, 12001, 13, 126, 5419, 4648, 7, 3, 6, 4768, 43, 2937, 70, 1388, 1587, 1705, 8, 1405, 13, 2117, 4006, 57, 315, 5419, 4648, 11, 778, 2116, 43, 2008, 24, 5419, 331, 2117, 92, 6981, 7, 1101, 307, 620, 27804, 3, 5, 2932, 3, 6, 8, 11702, 3, 1931, 2117, 4516, 3, 390, 30, 3, 9, 650, 3946, 9881, 152, 433, 54, 59, 36, 261, 12, 6825, 8, 821, 13, 5419, 5275, 3, 5, 12050, 3, 6, 8, 616, 13, 1705, 11, 15309, 13, 315, 4217, 13, 5419, 2117, 19, 341, 256, 3357, 1462, 84, 11708, 7, 3, 9, 682, 437, 34, 19, 4462, 12, 3614, 4095, 8120, 3, 1824, 32, 7, 8755, 12, 26481, 729, 15, 1162, 414, 1105, 13, 8, 1156, 1396, 3, 5, 16, 48, 1040, 3, 6, 62, 143, 633, 7548, 12, 8, 4034, 15309, 13, 5419, 3, 23, 102, 2117, 57, 3, 12072, 3, 9, 3714, 18355, 825, 24, 1217, 139, 905, 662, 315, 2287, 13, 1044, 1126, 2117, 3, 5, 8, 825, 3, 6848, 13, 662, 16150, 7, 11, 19, 3, 390, 30, 3, 9, 3, 122, 3, 51, 32101, 16150, 53, 358, 3, 5, 62, 8341, 34, 30, 8, 1873, 13, 5734, 28, 150, 554, 29881, 11, 253, 2883, 13531, 16735, 3, 5, 12, 833, 3, 6, 150, 3168, 607, 3893, 7, 43, 118, 2569, 21, 3, 122, 3, 51, 32101, 28, 5734, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 3, 5, 1218, 1901, 5275, 1229, 758, 3, 122, 3, 5, 32101, 3, 5, 17082, 13, 10937, 16150, 53, 4516, 3, 6, 3157, 9789, 2842, 879, 1353, 4516, 3, 6, 408, 3, 6, 821, 3, 6, 10581, 1], "trg": "self similar;qos;3g networks;3g;umts;wireless ip traffic;self similar traffic;ggsn;traffic modelling;queuing model", "tokenized_trg": [1044, 1126, 32100, 3, 1824, 32, 7, 32100, 220, 122, 5275, 32100, 220, 122, 32100, 561, 17, 7, 32100, 5419, 3, 23, 102, 2117, 32100, 1044, 1126, 2117, 32100, 3, 4102, 7, 29, 32100, 2117, 24716, 32100, 238, 76, 53, 825, 1]}
{"src": "a computational approach to reflective meta reasoning about languages with bindings . <sep> we present a foundation for a computational meta theory of languages with bindings implemented in a computer aided formal reasoning environment . our theory provides the ability to reason abstractly about operators , languages , open ended languages , classes of languages , etc . the theory is based on the ideas of higher order abstract syntax , with an appropriate induction principle parameterized over the language ( i . e . a set of operators ) being used . in our approach , both the bound and free variables are treated uniformly and this uniform treatment extends naturally to variable length bindings . the implementation is reflective , namely there is a natural mapping between the meta language of the theorem prover and the object language of our theory . the object language substitution operation is mapped to the meta language substitution and does not need to be defined recursively . our approach does not require designing a custom type theory in this paper we describe the implementation of this foundational theory within a general purpose type theory . this work is fully implemented in the metaprl theorem prover , using the pre existing nuprl like martin lof style computational type theory . based on this implementation , we lay out an outline for a framework for programming language experimentation and exploration as well as a general reflective reasoning framework . this paper also includes a short survey of the existing approaches to syntactic reflection . categories and subject descriptors d . <digit> . <digit> programming languages formal definitions and theory syntax f . <digit> . <digit> mathematical logic and formal languages formal languages operations on languages general terms languages , theory , verification", "tokenized_src": [3, 9, 25850, 1295, 12, 22891, 10531, 20893, 81, 8024, 28, 11293, 7, 3, 5, 32100, 62, 915, 3, 9, 3361, 21, 3, 9, 25850, 10531, 4516, 13, 8024, 28, 11293, 7, 6960, 16, 3, 9, 1218, 3, 5385, 26, 4727, 20893, 1164, 3, 5, 69, 4516, 795, 8, 1418, 12, 1053, 9838, 120, 81, 9490, 3, 6, 8024, 3, 6, 539, 3492, 8024, 3, 6, 2287, 13, 8024, 3, 6, 672, 3, 5, 8, 4516, 19, 3, 390, 30, 8, 912, 13, 1146, 455, 9838, 28230, 3, 6, 28, 46, 2016, 16, 8291, 8454, 15577, 1601, 147, 8, 1612, 41, 3, 23, 3, 5, 3, 15, 3, 5, 3, 9, 356, 13, 9490, 3, 61, 271, 261, 3, 5, 16, 69, 1295, 3, 6, 321, 8, 8120, 11, 339, 11445, 33, 4260, 7117, 120, 11, 48, 7117, 1058, 4285, 7, 6212, 12, 7660, 2475, 11293, 7, 3, 5, 8, 4432, 19, 22891, 3, 6, 3, 17332, 132, 19, 3, 9, 793, 14670, 344, 8, 10531, 1612, 13, 8, 8, 127, 15, 51, 4410, 52, 11, 8, 3735, 1612, 13, 69, 4516, 3, 5, 8, 3735, 1612, 24028, 2986, 19, 3, 28400, 12, 8, 10531, 1612, 24028, 11, 405, 59, 174, 12, 36, 4802, 3, 60, 15983, 13830, 3, 5, 69, 1295, 405, 59, 1457, 8296, 3, 9, 1653, 686, 4516, 16, 48, 1040, 62, 5530, 8, 4432, 13, 48, 3361, 138, 4516, 441, 3, 9, 879, 1730, 686, 4516, 3, 5, 48, 161, 19, 1540, 6960, 16, 8, 10531, 102, 52, 40, 8, 127, 15, 51, 4410, 52, 3, 6, 338, 8, 554, 1895, 206, 102, 52, 40, 114, 3157, 17, 77, 3, 40, 858, 869, 25850, 686, 4516, 3, 5, 3, 390, 30, 48, 4432, 3, 6, 62, 8260, 91, 46, 11052, 21, 3, 9, 4732, 21, 6020, 1612, 5016, 257, 11, 9740, 38, 168, 38, 3, 9, 879, 22891, 20893, 4732, 3, 5, 48, 1040, 92, 963, 3, 9, 710, 3719, 13, 8, 1895, 6315, 12, 8953, 17, 2708, 447, 9619, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 6020, 8024, 4727, 4903, 7, 11, 4516, 28230, 3, 89, 3, 5, 32101, 3, 5, 32101, 18913, 9769, 11, 4727, 8024, 4727, 8024, 2673, 30, 8024, 879, 1353, 8024, 3, 6, 4516, 3, 6, 17549, 1], "trg": "reflection;meta reasoning;languages with bindings;languages with bindings;higher order abstract syntax;higher order abstract syntax;meta language;theorem prover;substitution;type theory;metaprl theorem prover;metaprl;nuprl like martin lof style computational type theory;nuprl;programming language experimentation;programming language;reflective reasoning;formal definition and theory;formal languages;hoas style operations;uniform reflection framework;computer aided reasoning;bruijn style operations;meta syntax;high order abstract syntax;system reflection;uniform reflection framework;runtime code generation;recursive definition;theory of syntax", "tokenized_trg": [9619, 32100, 10531, 20893, 32100, 8024, 28, 11293, 7, 32100, 8024, 28, 11293, 7, 32100, 1146, 455, 9838, 28230, 32100, 1146, 455, 9838, 28230, 32100, 10531, 1612, 32100, 8, 127, 15, 51, 4410, 52, 32100, 24028, 32100, 686, 4516, 32100, 10531, 102, 52, 40, 8, 127, 15, 51, 4410, 52, 32100, 10531, 102, 52, 40, 32100, 206, 102, 52, 40, 114, 3157, 17, 77, 3, 40, 858, 869, 25850, 686, 4516, 32100, 206, 102, 52, 40, 32100, 6020, 1612, 5016, 257, 32100, 6020, 1612, 32100, 22891, 20893, 32100, 4727, 4903, 11, 4516, 32100, 4727, 8024, 32100, 3534, 9, 7, 869, 2673, 32100, 7117, 9619, 4732, 32100, 1218, 3, 5385, 26, 20893, 32100, 3, 9052, 28469, 869, 2673, 32100, 10531, 28230, 32100, 306, 455, 9838, 28230, 32100, 358, 9619, 32100, 7117, 9619, 4732, 32100, 661, 715, 1081, 3381, 32100, 3, 60, 15983, 757, 4903, 32100, 4516, 13, 28230, 1]}
{"src": "an architectural style for high performance asymmetrical parallel computations . <sep> researchers with deep knowledge of scientific domains are now developing highly adaptive and irregular ( asymmetrical ) parallel computations , leading to challenges in both delivery of data for computation and mapping of processes to physical resources . using software engineering principles , we have developed a new communications protocol and architectural style for asymmetrical parallel computations called adapt . utilizing the support of architecturally aware middleware , we show that adapt provides a more efficient solution in terms of message passing and load balancing than asymmetrical parallel computations using collective calls in the message passing interface ( mpi ) or more advanced frameworks implementing explicit load balancing policies . additionally , developers using adapt gain significant windfall from good practices in software engineering , including implementation level support of architectural artifacts and separation of computational loci from communication protocols categories and subject descriptors d . <digit> . <digit> software engineering software architectures general terms design , performance", "tokenized_src": [46, 10900, 869, 21, 306, 821, 3, 9, 23596, 138, 8449, 29761, 7, 3, 5, 32100, 4768, 28, 1659, 1103, 13, 4290, 3303, 7, 33, 230, 2421, 1385, 25326, 11, 22085, 41, 3, 9, 23596, 138, 3, 61, 8449, 29761, 7, 3, 6, 1374, 12, 2428, 16, 321, 1929, 13, 331, 21, 29761, 11, 14670, 13, 2842, 12, 1722, 1438, 3, 5, 338, 889, 3867, 5559, 3, 6, 62, 43, 1597, 3, 9, 126, 5030, 10015, 11, 10900, 869, 21, 3, 9, 23596, 138, 8449, 29761, 7, 718, 3374, 3, 5, 3, 11182, 8, 380, 13, 10900, 120, 2718, 2214, 3404, 3, 6, 62, 504, 24, 3374, 795, 3, 9, 72, 2918, 1127, 16, 1353, 13, 1569, 5792, 11, 4002, 3, 10810, 4733, 145, 3, 9, 23596, 138, 8449, 29761, 7, 338, 6018, 3088, 16, 8, 1569, 5792, 3459, 41, 3, 1167, 23, 3, 61, 42, 72, 2496, 4732, 7, 3, 10311, 17623, 4002, 3, 10810, 4733, 3101, 3, 5, 11700, 3, 6, 5564, 338, 3374, 2485, 1516, 2943, 2857, 45, 207, 2869, 16, 889, 3867, 3, 6, 379, 4432, 593, 380, 13, 10900, 768, 23, 8717, 7, 11, 13608, 13, 25850, 2072, 23, 45, 1901, 18870, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 889, 3867, 889, 4648, 7, 879, 1353, 408, 3, 6, 821, 1], "trg": "asymmetrical parallel computations;adapt;software engineering;communication protocols;load balancing;collective calls;mpi;asymamtrical parallel computations;high performance computing;high performance computing", "tokenized_trg": [3, 9, 23596, 138, 8449, 29761, 7, 32100, 3374, 32100, 889, 3867, 32100, 1901, 18870, 32100, 4002, 3, 10810, 4733, 32100, 6018, 3088, 32100, 3, 1167, 23, 32100, 38, 63, 51, 265, 3929, 138, 8449, 29761, 7, 32100, 306, 821, 10937, 32100, 306, 821, 10937, 1]}
{"src": "an empirical comparison of supervised machine learning techniques in bioinformatics . <sep> research in bioinformatics is driven by the experimental data . current biological databases are populated by vast amounts of experimental data . machine learning has been widely applied to bioinformatics and has gained a lot of success in this research area . at present , with various learning algorithms available in the literature , researchers are facing difficulties in choosing the best method that can apply to their data . we performed an empirical study on <digit> individual learning systems and <digit> different combined methods on <digit> different biological data sets , and provide some suggested issues to be considered when answering the following questions ( i ) how does one choose which algorithm is best suitable for their data set ( ii ) are combined methods better than a single approach ( iii ) how does one compare the effectiveness of a particular algorithm to < a href <digit> . html <digit> > the others", "tokenized_src": [46, 23941, 4993, 13, 3, 23313, 1437, 1036, 2097, 16, 2392, 77, 8995, 447, 7, 3, 5, 32100, 585, 16, 2392, 77, 8995, 447, 7, 19, 6737, 57, 8, 11082, 331, 3, 5, 750, 11432, 16961, 33, 3, 23606, 57, 4248, 6201, 13, 11082, 331, 3, 5, 1437, 1036, 65, 118, 5456, 2930, 12, 2392, 77, 8995, 447, 7, 11, 65, 6886, 3, 9, 418, 13, 1269, 16, 48, 585, 616, 3, 5, 44, 915, 3, 6, 28, 796, 1036, 16783, 347, 16, 8, 6678, 3, 6, 4768, 33, 5008, 10308, 16, 4622, 8, 200, 1573, 24, 54, 1581, 12, 70, 331, 3, 5, 62, 3032, 46, 23941, 810, 30, 32101, 928, 1036, 1002, 11, 32101, 315, 3334, 2254, 30, 32101, 315, 11432, 331, 3369, 3, 6, 11, 370, 128, 5259, 807, 12, 36, 1702, 116, 18243, 8, 826, 746, 41, 3, 23, 3, 61, 149, 405, 80, 854, 84, 12628, 19, 200, 3255, 21, 70, 331, 356, 41, 3, 23, 23, 3, 61, 33, 3334, 2254, 394, 145, 3, 9, 712, 1295, 41, 3, 23, 23, 23, 3, 61, 149, 405, 80, 4048, 8, 9570, 13, 3, 9, 1090, 12628, 12, 3, 2, 3, 9, 3, 107, 60, 89, 32101, 3, 5, 3, 10500, 32101, 2490, 8, 717, 1], "trg": "supervised machine learning;supervised machine learning;machine learning;bioinformatics;biological data;training data;classification;cross validation;ensemble methods;performance evaluation", "tokenized_trg": [3, 23313, 1437, 1036, 32100, 3, 23313, 1437, 1036, 32100, 1437, 1036, 32100, 2392, 77, 8995, 447, 7, 32100, 11432, 331, 32100, 761, 331, 32100, 13774, 32100, 2269, 16148, 32100, 8784, 2254, 32100, 821, 5002, 1]}
{"src": "an expressive aspect language for system applications with arachne . <sep> c applications , in particular those using operating system level services , frequently comprise multiple crosscutting concerns network protocols and security are typical examples of such concerns . while these concerns can partially be addressed during design and implementation of an application , they frequently become an issue at runtime , e . g . , to avoid server downtime . a deployed network protocol might not be efficient enough and may thus need to be replaced . buffer overflows might be discovered that imply critical breaches in the security model of an application . a prefetching strategy may be required to enhance performance . while aspect oriented programming seems attractive in this context , none of the current aspect systems is expressive and efficient enough to address such concerns . this paper presents a new aspect system to provide a solution to this problem . while efficiency considerations have played an important part in the design of the aspect language , the language allows aspects to be expressed more concisely than previous approaches . in particular , it allows aspect programmers to quantify over sequences of execution points as well as over accesses through variable aliases . we show how the former can be used to modularize the replacement of network protocols and the latter to prevent buffer overflows . we also present an implementation of the language as an extension of arachne , a dynamic weaver for c applications . finally , we present performance evaluations supporting that arachne is fast enough to extend high performance applications , such as the squid web cache .", "tokenized_src": [46, 27821, 2663, 1612, 21, 358, 1564, 28, 3, 9, 3738, 12836, 3, 5, 32100, 3, 75, 1564, 3, 6, 16, 1090, 273, 338, 2699, 358, 593, 364, 3, 6, 4344, 9418, 1317, 2269, 3044, 1222, 3315, 1229, 18870, 11, 1034, 33, 4541, 4062, 13, 224, 3315, 3, 5, 298, 175, 3315, 54, 14610, 36, 8705, 383, 408, 11, 4432, 13, 46, 917, 3, 6, 79, 4344, 582, 46, 962, 44, 661, 715, 3, 6, 3, 15, 3, 5, 3, 122, 3, 5, 3, 6, 12, 1792, 2460, 323, 715, 3, 5, 3, 9, 16163, 1229, 10015, 429, 59, 36, 2918, 631, 11, 164, 2932, 174, 12, 36, 5821, 3, 5, 17164, 147, 7631, 7, 429, 36, 3883, 24, 3, 18531, 2404, 27358, 16, 8, 1034, 825, 13, 46, 917, 3, 5, 3, 9, 554, 89, 24335, 53, 1998, 164, 36, 831, 12, 3391, 821, 3, 5, 298, 2663, 3, 9442, 6020, 1330, 5250, 16, 48, 2625, 3, 6, 5839, 13, 8, 750, 2663, 1002, 19, 27821, 11, 2918, 631, 12, 1115, 224, 3315, 3, 5, 48, 1040, 6621, 3, 9, 126, 2663, 358, 12, 370, 3, 9, 1127, 12, 48, 682, 3, 5, 298, 3949, 4587, 7, 43, 1944, 46, 359, 294, 16, 8, 408, 13, 8, 2663, 1612, 3, 6, 8, 1612, 1250, 3149, 12, 36, 7103, 72, 22874, 120, 145, 1767, 6315, 3, 5, 16, 1090, 3, 6, 34, 1250, 2663, 478, 5567, 12, 30389, 147, 5932, 7, 13, 9328, 979, 38, 168, 38, 147, 592, 15, 7, 190, 7660, 3, 5434, 2260, 3, 5, 62, 504, 149, 8, 1798, 54, 36, 261, 12, 15741, 1737, 8, 3709, 13, 1229, 18870, 11, 8, 7722, 12, 1709, 17164, 147, 7631, 7, 3, 5, 62, 92, 915, 46, 4432, 13, 8, 1612, 38, 46, 4924, 13, 3, 9, 3738, 12836, 3, 6, 3, 9, 4896, 21938, 52, 21, 3, 75, 1564, 3, 5, 2031, 3, 6, 62, 915, 821, 5002, 7, 3956, 24, 3, 9, 3738, 12836, 19, 1006, 631, 12, 4285, 306, 821, 1564, 3, 6, 224, 38, 8, 3, 7, 1169, 26, 765, 11800, 3, 5, 1], "trg": "aspect language;system applications;arachne;c applications;operating system;network protocol;buffer overflows;prefetching;web cache;sequence pointcut;binary code;dynamic weaving", "tokenized_trg": [2663, 1612, 32100, 358, 1564, 32100, 3, 9, 3738, 12836, 32100, 3, 75, 1564, 32100, 2699, 358, 32100, 1229, 10015, 32100, 17164, 147, 7631, 7, 32100, 554, 89, 24335, 53, 32100, 765, 11800, 32100, 5932, 500, 3044, 32100, 14865, 1081, 32100, 4896, 29162, 1]}
{"src": "an index system for quality synthesis evaluation of btoc business website . <sep> it is important for successful electronic business to have a hi quality business website . so we need an accurate and effective index system to evaluate and analyses the quality of the business website . in this paper , the evaluation index system following the grey box ' principle is proposed which considers both efficiency of business website and performance of electronic business system . using r hierarchical clustering method to extract the typical indexes from sub indexes is theoretically proved to have a rationality and effectiveness . finally , the evaluation method is briefly discussed . categories and subject descriptors <unk> . <digit>", "tokenized_src": [46, 5538, 358, 21, 463, 3, 17282, 5002, 13, 3, 115, 235, 75, 268, 475, 3, 5, 32100, 34, 19, 359, 21, 1574, 3031, 268, 12, 43, 3, 9, 7102, 463, 268, 475, 3, 5, 78, 62, 174, 46, 4034, 11, 1231, 5538, 358, 12, 6825, 11, 15282, 8, 463, 13, 8, 268, 475, 3, 5, 16, 48, 1040, 3, 6, 8, 5002, 5538, 358, 826, 8, 7592, 1367, 3, 31, 8454, 19, 4382, 84, 1099, 7, 321, 3949, 13, 268, 475, 11, 821, 13, 3031, 268, 358, 3, 5, 338, 3, 52, 1382, 7064, 1950, 9068, 53, 1573, 12, 5819, 8, 4541, 5538, 15, 7, 45, 769, 5538, 15, 7, 19, 13605, 120, 9193, 12, 43, 3, 9, 12226, 485, 11, 9570, 3, 5, 2031, 3, 6, 8, 5002, 1573, 19, 16964, 5172, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 2, 3, 5, 32101, 1], "trg": "quality synthesis evaluation;business website;r hierarchical clustering;r hierarchical clustering method;clustering;fuzzy analysis;quality evaluation index;correlation index;e commerce;b2c websites;system performance;representitive indexes;index optimization;evaluation system", "tokenized_trg": [463, 3, 17282, 5002, 32100, 268, 475, 32100, 3, 52, 1382, 7064, 1950, 9068, 53, 32100, 3, 52, 1382, 7064, 1950, 9068, 53, 1573, 32100, 9068, 53, 32100, 31089, 1693, 32100, 463, 5002, 5538, 32100, 18712, 5538, 32100, 3, 15, 12794, 32100, 3, 115, 357, 75, 3395, 32100, 358, 821, 32100, 4221, 23, 3268, 5538, 15, 7, 32100, 5538, 11295, 32100, 5002, 358, 1]}
{"src": "an integrated environment to visually construct 3d animations . <sep> in this paper , we present an expressive 3d animation environment that enables users to rapidly and visually prototype animated worlds with a fully 3d user interface . a 3d device allows the specification of complex 3d motion , while virtual tools are visible mediators that live in the same 3d space as application objects and supply the interaction metaphors to control them . in our environment , there is no intrinsic difference between user interface and application objects . multi way constraints provide the necessary tight coupling among components that makes it possible to seamlessly compose animated and interactive behaviors . by recording the effects of manipulations , all the expressive power of the 3d user interface is exploited to define animations . effective editing of recorded manipulations is made possible by compacting all continuous parameter evolutions with an incremental data reduction algorithm , designed to preserve both geometry and timing . the automatic generation of editable representations of interactive performances overcomes one of the major limitations of current performance animation systems . novel interactive solutions to animation problems are made possible by the tight integration of all system components . in particular , animations can be synchronized by using constrained manipulation during playback . the accompanying video tape illustrates our approach with interactive sequences showing the visual construction of 3d animated worlds . all the demonstrations in the video were recorded live and were not edited .", "tokenized_src": [46, 4580, 1164, 12, 17307, 6774, 220, 26, 9301, 7, 3, 5, 32100, 16, 48, 1040, 3, 6, 62, 915, 46, 27821, 220, 26, 9301, 1164, 24, 3, 7161, 1105, 12, 7313, 11, 17307, 14402, 16822, 296, 7, 28, 3, 9, 1540, 220, 26, 1139, 3459, 3, 5, 3, 9, 220, 26, 1407, 1250, 8, 16726, 13, 1561, 220, 26, 4644, 3, 6, 298, 4291, 1339, 33, 5183, 26882, 7, 24, 619, 16, 8, 337, 220, 26, 628, 38, 917, 4820, 11, 1899, 8, 6565, 21253, 7, 12, 610, 135, 3, 5, 16, 69, 1164, 3, 6, 132, 19, 150, 26075, 1750, 344, 1139, 3459, 11, 917, 4820, 3, 5, 1249, 194, 17765, 370, 8, 1316, 4095, 4897, 697, 859, 3379, 24, 656, 34, 487, 12, 20302, 15283, 16822, 11, 6076, 15400, 3, 5, 57, 5592, 8, 1951, 13, 18175, 7, 3, 6, 66, 8, 27821, 579, 13, 8, 220, 26, 1139, 3459, 19, 9248, 15, 26, 12, 6634, 9301, 7, 3, 5, 1231, 8414, 13, 4381, 18175, 7, 19, 263, 487, 57, 6607, 53, 66, 7558, 15577, 9009, 7, 28, 46, 28351, 331, 4709, 12628, 3, 6, 876, 12, 8996, 321, 23898, 11, 9398, 3, 5, 8, 6569, 3381, 13, 4777, 179, 6497, 7, 13, 6076, 7357, 8269, 7, 80, 13, 8, 779, 10005, 13, 750, 821, 9301, 1002, 3, 5, 3714, 6076, 1275, 12, 9301, 982, 33, 263, 487, 57, 8, 4095, 5660, 13, 66, 358, 3379, 3, 5, 16, 1090, 3, 6, 9301, 7, 54, 36, 3, 15977, 1601, 57, 338, 975, 22418, 18175, 383, 577, 1549, 3, 5, 8, 12235, 53, 671, 4874, 11485, 7, 69, 1295, 28, 6076, 5932, 7, 2924, 8, 3176, 1449, 13, 220, 26, 16822, 296, 7, 3, 5, 66, 8, 10686, 7, 16, 8, 671, 130, 4381, 619, 11, 130, 59, 8307, 3, 5, 1], "trg": "visualization;3d animation;3d animation environment;3d user interface;virtual tools;data reduction;data reduction;dynamic model;multi way constrained architecture;3d widgets;local propagation constraints;animation synchronization;recording 3d manipulation;3d interaction;human interaction;computer graphics;object oriented graphics", "tokenized_trg": [21744, 32100, 220, 26, 9301, 32100, 220, 26, 9301, 1164, 32100, 220, 26, 1139, 3459, 32100, 4291, 1339, 32100, 331, 4709, 32100, 331, 4709, 32100, 4896, 825, 32100, 1249, 194, 975, 22418, 4648, 32100, 220, 26, 19385, 7, 32100, 415, 17554, 257, 17765, 32100, 9301, 3, 15977, 1707, 32100, 5592, 220, 26, 18175, 32100, 220, 26, 6565, 32100, 936, 6565, 32100, 1218, 6484, 32100, 3735, 3, 9442, 6484, 1]}
{"src": "an intensional approach to the specification of test cases for database applications . <sep> when testing database applications , in addition to creating in memory fixtures it is also necessary to create an initial database state that is appropriate for each test case . current approaches either require exact database states to be specified in advance , or else generate a single initial state ( under guidance from the user ) that is intended to be suitable for execution of all test cases . the first method allows large test suites to be executed in batch , but requires considerable programmer effort to create the test cases ( and to maintain them ) . the second method requires less programmer effort , but increases the likelihood that test cases will fail in non fault situations , due to unexpected changes to the content of the database . in this paper , we propose a new approach in which the database states required for testing are specified intensionally , as constrained queries , that can be used to prepare the database for testing automatically . this technique overcomes the limitations of the other approaches , and does not appear to impose significant performance overheads . categories and subject descriptors d . <digit> . <digit> software engineering testing and debugging testing tools general terms experimentation , verification", "tokenized_src": [46, 9608, 6318, 1295, 12, 8, 16726, 13, 794, 1488, 21, 3501, 1564, 3, 5, 32100, 116, 2505, 3501, 1564, 3, 6, 16, 811, 12, 1577, 16, 2594, 14613, 34, 19, 92, 1316, 12, 482, 46, 2332, 3501, 538, 24, 19, 2016, 21, 284, 794, 495, 3, 5, 750, 6315, 893, 1457, 2883, 3501, 2315, 12, 36, 7173, 16, 3245, 3, 6, 42, 1307, 3806, 3, 9, 712, 2332, 538, 41, 365, 4864, 45, 8, 1139, 3, 61, 24, 19, 3855, 12, 36, 3255, 21, 9328, 13, 66, 794, 1488, 3, 5, 8, 166, 1573, 1250, 508, 794, 3132, 7, 12, 36, 13763, 16, 11587, 3, 6, 68, 2311, 10710, 2486, 52, 1941, 12, 482, 8, 794, 1488, 41, 11, 12, 1961, 135, 3, 61, 3, 5, 8, 511, 1573, 2311, 705, 2486, 52, 1941, 3, 6, 68, 5386, 8, 17902, 24, 794, 1488, 56, 5124, 16, 529, 7828, 4147, 3, 6, 788, 12, 7544, 1112, 12, 8, 738, 13, 8, 3501, 3, 5, 16, 48, 1040, 3, 6, 62, 4230, 3, 9, 126, 1295, 16, 84, 8, 3501, 2315, 831, 21, 2505, 33, 7173, 16, 13177, 1427, 3, 6, 38, 975, 22418, 13154, 3, 6, 24, 54, 36, 261, 12, 2967, 8, 3501, 21, 2505, 3269, 3, 5, 48, 3317, 8269, 7, 8, 10005, 13, 8, 119, 6315, 3, 6, 11, 405, 59, 2385, 12, 3, 12436, 1516, 821, 15998, 7, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 889, 3867, 2505, 11, 20, 14588, 3896, 2505, 1339, 879, 1353, 5016, 257, 3, 6, 17549, 1], "trg": "databases;dot unit;lesser programmer effort for test cases;efficient testing;seamless integration;database testing;performance testing;testing for database systems;query based language;software testing;improvement for the intensional test cases;intensional test cases;testing framework", "tokenized_trg": [16961, 32100, 103, 17, 1745, 32100, 18605, 2486, 52, 1941, 21, 794, 1488, 32100, 2918, 2505, 32100, 15870, 5660, 32100, 3501, 2505, 32100, 821, 2505, 32100, 2505, 21, 3501, 1002, 32100, 11417, 3, 390, 1612, 32100, 889, 2505, 32100, 4179, 21, 8, 9608, 6318, 794, 1488, 32100, 9608, 6318, 794, 1488, 32100, 2505, 4732, 1]}
{"src": "analysis of soft handover measurements in 3g network . <sep> a neural network based clustering method for the analysis of soft handovers in 3g network is introduced . the method is highly visual and it could be utilized in explorative analysis of mobile networks . in this paper , the method is used to find groups of similar mobile cell pairs in the sense of handover measurements . the groups or clusters found by the method are characterized by the rate of successful handovers as well as the causes of failing handover attempts . the most interesting clusters are those which represent certain type of problems in handover attempts . by comparing variable histograms of a selected cluster to histograms of the whole data set an application domain expert may find some explanations on problems . two clusters are investigated further and causes of failing handover attempts are discussed . categories and subject descriptors h . <digit> . <digit> information systems applications communications applications information browsers i . <digit> . <digit> pattern recognition clustering general terms algorithms , management , performance", "tokenized_src": [1693, 13, 1835, 609, 1890, 11110, 16, 220, 122, 1229, 3, 5, 32100, 3, 9, 24228, 1229, 3, 390, 9068, 53, 1573, 21, 8, 1693, 13, 1835, 609, 1890, 7, 16, 220, 122, 1229, 19, 3665, 3, 5, 8, 1573, 19, 1385, 3176, 11, 34, 228, 36, 11411, 16, 26903, 1528, 1693, 13, 1156, 5275, 3, 5, 16, 48, 1040, 3, 6, 8, 1573, 19, 261, 12, 253, 1637, 13, 1126, 1156, 2358, 14152, 16, 8, 1254, 13, 609, 1890, 11110, 3, 5, 8, 1637, 42, 9068, 7, 435, 57, 8, 1573, 33, 3, 16730, 57, 8, 1080, 13, 1574, 609, 1890, 7, 38, 168, 38, 8, 4110, 13, 12385, 609, 1890, 9048, 3, 5, 8, 167, 1477, 9068, 7, 33, 273, 84, 4221, 824, 686, 13, 982, 16, 609, 1890, 9048, 3, 5, 57, 3, 14622, 7660, 112, 17, 16275, 7, 13, 3, 9, 2639, 9068, 12, 112, 17, 16275, 7, 13, 8, 829, 331, 356, 46, 917, 3303, 2205, 164, 253, 128, 7295, 7, 30, 982, 3, 5, 192, 9068, 7, 33, 18277, 856, 11, 4110, 13, 12385, 609, 1890, 9048, 33, 5172, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1002, 1564, 5030, 1564, 251, 3509, 7, 3, 23, 3, 5, 32101, 3, 5, 32101, 3275, 5786, 9068, 53, 879, 1353, 16783, 3, 6, 758, 3, 6, 821, 1], "trg": "soft handover;soft handover;3g network;neural networks;histograms;neural network algorithm;self organizing map;mobility management;data mining;hierarchical clustering;decrease in computational complexity;visualization capability;data mining;key performance indicator of handover;two phase clustering algorithm;cluster analysis", "tokenized_trg": [1835, 609, 1890, 32100, 1835, 609, 1890, 32100, 220, 122, 1229, 32100, 24228, 5275, 32100, 112, 17, 16275, 7, 32100, 24228, 1229, 12628, 32100, 1044, 14308, 2828, 32100, 12337, 758, 32100, 331, 5558, 32100, 1382, 7064, 1950, 9068, 53, 32100, 6313, 16, 25850, 11641, 32100, 21744, 9004, 32100, 331, 5558, 32100, 843, 821, 11169, 13, 609, 1890, 32100, 192, 3944, 9068, 53, 12628, 32100, 9068, 1693, 1]}
{"src": "aspect oriented programming for a component based real life application a case study . <sep> aspect oriented programming , a relatively new programming paradigm , earned the scientific community ' s attention . the paradigm is already evaluated for traditional oop and component based software development with remarkable results . however , most of the published work , while of excellent quality , is mostly theoretical or involves evaluation of aop for research oriented and experimental software . unlike the previous work , this study considers the aop paradigm for solving real life problems , which can be faced in any commercial software . we evaluate aop in the development of a high performance component based web crawling system , and compare the process with the development of the same system without aop . the results of the case study mostly favor the aspect oriented paradigm .", "tokenized_src": [2663, 3, 9442, 6020, 21, 3, 9, 3876, 3, 390, 490, 280, 917, 3, 9, 495, 810, 3, 5, 32100, 2663, 3, 9442, 6020, 3, 6, 3, 9, 4352, 126, 6020, 20491, 3, 6, 4964, 8, 4290, 573, 3, 31, 3, 7, 1388, 3, 5, 8, 20491, 19, 641, 14434, 21, 1435, 3, 6631, 11, 3876, 3, 390, 889, 606, 28, 8562, 772, 3, 5, 983, 3, 6, 167, 13, 8, 1790, 161, 3, 6, 298, 13, 1287, 463, 3, 6, 19, 3323, 13605, 42, 5806, 5002, 13, 3, 9, 32, 102, 21, 585, 3, 9442, 11, 11082, 889, 3, 5, 9770, 8, 1767, 161, 3, 6, 48, 810, 1099, 7, 8, 3, 9, 32, 102, 20491, 21, 11795, 490, 280, 982, 3, 6, 84, 54, 36, 7865, 16, 136, 1328, 889, 3, 5, 62, 6825, 3, 9, 32, 102, 16, 8, 606, 13, 3, 9, 306, 821, 3876, 3, 390, 765, 18639, 53, 358, 3, 6, 11, 4048, 8, 433, 28, 8, 606, 13, 8, 337, 358, 406, 3, 9, 32, 102, 3, 5, 8, 772, 13, 8, 495, 810, 3323, 4971, 8, 2663, 3, 9442, 20491, 3, 5, 1], "trg": "aspect oriented programming;case study;programming paradigms;evaluation;oop;aop;development process experiment metrics;programming paradigm comparison;software development process experiment;aspect oriented programming application;object oriented programming;web crawler implementation;component based application", "tokenized_trg": [2663, 3, 9442, 6020, 32100, 495, 810, 32100, 6020, 20491, 7, 32100, 5002, 32100, 3, 6631, 32100, 3, 9, 32, 102, 32100, 606, 433, 5016, 15905, 32100, 6020, 20491, 4993, 32100, 889, 606, 433, 5016, 32100, 2663, 3, 9442, 6020, 917, 32100, 3735, 3, 9442, 6020, 32100, 765, 18639, 49, 4432, 32100, 3876, 3, 390, 917, 1]}
{"src": "attack resilient hierarchical data aggregation in sensor networks . <sep> in a large sensor network , in network data aggregation , i . e . , combining partial results at intermediate nodes during message routing , significantly reduces the amount of communication and hence the energy consumed . recently several researchers have proposed robust aggregation frameworks , which combine multi path routing schemes with duplicate insensitive algorithms , to accurately compute aggregates ( e . g . , sum , count , average ) in spite of message losses resulting from node and transmission failures . however , these aggregation frameworks have been designed without security in mind . given the lack of hardware support for tamper resistance and the unattended nature of sensor nodes , sensor networks are highly vulnerable to node compromises . we show that even if a few compromised nodes contribute false sub aggregate values , this results in large errors in the aggregate computed at the root of the hierarchy . we present modifications to the aggregation algorithms that guard against such attacks , i . e . , we present algorithms for resilient hierarchical data aggregation despite the presence of compromised nodes in the aggregation hierarchy . we evaluate the performance and costs of our approach via both analysis and simulation . our results show that our approach is scalable and efficient . categories and subject descriptors c . <digit> . <digit> computer communication networks general security and protection c . <digit> . <digit> computer communication networks network architecture and design wireless communication d . <digit> . <digit> operating systems security and protection cryptographic controls k . <digit> . <digit> management of computing and information systems security and protection general terms algorithms , design , security", "tokenized_src": [3211, 24139, 1382, 7064, 1950, 331, 3, 31761, 23, 106, 16, 7824, 5275, 3, 5, 32100, 16, 3, 9, 508, 7824, 1229, 3, 6, 16, 1229, 331, 3, 31761, 23, 106, 3, 6, 3, 23, 3, 5, 3, 15, 3, 5, 3, 6, 3, 13275, 11807, 772, 44, 18957, 150, 1395, 383, 1569, 22764, 3, 6, 4019, 1428, 7, 8, 866, 13, 1901, 11, 10321, 8, 827, 16647, 3, 5, 1310, 633, 4768, 43, 4382, 6268, 3, 31761, 23, 106, 4732, 7, 3, 6, 84, 5148, 1249, 2071, 22764, 15171, 28, 19197, 16, 22118, 16783, 3, 6, 12, 12700, 29216, 12955, 7, 41, 3, 15, 3, 5, 3, 122, 3, 5, 3, 6, 4505, 3, 6, 3476, 3, 6, 1348, 3, 61, 16, 17912, 13, 1569, 8467, 3, 5490, 45, 150, 221, 11, 5790, 3338, 7, 3, 5, 983, 3, 6, 175, 3, 31761, 23, 106, 4732, 7, 43, 118, 876, 406, 1034, 16, 809, 3, 5, 787, 8, 2136, 13, 4214, 380, 21, 3, 17, 4624, 49, 5673, 11, 8, 73, 144, 15443, 1405, 13, 7824, 150, 1395, 3, 6, 7824, 5275, 33, 1385, 9930, 12, 150, 221, 12326, 7, 3, 5, 62, 504, 24, 237, 3, 99, 3, 9, 360, 22001, 150, 1395, 4139, 6136, 769, 12955, 2620, 3, 6, 48, 772, 16, 508, 6854, 16, 8, 12955, 29216, 26, 44, 8, 5465, 13, 8, 25515, 3, 5, 62, 915, 14172, 12, 8, 3, 31761, 23, 106, 16783, 24, 4879, 581, 224, 6032, 3, 6, 3, 23, 3, 5, 3, 15, 3, 5, 3, 6, 62, 915, 16783, 21, 24139, 1382, 7064, 1950, 331, 3, 31761, 23, 106, 3, 3565, 8, 3053, 13, 22001, 150, 1395, 16, 8, 3, 31761, 23, 106, 25515, 3, 5, 62, 6825, 8, 821, 11, 1358, 13, 69, 1295, 1009, 321, 1693, 11, 11108, 3, 5, 69, 772, 504, 24, 69, 1295, 19, 3, 24079, 11, 2918, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 1218, 1901, 5275, 879, 1034, 11, 1711, 3, 75, 3, 5, 32101, 3, 5, 32101, 1218, 1901, 5275, 1229, 4648, 11, 408, 5419, 1901, 3, 26, 3, 5, 32101, 3, 5, 32101, 2699, 1002, 1034, 11, 1711, 17620, 14797, 7415, 3, 157, 3, 5, 32101, 3, 5, 32101, 758, 13, 10937, 11, 251, 1002, 1034, 11, 1711, 879, 1353, 16783, 3, 6, 408, 3, 6, 1034, 1], "trg": "attack resilient;data aggregation;sensor networks;in network data aggregation;robust aggregation;falsified sub aggregate attack;synopsis diffusion aggregation framework;hierarchical aggregation;sensor network security;count aggregate;network aggregation algorithms;attack resilient heirarchical data aggregation;falsified local value attack;sum aggregate;node compromise prevention;synopsis diffusion", "tokenized_trg": [3211, 24139, 32100, 331, 3, 31761, 23, 106, 32100, 7824, 5275, 32100, 16, 1229, 331, 3, 31761, 23, 106, 32100, 6268, 3, 31761, 23, 106, 32100, 12553, 7, 3676, 769, 12955, 3211, 32100, 8953, 9280, 159, 21740, 3, 31761, 23, 106, 4732, 32100, 1382, 7064, 1950, 3, 31761, 23, 106, 32100, 7824, 1229, 1034, 32100, 3476, 12955, 32100, 1229, 3, 31761, 23, 106, 16783, 32100, 3211, 24139, 3, 17265, 7064, 1950, 331, 3, 31761, 23, 106, 32100, 12553, 7, 3676, 415, 701, 3211, 32100, 4505, 12955, 32100, 150, 221, 12326, 9793, 32100, 8953, 9280, 159, 21740, 1]}
{"src": "automated rich presentation of a semantic topic . <sep> to have a rich presentation of a topic , it is not only expected that many relevant multimodal information , including images , text , audio and video , could be extracted it is also important to organize and summarize the related information , and provide users a concise and informative storyboard about the target topic . it facilitates users to quickly grasp and better understand the content of a topic . in this paper , we present a novel approach to automatically generating a rich presentation of a given semantic topic . in our proposed approach , the related multimodal information of a given topic is first extracted from available multimedia databases or websites . since each topic usually contains multiple events , a text based event clustering algorithm is then performed with a generative model . other media information , such as the representative images , possibly available video clips and flashes ( interactive animates ) , are associated with each related event . a storyboard of the target topic is thus generated by integrating each event and its corresponding multimodal information . finally , to make the storyboard more expressive and attractive , an incidental music is chosen as background and is aligned with the storyboard . a user study indicates that the presented system works quite well on our testing examples . categories and subject descriptors h . <digit> . <digit> information interfaces and presentation group and organization interfaces organizational design h . <digit> . <digit> information storage and retrieval content analysis and indexing abstracting methods . general terms algorithms , design , management , experimentation , theory", "tokenized_src": [10069, 2354, 3831, 13, 3, 9, 27632, 2859, 3, 5, 32100, 12, 43, 3, 9, 2354, 3831, 13, 3, 9, 2859, 3, 6, 34, 19, 59, 163, 1644, 24, 186, 2193, 1249, 20226, 251, 3, 6, 379, 1383, 3, 6, 1499, 3, 6, 2931, 11, 671, 3, 6, 228, 36, 21527, 34, 19, 92, 359, 12, 7958, 11, 21603, 8, 1341, 251, 3, 6, 11, 370, 1105, 3, 9, 22874, 11, 11152, 733, 1976, 81, 8, 2387, 2859, 3, 5, 34, 6758, 7, 1105, 12, 1224, 14304, 11, 394, 734, 8, 738, 13, 3, 9, 2859, 3, 5, 16, 48, 1040, 3, 6, 62, 915, 3, 9, 3714, 1295, 12, 3269, 3, 11600, 3, 9, 2354, 3831, 13, 3, 9, 787, 27632, 2859, 3, 5, 16, 69, 4382, 1295, 3, 6, 8, 1341, 1249, 20226, 251, 13, 3, 9, 787, 2859, 19, 166, 21527, 45, 347, 19131, 16961, 42, 3395, 3, 5, 437, 284, 2859, 1086, 2579, 1317, 984, 3, 6, 3, 9, 1499, 3, 390, 605, 9068, 53, 12628, 19, 258, 3032, 28, 3, 9, 3, 25181, 825, 3, 5, 119, 783, 251, 3, 6, 224, 38, 8, 6978, 1383, 3, 6, 3673, 347, 671, 16234, 11, 4923, 15, 7, 41, 6076, 3, 29264, 7, 3, 61, 3, 6, 33, 1968, 28, 284, 1341, 605, 3, 5, 3, 9, 733, 1976, 13, 8, 2387, 2859, 19, 2932, 6126, 57, 3, 20030, 284, 605, 11, 165, 3, 9921, 1249, 20226, 251, 3, 5, 2031, 3, 6, 12, 143, 8, 733, 1976, 72, 27821, 11, 5250, 3, 6, 46, 5415, 138, 723, 19, 3934, 38, 2458, 11, 19, 7901, 15, 26, 28, 8, 733, 1976, 3, 5, 3, 9, 1139, 810, 9379, 24, 8, 2569, 358, 930, 882, 168, 30, 69, 2505, 4062, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 3459, 7, 11, 3831, 563, 11, 1470, 3459, 7, 13477, 408, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 738, 1693, 11, 5538, 53, 9838, 53, 2254, 3, 5, 879, 1353, 16783, 3, 6, 408, 3, 6, 758, 3, 6, 5016, 257, 3, 6, 4516, 1], "trg": "rich presentation;multimodality;storyboard;event clustering;events clustering;high level semantics;communication and multimedia;multimedia fusion;multimedia authoring;documentary and movie;images , videos and audio technologies;representative media;subjective multiple events;multi modal information;rich video clips and flashes;generate storyboard", "tokenized_trg": [2354, 3831, 32100, 1249, 20226, 485, 32100, 733, 1976, 32100, 605, 9068, 53, 32100, 984, 9068, 53, 32100, 306, 593, 27632, 7, 32100, 1901, 11, 19131, 32100, 19131, 3, 7316, 32100, 19131, 2291, 53, 32100, 12481, 11, 1974, 32100, 1383, 3, 6, 3075, 11, 2931, 2896, 32100, 6978, 783, 32100, 24242, 1317, 984, 32100, 1249, 3, 20226, 251, 32100, 2354, 671, 16234, 11, 4923, 15, 7, 32100, 3806, 733, 1976, 1]}
{"src": "a database security course on a shoestring . <sep> database security has paramount importance in industrial , civilian and government domains . despite its importance , our search reveals that only a small number of database security courses are being offered . in this paper , we share our experience in developing and offering an undergraduate elective course on database security with limited resources . we believe that database security should be considered in its entirety rather than being component specific . therefore , we emphasize that students develop and implement a database security plan for a typical real world application . in addition to the key theoretical concepts , students obtain hands on experience with two popular database systems . we encourage students to learn independently making use of the documentation and technical resources freely available on the internet . this way , our hope is that they will be able to adapt to emerging systems and application scenarios . categories and subject descriptors h . <digit> . <digit> database management database administration security , integrity , and protection k . <digit> . <digit> computers and education computer and information science education curriculum . general terms security .", "tokenized_src": [3, 9, 3501, 1034, 503, 30, 3, 9, 9585, 16099, 3, 5, 32100, 3501, 1034, 65, 26979, 3172, 16, 2913, 3, 6, 14705, 11, 789, 3303, 7, 3, 5, 3, 3565, 165, 3172, 3, 6, 69, 960, 3, 15503, 24, 163, 3, 9, 422, 381, 13, 3501, 1034, 2996, 33, 271, 1860, 3, 5, 16, 48, 1040, 3, 6, 62, 698, 69, 351, 16, 2421, 11, 1772, 46, 12260, 11924, 757, 503, 30, 3501, 1034, 28, 1643, 1438, 3, 5, 62, 857, 24, 3501, 1034, 225, 36, 1702, 16, 165, 26771, 1066, 145, 271, 3876, 806, 3, 5, 2459, 3, 6, 62, 15523, 24, 481, 1344, 11, 4028, 3, 9, 3501, 1034, 515, 21, 3, 9, 4541, 490, 296, 917, 3, 5, 16, 811, 12, 8, 843, 13605, 6085, 3, 6, 481, 3442, 1780, 30, 351, 28, 192, 1012, 3501, 1002, 3, 5, 62, 2454, 481, 12, 669, 13971, 492, 169, 13, 8, 7192, 11, 2268, 1438, 14019, 347, 30, 8, 1396, 3, 5, 48, 194, 3, 6, 69, 897, 19, 24, 79, 56, 36, 3, 179, 12, 3374, 12, 7821, 1002, 11, 917, 13911, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 3501, 3602, 1034, 3, 6, 9322, 3, 6, 11, 1711, 3, 157, 3, 5, 32101, 3, 5, 32101, 7827, 11, 1073, 1218, 11, 251, 2056, 1073, 7850, 3, 5, 879, 1353, 1034, 3, 5, 1], "trg": "database security;database security course;database security course;database security;database security plan;database security plan;security plan;hands on experience;hands on;database system;administrators;real life database security;xml security;data access;statistical security;security breaches;undergraduate course;assignments;mysql security;privacy issues;statistical database security;undergraduate database security course;topics;few database security courses;importance of database security;database privacy;high risk of sensitive information;labs;oracle security;secure information;cryptography;right blend of theory and practice;access privilege system;database security education;undergraduate students;laboratory active learning;real life databases hands on", "tokenized_trg": [3501, 1034, 32100, 3501, 1034, 503, 32100, 3501, 1034, 503, 32100, 3501, 1034, 32100, 3501, 1034, 515, 32100, 3501, 1034, 515, 32100, 1034, 515, 32100, 1780, 30, 351, 32100, 1780, 30, 32100, 3501, 358, 32100, 17747, 32100, 490, 280, 3501, 1034, 32100, 3, 226, 51, 40, 1034, 32100, 331, 592, 32100, 11775, 1034, 32100, 1034, 27358, 32100, 12260, 503, 32100, 14023, 32100, 82, 7, 1824, 40, 1034, 32100, 4570, 807, 32100, 11775, 3501, 1034, 32100, 12260, 3501, 1034, 503, 32100, 4064, 32100, 360, 3501, 1034, 2996, 32100, 3172, 13, 3501, 1034, 32100, 3501, 4570, 32100, 306, 1020, 13, 6280, 251, 32100, 7690, 7, 32100, 42, 9, 2482, 1034, 32100, 2451, 251, 32100, 17620, 16369, 32100, 269, 4764, 13, 4516, 11, 1032, 32100, 592, 10901, 358, 32100, 3501, 1034, 1073, 32100, 12260, 481, 32100, 10343, 1676, 1036, 32100, 490, 280, 16961, 1780, 30, 1]}
{"src": "automatic extraction of titles from general documents using machine learning . <sep> in this paper , we propose a machine learning approach to title extraction from general documents . by general documents , we mean documents that can belong to any one of a number of specific genres , including presentations , book chapters , technical papers , brochures , reports , and letters . previously , methods have been proposed mainly for title extraction from research papers . it has not been clear whether it could be possible to conduct automatic title extraction from general documents . as a case study , we consider extraction from office including word and powerpoint . in our approach , we annotate titles in sample documents ( for word and powerpoint respectively ) and take them as training data , train machine learning models , and perform title extraction using the trained models . our method is unique in that we mainly utilize formatting information such as font size as features in the models . it turns out that the use of formatting information can lead to quite accurate extraction from general documents . precision and recall for title extraction from word is <digit> . <digit> and <digit> . <digit> respectively , and precision and recall for title extraction from powerpoint is <digit> . <digit> and <digit> . <digit> respectively in an experiment on intranet data . other important new findings in this work include that we can train models in one domain and apply them to another domain , and more surprisingly we can even train models in one language and apply them to another language . moreover , we can significantly improve search ranking results in document retrieval by using the extracted titles . categories and subject descriptors h . <digit> . <digit> information storage and retrieval information search and retrieval search process h . <digit> . <digit> information systems applications office automation word processing d . <digit> . <digit> software engineering metrics complexity measures , performance measures general terms algorithms , experimentation , performance .", "tokenized_src": [6569, 16629, 13, 8342, 45, 879, 2691, 338, 1437, 1036, 3, 5, 32100, 16, 48, 1040, 3, 6, 62, 4230, 3, 9, 1437, 1036, 1295, 12, 2233, 16629, 45, 879, 2691, 3, 5, 57, 879, 2691, 3, 6, 62, 1243, 2691, 24, 54, 13000, 12, 136, 80, 13, 3, 9, 381, 13, 806, 5349, 7, 3, 6, 379, 9972, 3, 6, 484, 16175, 3, 6, 2268, 5778, 3, 6, 15535, 7, 3, 6, 2279, 3, 6, 11, 5487, 3, 5, 3150, 3, 6, 2254, 43, 118, 4382, 3, 4894, 21, 2233, 16629, 45, 585, 5778, 3, 5, 34, 65, 59, 118, 964, 823, 34, 228, 36, 487, 12, 3498, 6569, 2233, 16629, 45, 879, 2691, 3, 5, 38, 3, 9, 495, 810, 3, 6, 62, 1099, 16629, 45, 828, 379, 1448, 11, 579, 2700, 3, 5, 16, 69, 1295, 3, 6, 62, 46, 2264, 342, 8342, 16, 3106, 2691, 41, 21, 1448, 11, 579, 2700, 6898, 3, 61, 11, 240, 135, 38, 761, 331, 3, 6, 2412, 1437, 1036, 2250, 3, 6, 11, 1912, 2233, 16629, 338, 8, 4252, 2250, 3, 5, 69, 1573, 19, 775, 16, 24, 62, 3, 4894, 5849, 26222, 251, 224, 38, 4088, 812, 38, 753, 16, 8, 2250, 3, 5, 34, 5050, 91, 24, 8, 169, 13, 26222, 251, 54, 991, 12, 882, 4034, 16629, 45, 879, 2691, 3, 5, 11723, 11, 7881, 21, 2233, 16629, 45, 1448, 19, 32101, 3, 5, 32101, 11, 32101, 3, 5, 32101, 6898, 3, 6, 11, 11723, 11, 7881, 21, 2233, 16629, 45, 579, 2700, 19, 32101, 3, 5, 32101, 11, 32101, 3, 5, 32101, 6898, 16, 46, 5016, 30, 6344, 1582, 331, 3, 5, 119, 359, 126, 7469, 16, 48, 161, 560, 24, 62, 54, 2412, 2250, 16, 80, 3303, 11, 1581, 135, 12, 430, 3303, 3, 6, 11, 72, 3, 12713, 62, 54, 237, 2412, 2250, 16, 80, 1612, 11, 1581, 135, 12, 430, 1612, 3, 5, 72, 1890, 3, 6, 62, 54, 4019, 1172, 960, 11592, 772, 16, 1708, 24515, 138, 57, 338, 8, 21527, 8342, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 960, 433, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1002, 1564, 828, 11747, 1448, 3026, 3, 26, 3, 5, 32101, 3, 5, 32101, 889, 3867, 15905, 11641, 3629, 3, 6, 821, 3629, 879, 1353, 16783, 3, 6, 5016, 257, 3, 6, 821, 3, 5, 1], "trg": "machine learning;search;search ranking results;information search and retrieval;metadata processing;microsoft office automation;generic languages;powerpoint documents;metadata extraction;digital copies;file formats extraction;precision extraction;information extraction;file extraction", "tokenized_trg": [1437, 1036, 32100, 960, 32100, 960, 11592, 772, 32100, 251, 960, 11, 24515, 138, 32100, 26686, 3026, 32100, 3, 30574, 828, 11747, 32100, 8165, 8024, 32100, 579, 2700, 2691, 32100, 26686, 16629, 32100, 1125, 8167, 32100, 1042, 10874, 16629, 32100, 11723, 16629, 32100, 251, 16629, 32100, 1042, 16629, 1]}
{"src": "autonomous and distributed node recovery in wireless sensor networks . <sep> intrusion or misbehaviour detection systems are an important and widely accepted security tool in computer and wireless sensor networks . their aim is to detect misbehaving or faulty nodes in order to take appropriate countermeasures , thus limiting the damage caused by adversaries as well as by hard or software faults . so far , however , once detected , misbehaving nodes have just been isolated from the rest of the sensor network and hence are no longer usable by running applications . in the presence of an adversary or software faults , this proceeding will inevitably lead to an early and complete loss of the whole network . for this reason , we propose to no longer expel misbehaving nodes , but to recover them into normal operation . in this paper , we address this problem and present a formal specification of what is considered a secure and correct node recovery algorithm together with a distributed algorithm that meets these properties . we discuss its requirements on the soft and hardware of a node and show how they can be fulfilled with current and upcoming technologies . the algorithm is evaluated analytically as well as by means of extensive simulations , and the findings are compared to the outcome of a real implementation for the btnode sensor platform . the results show that recovering sensor nodes is an expensive , though feasible and worthwhile task . moreover , the proposed program code update algorithm is not only secure but also fair and robust . categories and subject descriptors c . <digit> . <digit> computer communication networks general security and protection general terms algorithms , reliability , security", "tokenized_src": [21286, 11, 8308, 150, 221, 3938, 16, 5419, 7824, 5275, 3, 5, 32100, 2155, 11733, 42, 1817, 346, 107, 2960, 1211, 10664, 1002, 33, 46, 359, 11, 5456, 4307, 1034, 1464, 16, 1218, 11, 5419, 7824, 5275, 3, 5, 70, 2674, 19, 12, 8432, 1817, 346, 18261, 53, 42, 3, 26545, 150, 1395, 16, 455, 12, 240, 2016, 3485, 31038, 7, 3, 6, 2932, 3, 17979, 8, 1783, 2953, 57, 23210, 725, 38, 168, 38, 57, 614, 42, 889, 7828, 7, 3, 5, 78, 623, 3, 6, 983, 3, 6, 728, 14619, 3, 6, 1817, 346, 18261, 53, 150, 1395, 43, 131, 118, 12996, 45, 8, 880, 13, 8, 7824, 1229, 11, 10321, 33, 150, 1200, 178, 179, 57, 1180, 1564, 3, 5, 16, 8, 3053, 13, 46, 23210, 63, 42, 889, 7828, 7, 3, 6, 48, 23613, 56, 3, 21874, 991, 12, 46, 778, 11, 743, 1453, 13, 8, 829, 1229, 3, 5, 21, 48, 1053, 3, 6, 62, 4230, 12, 150, 1200, 1215, 4343, 1817, 346, 18261, 53, 150, 1395, 3, 6, 68, 12, 8303, 135, 139, 1389, 2986, 3, 5, 16, 48, 1040, 3, 6, 62, 1115, 48, 682, 11, 915, 3, 9, 4727, 16726, 13, 125, 19, 1702, 3, 9, 2451, 11, 2024, 150, 221, 3938, 12628, 544, 28, 3, 9, 8308, 12628, 24, 7864, 175, 2605, 3, 5, 62, 2497, 165, 1502, 30, 8, 1835, 11, 4214, 13, 3, 9, 150, 221, 11, 504, 149, 79, 54, 36, 20795, 28, 750, 11, 3, 4685, 2896, 3, 5, 8, 12628, 19, 14434, 18355, 120, 38, 168, 38, 57, 598, 13, 3616, 11108, 7, 3, 6, 11, 8, 7469, 33, 3, 2172, 12, 8, 6138, 13, 3, 9, 490, 4432, 21, 8, 3, 115, 17, 29, 32, 221, 7824, 1585, 3, 5, 8, 772, 504, 24, 21827, 7824, 150, 1395, 19, 46, 2881, 3, 6, 713, 20218, 11, 20167, 2491, 3, 5, 72, 1890, 3, 6, 8, 4382, 478, 1081, 2270, 12628, 19, 59, 163, 2451, 68, 92, 2725, 11, 6268, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 1218, 1901, 5275, 879, 1034, 11, 1711, 879, 1353, 16783, 3, 6, 10581, 3, 6, 1034, 1], "trg": "node recovery;node recovery;wireless sensor networks;sensor networks;security;countermeasures;distributed algorithm;sensor nodes;intrusion detection;intrusion detection;ids", "tokenized_trg": [150, 221, 3938, 32100, 150, 221, 3938, 32100, 5419, 7824, 5275, 32100, 7824, 5275, 32100, 1034, 32100, 3485, 31038, 7, 32100, 8308, 12628, 32100, 7824, 150, 1395, 32100, 2155, 11733, 10664, 32100, 2155, 11733, 10664, 32100, 3, 23, 26, 7, 1]}
{"src": "bayesian online classifiers for text classification and filtering . <sep> this paper explores the use of bayesian online classifiers to classify text documents . empirical results indicate that these classifiers are comparable with the best text classification systems . furthermore , the online approach offers the advantage of continuous learning in the batch adaptive text filtering task . categories and subject descriptors h . <digit> . <digit> information systems information search and retrieval information filtering general terms algorithms , experimentation", "tokenized_src": [10210, 15, 10488, 367, 853, 7903, 7, 21, 1499, 13774, 11, 4191, 53, 3, 5, 32100, 48, 1040, 2075, 7, 8, 169, 13, 10210, 15, 10488, 367, 853, 7903, 7, 12, 853, 4921, 1499, 2691, 3, 5, 23941, 772, 6360, 24, 175, 853, 7903, 7, 33, 13289, 28, 8, 200, 1499, 13774, 1002, 3, 5, 856, 3706, 3, 6, 8, 367, 1295, 704, 8, 2337, 13, 7558, 1036, 16, 8, 11587, 25326, 1499, 4191, 53, 2491, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1002, 251, 960, 11, 24515, 138, 251, 4191, 53, 879, 1353, 16783, 3, 6, 5016, 257, 1], "trg": "bayesian;bayesian online classifiers;online;text classification;text classification;filtering;text filtering;gaussian process;machine learning;machine learning;continous learning;perceptron;information gain", "tokenized_trg": [10210, 15, 10488, 32100, 10210, 15, 10488, 367, 853, 7903, 7, 32100, 367, 32100, 1499, 13774, 32100, 1499, 13774, 32100, 4191, 53, 32100, 1499, 4191, 53, 32100, 3, 20038, 7, 10488, 433, 32100, 1437, 1036, 32100, 1437, 1036, 32100, 3622, 77, 1162, 1036, 32100, 399, 6873, 52, 106, 32100, 251, 2485, 1]}
{"src": "beyond pagerank machine learning for static ranking . <sep> since the publication of brin and page ' s paper on pagerank , many in the web community have depended on pagerank for the static ( query independent ) ordering of web pages . we show that we can significantly outperform pagerank using features that are independent of the link structure of the web . we gain a further boost in accuracy by using data on the frequency at which users visit web pages . we use ranknet , a ranking machine learning algorithm , to combine these and other static features based on anchor text and domain characteristics . the resulting model achieves a static ranking pairwise accuracy of <digit> . <digit> % ( vs . <digit> . <digit> % for pagerank or <digit> % for random ) . categories and subject descriptors i . <digit> . <digit> artificial intelligence learning . h . <digit> . <digit> information storage and retrieval information search and retrieval . general terms algorithms , measurement , performance , experimentation .", "tokenized_src": [1909, 543, 6254, 1437, 1036, 21, 14491, 11592, 3, 5, 32100, 437, 8, 5707, 13, 25799, 11, 543, 3, 31, 3, 7, 1040, 30, 543, 6254, 3, 6, 186, 16, 8, 765, 573, 43, 6002, 15, 26, 30, 543, 6254, 21, 8, 14491, 41, 11417, 2547, 3, 61, 12320, 13, 765, 1688, 3, 5, 62, 504, 24, 62, 54, 4019, 91, 883, 2032, 543, 6254, 338, 753, 24, 33, 2547, 13, 8, 1309, 1809, 13, 8, 765, 3, 5, 62, 2485, 3, 9, 856, 4888, 16, 7452, 57, 338, 331, 30, 8, 7321, 44, 84, 1105, 719, 765, 1688, 3, 5, 62, 169, 11003, 1582, 3, 6, 3, 9, 11592, 1437, 1036, 12628, 3, 6, 12, 5148, 175, 11, 119, 14491, 753, 3, 390, 30, 12865, 1499, 11, 3303, 6803, 3, 5, 8, 3, 5490, 825, 1984, 7, 3, 9, 14491, 11592, 3116, 10684, 7452, 13, 32101, 3, 5, 32101, 3, 1454, 41, 3, 208, 7, 3, 5, 32101, 3, 5, 32101, 3, 1454, 21, 543, 6254, 42, 32101, 3, 1454, 21, 6504, 3, 61, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 23, 3, 5, 32101, 3, 5, 32101, 7353, 6123, 1036, 3, 5, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 3, 5, 879, 1353, 16783, 3, 6, 9753, 3, 6, 821, 3, 6, 5016, 257, 3, 5, 1], "trg": "pagerank;static ranking;static ranking;web pages;ranknet;static features;anchor text;pairwise accuracy;frank;relevance;search engines;dynamic ranking;popularity data", "tokenized_trg": [543, 6254, 32100, 14491, 11592, 32100, 14491, 11592, 32100, 765, 1688, 32100, 11003, 1582, 32100, 14491, 753, 32100, 12865, 1499, 32100, 3116, 10684, 7452, 32100, 3, 89, 6254, 32100, 20208, 32100, 960, 7277, 32100, 4896, 11592, 32100, 9897, 331, 1]}
{"src": "black box constructions for secure computation . <sep> it is well known that the secure computation of non trivial functionalities in the setting of no honest majority requires computational assumptions . we study the way such computational assumptions are used . specifically , we ask whether the secure protocol can use the underlying primitive ( e . g . , one way trapdoor permutation ) in a black box way , or must it be nonblack box ( by referring to the code that computes this primitive ) despite the fact that many general constructions of cryptographic schemes ( e . g . , cpa secure encryption ) refer to the underlying primitive in a black box way only , there are some constructions that are inherently nonblack box . indeed , all known constructions of protocols for general secure computation that are secure in the presence of a malicious adversary and without an honest majority use the underlying primitive in a nonblack box way ( requiring to prove in zero knowledge statements that relate to the primitive ) . in this paper , we study whether such nonblack box use is essential . we present protocols that use only black box access to a family of ( enhanced ) trapdoor permutations or to a homomorphic public key encryption scheme . the result is a protocol whose communication complexity is independent of the computational complexity of the underlying primitive ( e . g . , a trapdoor permutation ) and whose computational complexity grows only linearly with that of the underlying primitive . this is the first protocol to exhibit these properties . categories and subject descriptors f . <digit> . <digit> theory of computation interactive and reactive computation research supported by grant <digit> <digit> from the israel science foundation . department of computer science , technion , israel . email <unk> , <unk> , erez cs . technion . ac . il general terms algorithms , theory", "tokenized_src": [1001, 1367, 1449, 7, 21, 2451, 29761, 3, 5, 32100, 34, 19, 168, 801, 24, 8, 2451, 29761, 13, 529, 22377, 40, 5014, 2197, 16, 8, 1898, 13, 150, 5057, 2942, 2311, 25850, 20298, 3, 5, 62, 810, 8, 194, 224, 25850, 20298, 33, 261, 3, 5, 3346, 3, 6, 62, 987, 823, 8, 2451, 10015, 54, 169, 8, 3, 10067, 26322, 41, 3, 15, 3, 5, 3, 122, 3, 5, 3, 6, 80, 194, 9684, 11968, 399, 4246, 257, 3, 61, 16, 3, 9, 1001, 1367, 194, 3, 6, 42, 398, 34, 36, 529, 19699, 1367, 41, 57, 3, 13215, 12, 8, 1081, 24, 29216, 7, 48, 26322, 3, 61, 3, 3565, 8, 685, 24, 186, 879, 1449, 7, 13, 17620, 14797, 15171, 41, 3, 15, 3, 5, 3, 122, 3, 5, 3, 6, 3, 75, 102, 9, 2451, 19849, 3, 61, 2401, 12, 8, 3, 10067, 26322, 16, 3, 9, 1001, 1367, 194, 163, 3, 6, 132, 33, 128, 1449, 7, 24, 33, 16, 29112, 529, 19699, 1367, 3, 5, 5071, 3, 6, 66, 801, 1449, 7, 13, 18870, 21, 879, 2451, 29761, 24, 33, 2451, 16, 8, 3053, 13, 3, 9, 22326, 23210, 63, 11, 406, 46, 5057, 2942, 169, 8, 3, 10067, 26322, 16, 3, 9, 529, 19699, 1367, 194, 41, 3, 10695, 12, 4410, 16, 5733, 1103, 6643, 24, 9098, 12, 8, 26322, 3, 61, 3, 5, 16, 48, 1040, 3, 6, 62, 810, 823, 224, 529, 19699, 1367, 169, 19, 1832, 3, 5, 62, 915, 18870, 24, 169, 163, 1001, 1367, 592, 12, 3, 9, 384, 13, 41, 8358, 3, 61, 9684, 11968, 399, 4246, 1628, 42, 12, 3, 9, 13503, 8886, 447, 452, 843, 19849, 5336, 3, 5, 8, 741, 19, 3, 9, 10015, 3, 2544, 1901, 11641, 19, 2547, 13, 8, 25850, 11641, 13, 8, 3, 10067, 26322, 41, 3, 15, 3, 5, 3, 122, 3, 5, 3, 6, 3, 9, 9684, 11968, 399, 4246, 257, 3, 61, 11, 3, 2544, 25850, 11641, 13919, 163, 13080, 120, 28, 24, 13, 8, 3, 10067, 26322, 3, 5, 48, 19, 8, 166, 10015, 12, 6981, 175, 2605, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 89, 3, 5, 32101, 3, 5, 32101, 4516, 13, 29761, 6076, 11, 28360, 29761, 585, 3510, 57, 5334, 32101, 32101, 45, 8, 3, 30178, 2056, 3361, 3, 5, 3066, 13, 1218, 2056, 3, 6, 5256, 29, 23, 106, 3, 6, 3, 30178, 3, 5, 791, 2, 3, 6, 2, 3, 6, 3, 15, 2638, 3, 75, 7, 3, 5, 5256, 29, 23, 106, 3, 5, 3, 9, 75, 3, 5, 3, 173, 879, 1353, 16783, 3, 6, 4516, 1], "trg": "black box;secure computation;trapdoor permutation;nonblack box;cryptographic;malicious adversary;encryption scheme;oblivious transfer protocol;oblivious transfer;theory of cryptography;black box reductions", "tokenized_trg": [1001, 1367, 32100, 2451, 29761, 32100, 9684, 11968, 399, 4246, 257, 32100, 529, 19699, 1367, 32100, 17620, 14797, 32100, 22326, 23210, 63, 32100, 19849, 5336, 32100, 3, 32, 7437, 19117, 2025, 10015, 32100, 3, 32, 7437, 19117, 2025, 32100, 4516, 13, 17620, 16369, 32100, 1001, 1367, 4709, 7, 1]}
{"src": "bluetooth dynamic scheduling and interference mitigation . <sep> bluetooth is a cable replacement technology for wireless personal area networks . it is designed to support a wide variety of applications such as voice , streamed audio and video , web browsing , printing , and file sharing , each imposing a number of quality of service constraints including packet loss , latency , delay variation , and throughput . in addition to qos support , another challenge for bluetooth stems from having to share the <digit> . <digit> ghz ism band with other wireless devices such as ieee <digit> . <digit> . the main goal of this paper is to investigate the use of a dynamic scheduling algorithm that guarantees qos while reducing the impact of interference . we propose a mapping between some common qos parameters such as latency and bit rate and the parameters used in the algorithm . we study the algorithm ' s performance and obtain simulation results for selected scenarios and configurations of interest .", "tokenized_src": [31327, 4896, 16131, 11, 20511, 27193, 3, 5, 32100, 31327, 19, 3, 9, 4807, 3709, 748, 21, 5419, 525, 616, 5275, 3, 5, 34, 19, 876, 12, 380, 3, 9, 1148, 1196, 13, 1564, 224, 38, 2249, 3, 6, 6093, 15, 26, 2931, 11, 671, 3, 6, 765, 14139, 3, 6, 5361, 3, 6, 11, 1042, 2178, 3, 6, 284, 3, 26781, 3, 9, 381, 13, 463, 13, 313, 17765, 379, 13531, 1453, 3, 6, 1480, 11298, 3, 6, 7230, 12338, 3, 6, 11, 190, 2562, 3, 5, 16, 811, 12, 3, 1824, 32, 7, 380, 3, 6, 430, 1921, 21, 31327, 6269, 7, 45, 578, 12, 698, 8, 32101, 3, 5, 32101, 3, 122, 107, 172, 19, 51, 1928, 28, 119, 5419, 1904, 224, 38, 3, 23, 15, 15, 15, 32101, 3, 5, 32101, 3, 5, 8, 711, 1288, 13, 48, 1040, 19, 12, 9127, 8, 169, 13, 3, 9, 4896, 16131, 12628, 24, 16935, 3, 1824, 32, 7, 298, 3, 5503, 8, 1113, 13, 20511, 3, 5, 62, 4230, 3, 9, 14670, 344, 128, 1017, 3, 1824, 32, 7, 8755, 224, 38, 1480, 11298, 11, 720, 1080, 11, 8, 8755, 261, 16, 8, 12628, 3, 5, 62, 810, 8, 12628, 3, 31, 3, 7, 821, 11, 3442, 11108, 772, 21, 2639, 13911, 11, 5298, 7, 13, 1046, 3, 5, 1], "trg": "bluetooth;dynamic scheduling;interference;qos;wlan;wpans;coexistence;wpan;bias;inteference;scheduling priorities;mac scheduling", "tokenized_trg": [31327, 32100, 4896, 16131, 32100, 20511, 32100, 3, 1824, 32, 7, 32100, 3, 210, 1618, 32100, 3, 210, 2837, 7, 32100, 576, 22597, 32100, 3, 210, 2837, 32100, 14387, 32100, 3, 2429, 11788, 32100, 16131, 12697, 32100, 11486, 16131, 1]}
{"src": "breadth first search crawling yields high quality pages . <sep> this paper examines the average page quality over time of pages downloaded during a web crawl of <digit> million unique pages . we use the connectivity based metric pagerank to measure the quality of a page . we show that traversing the web graph in breadth first search order is a good crawling strategy , as it tends to discover high quality pages early on in the crawl .", "tokenized_src": [4109, 189, 166, 960, 18639, 53, 6339, 7, 306, 463, 1688, 3, 5, 32100, 48, 1040, 5443, 7, 8, 1348, 543, 463, 147, 97, 13, 1688, 11081, 383, 3, 9, 765, 18639, 13, 32101, 770, 775, 1688, 3, 5, 62, 169, 8, 12841, 3, 390, 3, 7959, 543, 6254, 12, 3613, 8, 463, 13, 3, 9, 543, 3, 5, 62, 504, 24, 5187, 53, 8, 765, 8373, 16, 4109, 189, 166, 960, 455, 19, 3, 9, 207, 18639, 53, 1998, 3, 6, 38, 34, 2134, 7, 12, 2928, 306, 463, 1688, 778, 30, 16, 8, 18639, 3, 5, 1], "trg": "breadth first search;breadth first search;crawling;crawling;high quality pages;connectivity based metrics;pagerank;ordering metrics;crawl order;page quality metric", "tokenized_trg": [4109, 189, 166, 960, 32100, 4109, 189, 166, 960, 32100, 18639, 53, 32100, 18639, 53, 32100, 306, 463, 1688, 32100, 12841, 3, 390, 15905, 32100, 543, 6254, 32100, 12320, 15905, 32100, 18639, 455, 32100, 543, 463, 3, 7959, 1]}
{"src": "broadcasting information via display names in instant messaging . <sep> many instant messenger ( im ) clients let a person specify the identifying name that appears in another person ' s contact list . we have noticed that many people add extra information to this name as a way to broadcast information to their contacts . twelve im contact lists comprising <digit> individuals were monitored over three weeks to observe how these individuals used and altered their display names . almost half of them changed their display names at varying frequencies , where the new information fell into seventeen different categories of communication supplied to others . three themes encompass these categories identification ( who am i ) , information about self ( this is what is going on with me ) and broadcast message ( i am directing information to the community ) . the design implication is that systems supporting person to person casual interaction , such as im , should explicitly include facilities that allow people to broadcast these types of information to their community of contacts . categories and subject descriptors k . <digit> . <digit> computers and society organizational impacts computer supported collaborative work . general terms design , experimentation , human factors .", "tokenized_src": [6878, 53, 251, 1009, 1831, 3056, 16, 5087, 16324, 3, 5, 32100, 186, 5087, 28110, 41, 256, 3, 61, 820, 752, 3, 9, 568, 11610, 8, 3, 9690, 564, 24, 3475, 16, 430, 568, 3, 31, 3, 7, 574, 570, 3, 5, 62, 43, 4944, 24, 186, 151, 617, 996, 251, 12, 48, 564, 38, 3, 9, 194, 12, 6878, 251, 12, 70, 11463, 3, 5, 13369, 256, 574, 7809, 8315, 53, 32101, 1742, 130, 18259, 147, 386, 1274, 12, 7743, 149, 175, 1742, 261, 11, 17250, 70, 1831, 3056, 3, 5, 966, 985, 13, 135, 2130, 70, 1831, 3056, 44, 3, 14177, 23446, 3, 6, 213, 8, 126, 251, 4728, 139, 30552, 315, 5897, 13, 1901, 8794, 12, 717, 3, 5, 386, 8334, 18253, 175, 5897, 10356, 41, 113, 183, 3, 23, 3, 61, 3, 6, 251, 81, 1044, 41, 48, 19, 125, 19, 352, 30, 28, 140, 3, 61, 11, 6878, 1569, 41, 3, 23, 183, 3, 26243, 251, 12, 8, 573, 3, 61, 3, 5, 8, 408, 3, 28722, 19, 24, 1002, 3956, 568, 12, 568, 6995, 6565, 3, 6, 224, 38, 256, 3, 6, 225, 21119, 560, 2465, 24, 995, 151, 12, 6878, 175, 1308, 13, 251, 12, 70, 573, 13, 11463, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 157, 3, 5, 32101, 3, 5, 32101, 7827, 11, 2710, 13477, 11737, 1218, 3510, 9642, 161, 3, 5, 879, 1353, 408, 3, 6, 5016, 257, 3, 6, 936, 2580, 3, 5, 1], "trg": "broadcast information;display names;display name;instant messaging;instant messenger;communication;catorgorisation of display names;distribution frequency of various catogories;msn messager;name variation handles;communication catogories;awareness;identification is fundamental;related im research", "tokenized_trg": [6878, 251, 32100, 1831, 3056, 32100, 1831, 564, 32100, 5087, 16324, 32100, 5087, 28110, 32100, 1901, 32100, 1712, 1677, 127, 2121, 13, 1831, 3056, 32100, 3438, 7321, 13, 796, 1712, 32, 839, 2593, 32100, 3, 51, 7, 29, 1569, 52, 32100, 564, 12338, 13338, 32100, 1901, 1712, 32, 839, 2593, 32100, 4349, 32100, 10356, 19, 4431, 32100, 1341, 256, 585, 1]}
{"src": "building a research library for the history of the web . <sep> this paper describes the building of a research library for studying the web , especially research on how the structure and content of the web change over time . the library is particularly aimed at supporting social scientists for whom the web is both a fascinating social phenomenon and a mirror on society . the library is built on the collections of the internet archive , which has been preserving a crawl of the web every two months since <digit> . the technical challenges in organizing this data for research fall into two categories high performance computing to transfer and manage the very large amounts of data , and human computer interfaces that empower research by non computer specialists . categories and subject descriptors h . <digit> . <digit> information storage and retrieval digital libraries collection , systems issues , user issues . j . <digit> social and behavioral sciences sociology . general terms algorithms , management , measurement , performance , design , human factors . , while amazon has recently made its older alexa corpus commercially available for the development of searching and related services . however , the only collection that can be used for more general research into the history of the web is the web collection of the internet archive .", "tokenized_src": [740, 3, 9, 585, 3595, 21, 8, 892, 13, 8, 765, 3, 5, 32100, 48, 1040, 8788, 8, 740, 13, 3, 9, 585, 3595, 21, 6908, 8, 765, 3, 6, 902, 585, 30, 149, 8, 1809, 11, 738, 13, 8, 765, 483, 147, 97, 3, 5, 8, 3595, 19, 1989, 3, 8287, 44, 3956, 569, 7004, 21, 4068, 8, 765, 19, 321, 3, 9, 8899, 569, 15037, 11, 3, 9, 5432, 30, 2710, 3, 5, 8, 3595, 19, 1192, 30, 8, 8274, 13, 8, 1396, 13269, 3, 6, 84, 65, 118, 3, 22140, 3, 9, 18639, 13, 8, 765, 334, 192, 767, 437, 32101, 3, 5, 8, 2268, 2428, 16, 14308, 48, 331, 21, 585, 1590, 139, 192, 5897, 306, 821, 10937, 12, 2025, 11, 1865, 8, 182, 508, 6201, 13, 331, 3, 6, 11, 936, 1218, 3459, 7, 24, 14223, 585, 57, 529, 1218, 8089, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 1125, 12256, 1232, 3, 6, 1002, 807, 3, 6, 1139, 807, 3, 5, 3, 354, 3, 5, 32101, 569, 11, 17340, 13554, 11881, 6427, 3, 5, 879, 1353, 16783, 3, 6, 758, 3, 6, 9753, 3, 6, 821, 3, 6, 408, 3, 6, 936, 2580, 3, 5, 3, 6, 298, 18861, 65, 1310, 263, 165, 2749, 1240, 226, 9, 11736, 302, 1328, 120, 347, 21, 8, 606, 13, 4549, 11, 1341, 364, 3, 5, 983, 3, 6, 8, 163, 1232, 24, 54, 36, 261, 21, 72, 879, 585, 139, 8, 892, 13, 8, 765, 19, 8, 765, 1232, 13, 8, 1396, 13269, 3, 5, 1], "trg": "history of the web;internet archive;storage;digital libraries;it is a subject of study both for itself and for the manner in which it illuminates contemporary social phenomena . yet a researcher who wishes to study the web is faced with major difficulties . an obvious problem is that the web is huge . any study of the web as a whole must be prepared to analyze billions of pages and hundreds of terabytes of data . furthermore;flexible preload system;database access;computational social science;the desire to track activities across time . the web of today can be studied by direct web crawling;user interface;full text indexes;scalability;internet archive . <digit> . background <digit> . <digit> research in the history of the web the web is one of the most interesting artifacts of our time . for social scientists;dataflow;database management;basic parameters are hard to come by and it is almost impossible to generate random samples for statistical purposes . but the biggest problem that social scientists face in carrying out web research is historical;the web changes continually . it is never possible to repeat a study on the actual web with quite the same data . any snapshot of the whole web requires a crawl that will take several weeks to gather data . because the size and boundaries of the web are ill defined;or via tools such as the google web api;user support", "tokenized_trg": [892, 13, 8, 765, 32100, 1396, 13269, 32100, 1606, 32100, 1125, 12256, 32100, 34, 19, 3, 9, 1426, 13, 810, 321, 21, 1402, 11, 21, 8, 3107, 16, 84, 34, 20468, 7, 4092, 569, 24666, 3, 5, 780, 3, 9, 18658, 113, 9543, 12, 810, 8, 765, 19, 7865, 28, 779, 10308, 3, 5, 46, 4813, 682, 19, 24, 8, 765, 19, 1450, 3, 5, 136, 810, 13, 8, 765, 38, 3, 9, 829, 398, 36, 2657, 12, 8341, 2108, 7, 13, 1688, 11, 3986, 13, 3, 449, 9, 17770, 7, 13, 331, 3, 5, 856, 3706, 32100, 4136, 554, 7134, 358, 32100, 3501, 592, 32100, 25850, 569, 2056, 32100, 8, 3667, 12, 1463, 1087, 640, 97, 3, 5, 8, 765, 13, 469, 54, 36, 7463, 57, 1223, 765, 18639, 53, 32100, 1139, 3459, 32100, 423, 1499, 5538, 15, 7, 32100, 3, 7, 1489, 2020, 32100, 1396, 13269, 3, 5, 32101, 3, 5, 2458, 32101, 3, 5, 32101, 585, 16, 8, 892, 13, 8, 765, 8, 765, 19, 80, 13, 8, 167, 1477, 768, 23, 8717, 7, 13, 69, 97, 3, 5, 21, 569, 7004, 32100, 331, 7631, 32100, 3501, 758, 32100, 1857, 8755, 33, 614, 12, 369, 57, 11, 34, 19, 966, 4586, 12, 3806, 6504, 5977, 21, 11775, 3659, 3, 5, 68, 8, 2630, 682, 24, 569, 7004, 522, 16, 6771, 91, 765, 585, 19, 4332, 32100, 8, 765, 1112, 11967, 3, 5, 34, 19, 470, 487, 12, 6103, 3, 9, 810, 30, 8, 1805, 765, 28, 882, 8, 337, 331, 3, 5, 136, 23052, 13, 8, 829, 765, 2311, 3, 9, 18639, 24, 56, 240, 633, 1274, 12, 7479, 331, 3, 5, 250, 8, 812, 11, 11814, 13, 8, 765, 33, 3, 1092, 4802, 32100, 42, 1009, 1339, 224, 38, 8, 10283, 765, 3, 13306, 32100, 1139, 380, 1]}
{"src": "building a sense of history narratives and pathways of women computing educators . <sep> this working group laid the groundwork for the collection and analysis of oral histories of women computing educators . this endeavor will eventually create a body of narratives to serve as role models to attract students , in particular women , to computing it will also serve to preserve the history of the female pioneers in computing education . pre conference work included administration of a survey to assess topical interest . the working group produced aids for conducting interviews , including an opening script , an outline of topics to be covered , guidelines for conducting interviews , and a set of probing questions to ensure consistency in the interviews . the group explored issues such as copyright and archival that confront the large scale implementation of the project and suggested extensions to this research . this report includes an annotated bibliography of resources . the next steps will include training colleagues in how to conduct interviews and establishing guidelines for archival and use of the interviews . categories and subject descriptors k . <digit> computing and history k . <digit> computing and education k . <digit> the computing profession general terms human factors", "tokenized_src": [740, 3, 9, 1254, 13, 892, 8109, 7, 11, 19821, 13, 887, 10937, 16530, 3, 5, 32100, 48, 464, 563, 7245, 8, 1591, 1981, 21, 8, 1232, 11, 1693, 13, 8759, 27771, 13, 887, 10937, 16530, 3, 5, 48, 14310, 56, 3725, 482, 3, 9, 643, 13, 8109, 7, 12, 1716, 38, 1075, 2250, 12, 5521, 481, 3, 6, 16, 1090, 887, 3, 6, 12, 10937, 34, 56, 92, 1716, 12, 8996, 8, 892, 13, 8, 3955, 11200, 7, 16, 10937, 1073, 3, 5, 554, 2542, 161, 1285, 3602, 13, 3, 9, 3719, 12, 6570, 2859, 138, 1046, 3, 5, 8, 464, 563, 2546, 3052, 7, 21, 13646, 8917, 3, 6, 379, 46, 2101, 4943, 3, 6, 46, 11052, 13, 4064, 12, 36, 2303, 3, 6, 5749, 21, 13646, 8917, 3, 6, 11, 3, 9, 356, 13, 12361, 53, 746, 12, 766, 12866, 16, 8, 8917, 3, 5, 8, 563, 15883, 807, 224, 38, 2405, 3535, 11, 3, 15917, 138, 24, 11230, 8, 508, 2643, 4432, 13, 8, 516, 11, 5259, 15176, 12, 48, 585, 3, 5, 48, 934, 963, 46, 46, 2264, 920, 24765, 5984, 13, 1438, 3, 5, 8, 416, 2245, 56, 560, 761, 6976, 16, 149, 12, 3498, 8917, 11, 3, 12585, 5749, 21, 3, 15917, 138, 11, 169, 13, 8, 8917, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 157, 3, 5, 32101, 10937, 11, 892, 3, 157, 3, 5, 32101, 10937, 11, 1073, 3, 157, 3, 5, 32101, 8, 10937, 6945, 879, 1353, 936, 2580, 1], "trg": "oral history;computing education history", "tokenized_trg": [8759, 892, 32100, 10937, 1073, 892, 1]}
{"src": "a dependability perspective on emerging technologies . <sep> emerging technologies are set to provide further provisions for computing in times when the limits of current technology of microelectronics become an ever closer presence . a technology roadmap document lists biologically inspired computing and quantum computing as two emerging technology vectors for novel computing architectures < a href <digit> . html <digit> > <digit> . but the potential benefits that will come from entering the nanoelectronics era and from exploring novel nanotechnologies are foreseen to come at the cost of increased sensitivity to influences from the surrounding environment . this paper elaborates on a dependability perspective over these two emerging technology vectors from a designer ' s standpoint . maintaining or increasing the dependability of unconventional computational processes is discussed in two different contexts one of a bio inspired computing architecture ( the embryonics project ) and another of a quantum computational architecture ( the querist project ) . categories and subject descriptors b . <digit> . <digit> performance and reliability reliability , testing , and fault tolerance . c . <digit> performance of systems fault tolerance , reliability , availability , and serviceability . general terms design , reliability , theory .", "tokenized_src": [3, 9, 6002, 2020, 3503, 30, 7821, 2896, 3, 5, 32100, 7821, 2896, 33, 356, 12, 370, 856, 9848, 21, 10937, 16, 648, 116, 8, 6790, 13, 750, 748, 13, 2179, 15, 3437, 52, 4554, 7, 582, 46, 664, 4645, 3053, 3, 5, 3, 9, 748, 28871, 1708, 7809, 11432, 120, 3555, 10937, 11, 21353, 10937, 38, 192, 7821, 748, 12938, 7, 21, 3714, 10937, 4648, 7, 3, 2, 3, 9, 3, 107, 60, 89, 32101, 3, 5, 3, 10500, 32101, 2490, 32101, 3, 5, 68, 8, 1055, 1393, 24, 56, 369, 45, 7084, 8, 13944, 15, 3437, 52, 4554, 7, 3, 1498, 11, 45, 6990, 3714, 13944, 13148, 7, 33, 21, 15, 7, 15, 35, 12, 369, 44, 8, 583, 13, 1936, 3, 13398, 12, 14780, 45, 8, 3825, 1164, 3, 5, 48, 1040, 16224, 7, 30, 3, 9, 6002, 2020, 3503, 147, 175, 192, 7821, 748, 12938, 7, 45, 3, 9, 4378, 3, 31, 3, 7, 28628, 3, 5, 6011, 42, 3094, 8, 6002, 2020, 13, 30903, 25850, 2842, 19, 5172, 16, 192, 315, 2625, 7, 80, 13, 3, 9, 2392, 3555, 10937, 4648, 41, 8, 24157, 2532, 7, 516, 3, 61, 11, 430, 13, 3, 9, 21353, 25850, 4648, 41, 8, 238, 52, 343, 516, 3, 61, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 115, 3, 5, 32101, 3, 5, 32101, 821, 11, 10581, 10581, 3, 6, 2505, 3, 6, 11, 7828, 17313, 3, 5, 3, 75, 3, 5, 32101, 821, 13, 1002, 7828, 17313, 3, 6, 10581, 3, 6, 5576, 3, 6, 11, 313, 2020, 3, 5, 879, 1353, 408, 3, 6, 10581, 3, 6, 4516, 3, 5, 1], "trg": "dependability;emerging technologies;emerging technologies;quantum computing;quantum computing;computing architecture;nanoelectronics;environment;bio inspired computing;bio inspired computing;embryonics;querist;reliability;reliability;fault tolerance;self replication;computing system;evolvable hardware;bio inspired digital design;correction techniques;soft errors;system design;failure rate;self repair;digital devices;dependable system;computer system;nano computing;fault tolerance assessment;error detection;bio computing;computing technology", "tokenized_trg": [6002, 2020, 32100, 7821, 2896, 32100, 7821, 2896, 32100, 21353, 10937, 32100, 21353, 10937, 32100, 10937, 4648, 32100, 13944, 15, 3437, 52, 4554, 7, 32100, 1164, 32100, 2392, 3555, 10937, 32100, 2392, 3555, 10937, 32100, 24157, 2532, 7, 32100, 238, 52, 343, 32100, 10581, 32100, 10581, 32100, 7828, 17313, 32100, 1044, 29328, 32100, 10937, 358, 32100, 3, 15, 4571, 208, 179, 4214, 32100, 2392, 3555, 1125, 408, 32100, 11698, 2097, 32100, 1835, 6854, 32100, 358, 408, 32100, 3338, 1080, 32100, 1044, 2096, 32100, 1125, 1904, 32100, 3, 23094, 358, 32100, 1218, 358, 32100, 13944, 10937, 32100, 7828, 17313, 4193, 32100, 3505, 10664, 32100, 2392, 10937, 32100, 10937, 748, 1]}
{"src": "building sustainable community information systems lessons from a digital government project . <sep> this paper introduces a rationale for and approach to the study of sustainability in computerized community information systems . it begins by presenting a theoretical framework for posing questions about sustainability predicated upon assumptions from social construction of technology and adaptive structuration theories . based in part on the literature and in part on our own experiences in developing a community information system , we introduce and consider three issues related to sustainability stakeholder involvement , commitment from key players , and the development of critical mass . categories and subject descriptors h4 . <digit> communication applications bulletin boards , computer conferencing h5 . <digit> information interfaces and presentation user interfaces user centered design . general terms design , human factors .", "tokenized_src": [740, 5086, 573, 251, 1002, 5182, 45, 3, 9, 1125, 789, 516, 3, 5, 32100, 48, 1040, 4277, 7, 3, 9, 12226, 15, 21, 11, 1295, 12, 8, 810, 13, 10959, 16, 1218, 1601, 573, 251, 1002, 3, 5, 34, 4396, 57, 3, 12072, 3, 9, 13605, 4732, 21, 3, 2748, 53, 746, 81, 10959, 554, 4370, 920, 1286, 20298, 45, 569, 1449, 13, 748, 11, 25326, 19444, 1575, 16348, 3, 5, 3, 390, 16, 294, 30, 8, 6678, 11, 16, 294, 30, 69, 293, 2704, 16, 2421, 3, 9, 573, 251, 358, 3, 6, 62, 4277, 11, 1099, 386, 807, 1341, 12, 10959, 8474, 5235, 9683, 3, 6, 3148, 45, 843, 1508, 3, 6, 11, 8, 606, 13, 2404, 3294, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 591, 3, 5, 32101, 1901, 1564, 11126, 77, 8126, 3, 6, 1218, 3, 31883, 3, 107, 755, 3, 5, 32101, 251, 3459, 7, 11, 3831, 1139, 3459, 7, 1139, 3, 12809, 408, 3, 5, 879, 1353, 408, 3, 6, 936, 2580, 3, 5, 1], "trg": "sustainability;computerized community information system;construction of technology;key players;critical mass;skateholder involvement;community networks;participatory design;community network", "tokenized_trg": [10959, 32100, 1218, 1601, 573, 251, 358, 32100, 1449, 13, 748, 32100, 843, 1508, 32100, 2404, 3294, 32100, 16573, 5235, 9683, 32100, 573, 5275, 32100, 11453, 10972, 408, 32100, 573, 1229, 1]}
{"src": "can machine learning be secure . <sep> machine learning systems offer unparalled flexibility in dealing with evolving input in a variety of applications , such as intrusion detection systems and spam e mail filtering . however , machine learning algorithms themselves can be a target of attack by a malicious adversary . this paper provides a framework for answering the question , can machine learning be secure novel contributions of this paper include a taxonomy of different types of attacks on machine learning techniques and systems , a variety of defenses against those attacks , a discussion of ideas that are important to security for machine learning , an analytical model giving a lower bound on attacker ' s work function , and a list of open problems . categories and subject descriptors d . <digit> . <digit> security and protection invasive software ( e . g . , viruses , worms , trojan horses ) i . <digit> . <digit> models statistical i . <digit> . <digit> design methodology general terms security", "tokenized_src": [54, 1437, 1036, 36, 2451, 3, 5, 32100, 1437, 1036, 1002, 462, 73, 6583, 40, 1361, 6461, 16, 4945, 28, 16556, 3785, 16, 3, 9, 1196, 13, 1564, 3, 6, 224, 38, 2155, 11733, 10664, 1002, 11, 13655, 3, 15, 4842, 4191, 53, 3, 5, 983, 3, 6, 1437, 1036, 16783, 1452, 54, 36, 3, 9, 2387, 13, 3211, 57, 3, 9, 22326, 23210, 63, 3, 5, 48, 1040, 795, 3, 9, 4732, 21, 18243, 8, 822, 3, 6, 54, 1437, 1036, 36, 2451, 3714, 7548, 13, 48, 1040, 560, 3, 9, 1104, 32, 3114, 63, 13, 315, 1308, 13, 6032, 30, 1437, 1036, 2097, 11, 1002, 3, 6, 3, 9, 1196, 13, 4453, 7, 581, 273, 6032, 3, 6, 3, 9, 3071, 13, 912, 24, 33, 359, 12, 1034, 21, 1437, 1036, 3, 6, 46, 18355, 825, 1517, 3, 9, 1364, 8120, 30, 22600, 3, 31, 3, 7, 161, 1681, 3, 6, 11, 3, 9, 570, 13, 539, 982, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 1034, 11, 1711, 3, 15267, 889, 41, 3, 15, 3, 5, 3, 122, 3, 5, 3, 6, 19601, 3, 6, 3, 13814, 7, 3, 6, 10968, 7066, 10235, 3, 61, 3, 23, 3, 5, 32101, 3, 5, 32101, 2250, 11775, 3, 23, 3, 5, 32101, 3, 5, 32101, 408, 15663, 879, 1353, 1034, 1], "trg": "machine learning;machine learning;security;intrusion detection;intrusion detection system;learning algorithms;computer networks;spam filters;causative attack;indiscriminate attack;game theory;statistical learning;adversarial learning;computer security;targeted attack;integrity;exploratory attack;security metrics;availability", "tokenized_trg": [1437, 1036, 32100, 1437, 1036, 32100, 1034, 32100, 2155, 11733, 10664, 32100, 2155, 11733, 10664, 358, 32100, 1036, 16783, 32100, 1218, 5275, 32100, 13655, 10607, 32100, 212, 302, 1528, 3211, 32100, 3, 8482, 7, 16837, 342, 3211, 32100, 467, 4516, 32100, 11775, 1036, 32100, 23210, 23, 138, 1036, 32100, 1218, 1034, 32100, 7774, 3211, 32100, 9322, 32100, 26903, 6546, 3211, 32100, 1034, 15905, 32100, 5576, 1]}
{"src": "<unk> interactive information retrieval system through drawing . <sep> the <unk> system integrates information retrieval with sketch manipulations . the system is designed especially for pen based computing and allows users to retrieve information by simple pen manipulations such as drawing a picture . when a user draws a circle and writes a keyword , information nodes related to the keyword are collected automatically inside the circle . in addition , the user can create a venn diagram by repeatedly drawing circles and keywords to form more complex queries . thus , the user can retrieve information both interactively and visually without complex manipulations . moreover , the sketch interaction is so simple that it is possible to combine it with other types of data such as images and real world information for information retrieval . in this paper , we describe our <unk> system and how it can be effectively applied . cr categories i . <digit> . <digit> computer graphics methodology and techniques , interaction techniques i . <digit> . <digit> computer graphics graphics utilities , software support", "tokenized_src": [2, 6076, 251, 24515, 138, 358, 190, 5364, 3, 5, 32100, 8, 2, 358, 9162, 7, 251, 24515, 138, 28, 13278, 18175, 7, 3, 5, 8, 358, 19, 876, 902, 21, 4550, 3, 390, 10937, 11, 1250, 1105, 12, 21830, 251, 57, 650, 4550, 18175, 7, 224, 38, 5364, 3, 9, 1554, 3, 5, 116, 3, 9, 1139, 14924, 3, 9, 8196, 11, 11858, 3, 9, 15693, 3, 6, 251, 150, 1395, 1341, 12, 8, 15693, 33, 4759, 3269, 1096, 8, 8196, 3, 5, 16, 811, 3, 6, 8, 1139, 54, 482, 3, 9, 3, 1926, 29, 6423, 57, 16049, 5364, 15162, 11, 12545, 12, 607, 72, 1561, 13154, 3, 5, 2932, 3, 6, 8, 1139, 54, 21830, 251, 321, 6076, 120, 11, 17307, 406, 1561, 18175, 7, 3, 5, 72, 1890, 3, 6, 8, 13278, 6565, 19, 78, 650, 24, 34, 19, 487, 12, 5148, 34, 28, 119, 1308, 13, 331, 224, 38, 1383, 11, 490, 296, 251, 21, 251, 24515, 138, 3, 5, 16, 48, 1040, 3, 6, 62, 5530, 69, 2, 358, 11, 149, 34, 54, 36, 3762, 2930, 3, 5, 5764, 5897, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 15663, 11, 2097, 3, 6, 6565, 2097, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 6484, 17930, 3, 6, 889, 380, 1], "trg": "interactive information retrieval system;information retrieval;sketch manipulation;sketch manipulations;pen based computing;information node;venn diagram;catnaccio system;keyword searching;2d system;visual information retrieval;interactive system;image data", "tokenized_trg": [6076, 251, 24515, 138, 358, 32100, 251, 24515, 138, 32100, 13278, 18175, 32100, 13278, 18175, 7, 32100, 4550, 3, 390, 10937, 32100, 251, 150, 221, 32100, 3, 1926, 29, 6423, 32100, 1712, 29, 9, 9920, 32, 358, 32100, 15693, 4549, 32100, 204, 26, 358, 32100, 3176, 251, 24515, 138, 32100, 6076, 358, 32100, 1023, 331, 1]}
{"src": "compression of inverted indexes for fast query evaluation . <sep> compression reduces both the size of indexes and the time needed to evaluate queries . in this paper , we revisit the compression of inverted lists of document postings that store the position and frequency of indexed terms , considering two approaches to improving retrieval efficiency better implementation and better choice of integer compression schemes . first , we propose several simple optimisations to well known integer compression schemes , and show experimentally that these lead to significant reductions in time . second , we explore the impact of choice of compression scheme on retrieval efficiency . in experiments on large collections of data , we show two surprising results use of simple byte aligned codes halves the query evaluation time compared to the most compact golomb rice bitwise compression schemes and , even when an index fits entirely in memory , byte aligned codes result in faster query evaluation than does an uncompressed index , emphasising that the cost of transferring data from memory to the cpu cache is less for an appropriately compressed index than for an uncompressed index . moreover , byte aligned schemes have only a modest space overhead the most compact schemes result in indexes that are around <digit> % of the size of the collection , while a byte aligned scheme is around <digit> % . we conclude that fast byte aligned codes should be used to store integers in inverted lists . categories and subject descriptors h . <digit> . <digit> information storage and retrieval systems and software performance evaluation ( efficiency and effectiveness ) e . <digit> data coding and information theory data compaction and compression general terms performance , algorithms , design", "tokenized_src": [16685, 13, 16, 19825, 5538, 15, 7, 21, 1006, 11417, 5002, 3, 5, 32100, 16685, 1428, 7, 321, 8, 812, 13, 5538, 15, 7, 11, 8, 97, 906, 12, 6825, 13154, 3, 5, 16, 48, 1040, 3, 6, 62, 20442, 8, 16685, 13, 16, 19825, 7809, 13, 1708, 5910, 7, 24, 1078, 8, 1102, 11, 7321, 13, 3, 30564, 1353, 3, 6, 4014, 192, 6315, 12, 4863, 24515, 138, 3949, 394, 4432, 11, 394, 1160, 13, 30278, 16685, 15171, 3, 5, 166, 3, 6, 62, 4230, 633, 650, 3, 27040, 7, 12, 168, 801, 30278, 16685, 15171, 3, 6, 11, 504, 11082, 120, 24, 175, 991, 12, 1516, 4709, 7, 16, 97, 3, 5, 511, 3, 6, 62, 2075, 8, 1113, 13, 1160, 13, 16685, 5336, 30, 24515, 138, 3949, 3, 5, 16, 12341, 30, 508, 8274, 13, 331, 3, 6, 62, 504, 192, 10306, 772, 169, 13, 650, 3, 17770, 7901, 15, 26, 5633, 4244, 8391, 8, 11417, 5002, 97, 3, 2172, 12, 8, 167, 6607, 281, 17551, 6605, 720, 10684, 16685, 15171, 11, 3, 6, 237, 116, 46, 5538, 7307, 4585, 16, 2594, 3, 6, 3, 17770, 7901, 15, 26, 5633, 741, 16, 3627, 11417, 5002, 145, 405, 46, 73, 287, 8918, 5538, 3, 6, 8053, 53, 24, 8, 583, 13, 3, 23560, 331, 45, 2594, 12, 8, 3, 75, 4987, 11800, 19, 705, 21, 46, 18056, 25423, 5538, 145, 21, 46, 73, 287, 8918, 5538, 3, 5, 72, 1890, 3, 6, 3, 17770, 7901, 15, 26, 15171, 43, 163, 3, 9, 11306, 628, 15998, 8, 167, 6607, 15171, 741, 16, 5538, 15, 7, 24, 33, 300, 32101, 3, 1454, 13, 8, 812, 13, 8, 1232, 3, 6, 298, 3, 9, 3, 17770, 7901, 15, 26, 5336, 19, 300, 32101, 3, 1454, 3, 5, 62, 12692, 24, 1006, 3, 17770, 7901, 15, 26, 5633, 225, 36, 261, 12, 1078, 30278, 7, 16, 16, 19825, 7809, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 1002, 11, 889, 821, 5002, 41, 3949, 11, 9570, 3, 61, 3, 15, 3, 5, 32101, 331, 3, 9886, 11, 251, 4516, 331, 2890, 4787, 11, 16685, 879, 1353, 821, 3, 6, 16783, 3, 6, 408, 1], "trg": "compression;inverted indexes;inverted index;retrieval efficiency;efficiency;integer compression;optimisation;integer coding;document retrieval;index compression;bytewise compression;decoding;variable byte;search engine", "tokenized_trg": [16685, 32100, 16, 19825, 5538, 15, 7, 32100, 16, 19825, 5538, 32100, 24515, 138, 3949, 32100, 3949, 32100, 30278, 16685, 32100, 3, 27040, 32100, 30278, 3, 9886, 32100, 1708, 24515, 138, 32100, 5538, 16685, 32100, 3, 17770, 10684, 16685, 32100, 20, 9886, 32100, 7660, 3, 17770, 32100, 960, 1948, 1]}
{"src": "computing consistent query answers using conflict hypergraphs . <sep> a consistent query answer in a possibly inconsistent database is an answer which is true in every ( minimal ) repair of the database . we present here a practical framework for computing consistent query answers for large , possibly inconsistent relational databases . we consider relational algebra queries without projection , and denial constraints . because our framework handles union queries , we can effectively ( and efficiently ) extract indefinite disjunctive information from an inconsistent database . we describe a number of novel optimization techniques applicable in this context and summarize experimental results that validate our approach . categories h . <digit> . <digit> , h . <digit> . <digit> , f . <digit> . <digit> . general terms algorithms , languages , theory .", "tokenized_src": [10937, 4700, 11417, 4269, 338, 4129, 6676, 9413, 7, 3, 5, 32100, 3, 9, 4700, 11417, 1525, 16, 3, 9, 3673, 26608, 3501, 19, 46, 1525, 84, 19, 1176, 16, 334, 41, 6211, 3, 61, 2096, 13, 8, 3501, 3, 5, 62, 915, 270, 3, 9, 3236, 4732, 21, 10937, 4700, 11417, 4269, 21, 508, 3, 6, 3673, 26608, 4689, 138, 16961, 3, 5, 62, 1099, 4689, 138, 27502, 13154, 406, 13440, 3, 6, 11, 20, 7419, 17765, 3, 5, 250, 69, 4732, 13338, 7021, 13154, 3, 6, 62, 54, 3762, 41, 11, 8877, 3, 61, 5819, 16, 14339, 1028, 6959, 75, 3268, 251, 45, 46, 26608, 3501, 3, 5, 62, 5530, 3, 9, 381, 13, 3714, 11295, 2097, 5383, 16, 48, 2625, 11, 21603, 11082, 772, 24, 16742, 69, 1295, 3, 5, 5897, 3, 107, 3, 5, 32101, 3, 5, 32101, 3, 6, 3, 107, 3, 5, 32101, 3, 5, 32101, 3, 6, 3, 89, 3, 5, 32101, 3, 5, 32101, 3, 5, 879, 1353, 16783, 3, 6, 8024, 3, 6, 4516, 3, 5, 1], "trg": "consistent query answer;conflict hypergraph;inconsistent database;inconsistency;repair;relational algebra;denial constraints;optimization;integrity constraints;disjunctive query;knowledge gathering;polynomial time;query processing", "tokenized_trg": [4700, 11417, 1525, 32100, 4129, 6676, 9413, 32100, 26608, 3501, 32100, 16, 8056, 343, 4392, 32100, 2096, 32100, 4689, 138, 27502, 32100, 20, 7419, 17765, 32100, 11295, 32100, 9322, 17765, 32100, 1028, 6959, 75, 3268, 11417, 32100, 1103, 7241, 32100, 4251, 3114, 23, 138, 97, 32100, 11417, 3026, 1]}
{"src": "consistent query answering under key and exclusion dependencies algorithms and experiments . <sep> research in consistent query answering studies the definition and computation of meaningful answers to queries posed to inconsistent databases , i . e . , databases whose data do not satisfy the integrity constraints ( ics ) declared on their schema . computing consistent answers to conjunctive queries is generally conp hard in data complexity , even in the presence of very restricted forms of ics ( single , unary keys ) . recent studies on consistent query answering for database schemas containing only key dependencies have an <unk> the possibility of identifying classes of queries whose consistent answers can be obtained by a first order rewriting of the query , which in turn can be easily formulated in sql and directly evaluated through any relational dbms . in this paper we study consistent query answering in the presence of key dependencies and exclusion dependencies . we first prove that even in the presence of only exclusion dependencies the problem is conp hard in data complexity , and define a general method for consistent answering of conjunctive queries under key and exclusion dependencies , based on the rewriting of the query in datalog with negation . then , we identify a subclass of conjunctive queries that can be first order rewritten in the presence of key and exclusion dependencies , and define an algorithm for computing the first order rewriting of a query belonging to such a class of queries . finally , we compare the relative efficiency of the two methods for processing queries in the subclass above mentioned . experimental results , conducted on a real and large database of the computer science engineering degrees of the university of rome la sapienza , clearly show the computational advantage of the first order based technique . categories and subject descriptors h . <digit> . <digit> database management languages query languages f . <digit> . <digit> analysis of algorithms and problem complexity general . general terms theory , algorithms , experimentation .", "tokenized_src": [4700, 11417, 18243, 365, 843, 11, 1215, 11593, 6002, 11573, 16783, 11, 12341, 3, 5, 32100, 585, 16, 4700, 11417, 18243, 2116, 8, 4903, 11, 29761, 13, 7892, 4269, 12, 13154, 3, 12151, 12, 26608, 16961, 3, 6, 3, 23, 3, 5, 3, 15, 3, 5, 3, 6, 16961, 3, 2544, 331, 103, 59, 11132, 8, 9322, 17765, 41, 3, 447, 7, 3, 61, 10126, 30, 70, 26622, 3, 5, 10937, 4700, 4269, 12, 975, 6959, 75, 3268, 13154, 19, 2389, 975, 102, 614, 16, 331, 11641, 3, 6, 237, 16, 8, 3053, 13, 182, 12103, 2807, 13, 3, 447, 7, 41, 712, 3, 6, 73, 1208, 9060, 3, 61, 3, 5, 1100, 2116, 30, 4700, 11417, 18243, 21, 3501, 26622, 7, 3, 6443, 163, 843, 6002, 11573, 43, 46, 2, 8, 5113, 13, 3, 9690, 2287, 13, 13154, 3, 2544, 4700, 4269, 54, 36, 5105, 57, 3, 9, 166, 455, 3, 60, 9933, 13, 8, 11417, 3, 6, 84, 16, 919, 54, 36, 1153, 3, 23148, 16, 11820, 40, 11, 1461, 14434, 190, 136, 4689, 138, 3, 26, 115, 51, 7, 3, 5, 16, 48, 1040, 62, 810, 4700, 11417, 18243, 16, 8, 3053, 13, 843, 6002, 11573, 11, 1215, 11593, 6002, 11573, 3, 5, 62, 166, 4410, 24, 237, 16, 8, 3053, 13, 163, 1215, 11593, 6002, 11573, 8, 682, 19, 975, 102, 614, 16, 331, 11641, 3, 6, 11, 6634, 3, 9, 879, 1573, 21, 4700, 18243, 13, 975, 6959, 75, 3268, 13154, 365, 843, 11, 1215, 11593, 6002, 11573, 3, 6, 3, 390, 30, 8, 3, 60, 9933, 13, 8, 11417, 16, 331, 2152, 28, 14261, 257, 3, 5, 258, 3, 6, 62, 2862, 3, 9, 769, 4057, 13, 975, 6959, 75, 3268, 13154, 24, 54, 36, 166, 455, 3, 60, 14973, 16, 8, 3053, 13, 843, 11, 1215, 11593, 6002, 11573, 3, 6, 11, 6634, 46, 12628, 21, 10937, 8, 166, 455, 3, 60, 9933, 13, 3, 9, 11417, 12770, 12, 224, 3, 9, 853, 13, 13154, 3, 5, 2031, 3, 6, 62, 4048, 8, 5237, 3949, 13, 8, 192, 2254, 21, 3026, 13154, 16, 8, 769, 4057, 756, 2799, 3, 5, 11082, 772, 3, 6, 4468, 30, 3, 9, 490, 11, 508, 3501, 13, 8, 1218, 2056, 3867, 4526, 13, 8, 3819, 13, 3, 11956, 50, 16333, 23, 35, 1629, 3, 6, 3133, 504, 8, 25850, 2337, 13, 8, 166, 455, 3, 390, 3317, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 8024, 11417, 8024, 3, 89, 3, 5, 32101, 3, 5, 32101, 1693, 13, 16783, 11, 682, 11641, 879, 3, 5, 879, 1353, 4516, 3, 6, 16783, 3, 6, 5016, 257, 3, 5, 1], "trg": "consistent query answering;inconsistent database;inconsistency;integrity constraints;conjunctive queries;database schemas;computational complexity;query rewriting;relational database;query rewriting", "tokenized_trg": [4700, 11417, 18243, 32100, 26608, 3501, 32100, 16, 8056, 343, 4392, 32100, 9322, 17765, 32100, 975, 6959, 75, 3268, 13154, 32100, 3501, 26622, 7, 32100, 25850, 11641, 32100, 11417, 3, 60, 9933, 32100, 4689, 138, 3501, 32100, 11417, 3, 60, 9933, 1]}
{"src": "context aware web information systems . <sep> apart from completeness usability , performance and maintainability are the key quality aspects for web information systems . considering usability as key implies taking usage processes into account right from the beginning of systems development . context awareness appears as a promising idea for increasing usability of web information systems . in the present paper we propose an approach to context awareness of web information systems that systematically distinguishes among the various important kinds of context . we show how parts of this context can be operationalized for increasing customers ' usage comfort . our approach permits designing web information systems such that they meet high quality expectations concerning usability , performance and maintainability . we demonstrate the validity of our approach by discussing the part of a banking web information system dedicated to online home loan application .", "tokenized_src": [2625, 2718, 765, 251, 1002, 3, 5, 32100, 3943, 45, 743, 655, 178, 2020, 3, 6, 821, 11, 1961, 2020, 33, 8, 843, 463, 3149, 21, 765, 251, 1002, 3, 5, 4014, 178, 2020, 38, 843, 18841, 838, 4742, 2842, 139, 905, 269, 45, 8, 1849, 13, 1002, 606, 3, 5, 2625, 4349, 3475, 38, 3, 9, 12894, 800, 21, 3094, 178, 2020, 13, 765, 251, 1002, 3, 5, 16, 8, 915, 1040, 62, 4230, 46, 1295, 12, 2625, 4349, 13, 765, 251, 1002, 24, 3, 28657, 15849, 15, 7, 859, 8, 796, 359, 4217, 13, 2625, 3, 5, 62, 504, 149, 1467, 13, 48, 2625, 54, 36, 7763, 1601, 21, 3094, 722, 3, 31, 4742, 2115, 3, 5, 69, 1295, 14079, 8296, 765, 251, 1002, 224, 24, 79, 942, 306, 463, 4454, 6238, 178, 2020, 3, 6, 821, 11, 1961, 2020, 3, 5, 62, 5970, 8, 21264, 13, 69, 1295, 57, 12104, 8, 294, 13, 3, 9, 8175, 765, 251, 358, 2425, 12, 367, 234, 2289, 917, 3, 5, 1], "trg": "context awareness;web information systems;web information system;usability;media type;sitelang;context aware information systems;scenes;scenarios;web site;media objects;web services;story boarding", "tokenized_trg": [2625, 4349, 32100, 765, 251, 1002, 32100, 765, 251, 358, 32100, 178, 2020, 32100, 783, 686, 32100, 353, 4612, 32100, 2625, 2718, 251, 1002, 32100, 8073, 32100, 13911, 32100, 765, 353, 32100, 783, 4820, 32100, 765, 364, 32100, 733, 3, 13993, 1]}
{"src": "contour based partial object recognition using symmetry in image databases . <sep> this paper discusses the problem of partial object recognition in image databases . we propose the method to reconstruct and estimate partially occluded shapes and regions of objects in images from overlapping and cutting . we present the robust method for recognizing partially occluded objects based on symmetry properties , which is based on the contours of objects . our method provides simple techniques to reconstruct occluded regions via a region copy using the symmetry axis within an object . based on the estimated parameters for partially occluded objects , we perform object recognition on the classification tree . since our method relies on reconstruction of the object based on the symmetry rather than statistical estimates , it has proven to be remarkably robust in recognizing partially occluded objects in the presence of scale changes , rotation , and viewpoint changes .", "tokenized_src": [17643, 3, 390, 11807, 3735, 5786, 338, 3, 29089, 16, 1023, 16961, 3, 5, 32100, 48, 1040, 17212, 7, 8, 682, 13, 11807, 3735, 5786, 16, 1023, 16961, 3, 5, 62, 4230, 8, 1573, 12, 29814, 11, 7037, 14610, 3, 13377, 21135, 26, 8803, 11, 6266, 13, 4820, 16, 1383, 45, 3, 31212, 11, 3753, 3, 5, 62, 915, 8, 6268, 1573, 21, 3, 22873, 14610, 3, 13377, 21135, 26, 4820, 3, 390, 30, 3, 29089, 2605, 3, 6, 84, 19, 3, 390, 30, 8, 17643, 7, 13, 4820, 3, 5, 69, 1573, 795, 650, 2097, 12, 29814, 3, 13377, 21135, 26, 6266, 1009, 3, 9, 1719, 2405, 338, 8, 3, 29089, 3, 8606, 7, 441, 46, 3735, 3, 5, 3, 390, 30, 8, 5861, 8755, 21, 14610, 3, 13377, 21135, 26, 4820, 3, 6, 62, 1912, 3735, 5786, 30, 8, 13774, 2195, 3, 5, 437, 69, 1573, 11455, 7, 30, 20532, 13, 8, 3735, 3, 390, 30, 8, 3, 29089, 1066, 145, 11775, 10014, 3, 6, 34, 65, 4162, 12, 36, 3, 24770, 6268, 16, 3, 22873, 14610, 3, 13377, 21135, 26, 4820, 16, 8, 3053, 13, 2643, 1112, 3, 6, 11981, 3, 6, 11, 21897, 1112, 3, 5, 1], "trg": "contour;contour;object recognition;object;recognition;symmetry;symmetry;image;reconstruction;estimation;occlusion", "tokenized_trg": [17643, 32100, 17643, 32100, 3735, 5786, 32100, 3735, 32100, 5786, 32100, 3, 29089, 32100, 3, 29089, 32100, 1023, 32100, 20532, 32100, 22781, 32100, 3, 32, 75, 11593, 1]}
{"src": "<unk> an entropy based algorithm for categorical clustering . <sep> in this paper we explore the connection between clustering categorical data and entropy clusters of similar poi lower entropy than those of dissimilar ones . we use this connection to design an incremental heuristic algorithm , <unk> , which is capable of efficiently clustering large data sets of records with categorical attributes , and data streams . in contrast with other categorical clustering algorithms published in the past , <unk> ' s clustering results are very stable for different sample sizes and parameter settings . also , the criteria for clustering is a very intuitive one , since it is deeply rooted on the well known notion of entropy . most importantly , <unk> is well equipped to deal with clustering of data streams ( continuously arriving streams of data point ) since it is an incremental algorithm capable of clustering new points without having to look at every point that has been clustered so far . we demonstrate the efficiency and scalability of <unk> by a series of experiments on real and synthetic data sets . categories and subject descriptors i . <digit> . <digit> computing methodologies pattern recognition clustering general terms entropy", "tokenized_src": [2, 46, 3, 35, 12395, 63, 3, 390, 12628, 21, 9624, 11498, 1489, 9068, 53, 3, 5, 32100, 16, 48, 1040, 62, 2075, 8, 2135, 344, 9068, 53, 9624, 11498, 1489, 331, 11, 3, 35, 12395, 63, 9068, 7, 13, 1126, 1977, 23, 1364, 3, 35, 12395, 63, 145, 273, 13, 1028, 26714, 2102, 3, 5, 62, 169, 48, 2135, 12, 408, 46, 28351, 3, 88, 450, 3040, 12628, 3, 6, 2, 3, 6, 84, 19, 3919, 13, 8877, 9068, 53, 508, 331, 3369, 13, 3187, 28, 9624, 11498, 1489, 12978, 3, 6, 11, 331, 15841, 3, 5, 16, 4656, 28, 119, 9624, 11498, 1489, 9068, 53, 16783, 1790, 16, 8, 657, 3, 6, 2, 3, 31, 3, 7, 9068, 53, 772, 33, 182, 5711, 21, 315, 3106, 4342, 11, 15577, 3803, 3, 5, 92, 3, 6, 8, 6683, 21, 9068, 53, 19, 3, 9, 182, 12954, 80, 3, 6, 437, 34, 19, 7447, 3, 19471, 30, 8, 168, 801, 9347, 13, 3, 35, 12395, 63, 3, 5, 167, 7521, 3, 6, 2, 19, 168, 5005, 12, 1154, 28, 9068, 53, 13, 331, 15841, 41, 11721, 15315, 15841, 13, 331, 500, 3, 61, 437, 34, 19, 46, 28351, 12628, 3919, 13, 9068, 53, 126, 979, 406, 578, 12, 320, 44, 334, 500, 24, 65, 118, 9068, 15, 26, 78, 623, 3, 5, 62, 5970, 8, 3949, 11, 3, 7, 1489, 2020, 13, 2, 57, 3, 9, 939, 13, 12341, 30, 490, 11, 13699, 331, 3369, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 23, 3, 5, 32101, 3, 5, 32101, 10937, 25984, 3275, 5786, 9068, 53, 879, 1353, 3, 35, 12395, 63, 1], "trg": "entropy;categorical clustering;clustering;data stream;data streams;incremental algorithm;coolcat", "tokenized_trg": [3, 35, 12395, 63, 32100, 9624, 11498, 1489, 9068, 53, 32100, 9068, 53, 32100, 331, 6093, 32100, 331, 15841, 32100, 28351, 12628, 32100, 1633, 2138, 1]}
{"src": "coupling and cohesion measures for evaluation of component reusability . <sep> this paper provides an account of new measures of coupling and cohesion developed to assess the reusability of java components retrieved from the internet by a search engine . these measures differ from the majority of established metrics in two respects they reflect the degree to which entities are coupled or resemble each other , and they take account of indirect couplings or similarities . an empirical comparison of the new measures with eight established metrics shows the new measures are consistently superior at ranking components according to their reusability . categories and subject descriptors d . <digit> . <digit> . <digit> metrics complexity measures . general terms measurement , experimentation .", "tokenized_src": [4897, 697, 11, 576, 88, 1938, 3629, 21, 5002, 13, 3876, 3, 60, 302, 2020, 3, 5, 32100, 48, 1040, 795, 46, 905, 13, 126, 3629, 13, 4897, 697, 11, 576, 88, 1938, 1597, 12, 6570, 8, 3, 60, 302, 2020, 13, 3, 27578, 3379, 3, 31340, 45, 8, 1396, 57, 3, 9, 960, 1948, 3, 5, 175, 3629, 7641, 45, 8, 2942, 13, 2127, 15905, 16, 192, 1445, 7, 79, 3548, 8, 1952, 12, 84, 12311, 33, 14286, 42, 3, 17083, 284, 119, 3, 6, 11, 79, 240, 905, 13, 16335, 4897, 697, 7, 42, 25758, 3, 5, 46, 23941, 4993, 13, 8, 126, 3629, 28, 2641, 2127, 15905, 1267, 8, 126, 3629, 33, 8182, 4784, 44, 11592, 3379, 1315, 12, 70, 3, 60, 302, 2020, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 3, 5, 32101, 15905, 11641, 3629, 3, 5, 879, 1353, 9753, 3, 6, 5016, 257, 3, 5, 1], "trg": "coupling;cohesion;reusability;java components;search engine technology;spearman rank correlation;intransitive relation;linear regression;component search engine;binary quantity;experimentary comparsion;cohesion metric", "tokenized_trg": [4897, 697, 32100, 576, 88, 1938, 32100, 3, 60, 302, 2020, 32100, 3, 27578, 3379, 32100, 960, 1948, 748, 32100, 23887, 348, 11003, 18712, 32100, 16, 7031, 23, 3268, 4689, 32100, 13080, 26625, 32100, 3876, 960, 1948, 32100, 14865, 8708, 32100, 5016, 1208, 12608, 1938, 32100, 576, 88, 1938, 3, 7959, 1]}
{"src": "a distributed 3d graphics library . <sep> we present repo 3d , a general purpose , object oriented library for developing distributed , interactive 3d graphics applications across a range of heterogeneous workstations . repo 3d is designed to make it easy for programmers to rapidly build prototypes using a familiar multi threaded , object oriented programming paradigm . all data sharing of both graphical and non graphical data is done via general purpose remote and replicated objects , presenting the illusion of a single distributed shared memory . graphical objects are directly distributed , circumventing the duplicate database problem and allowing programmers to focus on the application details . repo 3d is embedded in repo , an interpreted , lexically scoped , distributed programming language , allowing entire applications to be rapidly prototyped . we discuss repo 3d ' s design , and introduce the notion of local variations to the graphical objects , which allow local changes to be applied to shared graphical structures . local variations are needed to support transient local changes , such as highlighting , and responsive local editing operations . finally , we discuss how our approach could be applied using other programming languages , such as java . categories and subject descriptors d . <digit> . <digit> programming techniques concurrent programming distributed programming h . <digit> . <digit> information systems applications office automation groupware i . <digit> . <digit> computer graphics graphics systems distributed network graphics i . <digit> . <digit> computer graphics methodology and techniques graphics data structures and data types i . <digit> . <digit> computer graphics three dimensional graphics and realism virtual reality .", "tokenized_src": [3, 9, 8308, 220, 26, 6484, 3595, 3, 5, 32100, 62, 915, 3852, 32, 220, 26, 3, 6, 3, 9, 879, 1730, 3, 6, 3735, 3, 9442, 3595, 21, 2421, 8308, 3, 6, 6076, 220, 26, 6484, 1564, 640, 3, 9, 620, 13, 26481, 729, 15, 1162, 161, 6682, 7, 3, 5, 3852, 32, 220, 26, 19, 876, 12, 143, 34, 514, 21, 478, 5567, 12, 7313, 918, 14402, 7, 338, 3, 9, 3324, 1249, 4546, 15, 26, 3, 6, 3735, 3, 9442, 6020, 20491, 3, 5, 66, 331, 2178, 13, 321, 3, 16982, 11, 529, 3, 16982, 331, 19, 612, 1009, 879, 1730, 4322, 11, 18526, 26, 4820, 3, 6, 3, 12072, 8, 19178, 13, 3, 9, 712, 8308, 2471, 2594, 3, 5, 3, 16982, 4820, 33, 1461, 8308, 3, 6, 16533, 2169, 53, 8, 19197, 3501, 682, 11, 3, 3232, 478, 5567, 12, 992, 30, 8, 917, 1030, 3, 5, 3852, 32, 220, 26, 19, 13612, 16, 3852, 32, 3, 6, 46, 3, 20603, 3, 6, 3, 30949, 1427, 7401, 26, 3, 6, 8308, 6020, 1612, 3, 6, 3, 3232, 1297, 1564, 12, 36, 7313, 14402, 26, 3, 5, 62, 2497, 3852, 32, 220, 26, 3, 31, 3, 7, 408, 3, 6, 11, 4277, 8, 9347, 13, 415, 10914, 12, 8, 3, 16982, 4820, 3, 6, 84, 995, 415, 1112, 12, 36, 2930, 12, 2471, 3, 16982, 5278, 3, 5, 415, 10914, 33, 906, 12, 380, 3017, 4741, 415, 1112, 3, 6, 224, 38, 3, 19465, 3, 6, 11, 10586, 415, 8414, 2673, 3, 5, 2031, 3, 6, 62, 2497, 149, 69, 1295, 228, 36, 2930, 338, 119, 6020, 8024, 3, 6, 224, 38, 3, 27578, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 6020, 2097, 18964, 6020, 8308, 6020, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1002, 1564, 828, 11747, 563, 3404, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 6484, 1002, 8308, 1229, 6484, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 15663, 11, 2097, 6484, 331, 5278, 11, 331, 1308, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 386, 3, 11619, 6484, 11, 3, 60, 6835, 4291, 2669, 3, 5, 1], "trg": "3d graphics;3d graphics library;3d graphics;library;repo 3d;object oriented;object oriented library;object oriented;3d graphics application;heterogeneous workstation;prototyping;prototype;programming;data sharing;replicated object;distributed shared memory;shared memory;graphical objects;duplicate database;programming language;programming language;local variation;local variations;java;data structures;change notification;syncronisation;distributed virtual environments;client server;interactive graphical application;multi threaded programming;client server approach;object oriented graphics;shared data object model;distributed applications;multi user interaction;distributed systems;properties;distributed graphics;distributed processes;callbacks;data distribution;object representation", "tokenized_trg": [220, 26, 6484, 32100, 220, 26, 6484, 3595, 32100, 220, 26, 6484, 32100, 3595, 32100, 3852, 32, 220, 26, 32100, 3735, 3, 9442, 32100, 3735, 3, 9442, 3595, 32100, 3735, 3, 9442, 32100, 220, 26, 6484, 917, 32100, 26481, 729, 15, 1162, 161, 6682, 32100, 23844, 12575, 53, 32100, 14402, 32100, 6020, 32100, 331, 2178, 32100, 18526, 26, 3735, 32100, 8308, 2471, 2594, 32100, 2471, 2594, 32100, 3, 16982, 4820, 32100, 19197, 3501, 32100, 6020, 1612, 32100, 6020, 1612, 32100, 415, 12338, 32100, 415, 10914, 32100, 3, 27578, 32100, 331, 5278, 32100, 483, 11420, 32100, 8953, 18036, 2121, 32100, 8308, 4291, 8258, 32100, 1188, 2460, 32100, 6076, 3, 16982, 917, 32100, 1249, 4546, 15, 26, 6020, 32100, 1188, 2460, 1295, 32100, 3735, 3, 9442, 6484, 32100, 2471, 331, 3735, 825, 32100, 8308, 1564, 32100, 1249, 1139, 6565, 32100, 8308, 1002, 32100, 2605, 32100, 8308, 6484, 32100, 8308, 2842, 32100, 580, 1549, 7, 32100, 331, 3438, 32100, 3735, 6497, 1]}
{"src": "coupling feature selection and machine learning methods for navigational query identification . <sep> it is important yet hard to identify navigational queries in web search due to a lack of sufficient information in web queries , which are typically very short . in this paper we study several machine learning methods , including naive bayes model , maximum entropy model , support vector machine ( svm ) , and stochastic gradient boosting tree ( sgbt ) , for navigational query identification in web search . to boost the performance of these machine techniques , we exploit several feature selection methods and propose coupling feature selection with classification approaches to achieve the best performance . different from most prior work that uses a small number of features , in this paper , we study the problem of identifying navigational queries with thousands of available features , extracted from major commercial search engine results , web search user click data , query log , and the whole web ' s relational content . a multi level feature extraction system is constructed . our results on real search data show that <digit> ) among all the features we tested , user click distribution features are the most important set of features for identifying navigational queries . <digit> ) in order to achieve good performance , machine learning approaches have to be coupled with good feature selection methods . we find that gradient boosting tree , coupled with linear svm feature selection is most effective . <digit> ) with carefully coupled feature selection and classification approaches , navigational queries can be accurately identified with <digit> . <digit> % f1 score , which is <digit> % error rate reduction compared to the best uncoupled system , and <digit> % error rate reduction compared to a well tuned system without feature selection . categories and subject descriptors h . <digit> information systems applications miscellaneous dr . peng contributes to this paper equally as dr . lu . general terms experimentation", "tokenized_src": [4897, 697, 1451, 1801, 11, 1437, 1036, 2254, 21, 8789, 138, 11417, 10356, 3, 5, 32100, 34, 19, 359, 780, 614, 12, 2862, 8789, 138, 13154, 16, 765, 960, 788, 12, 3, 9, 2136, 13, 6684, 251, 16, 765, 13154, 3, 6, 84, 33, 3115, 182, 710, 3, 5, 16, 48, 1040, 62, 810, 633, 1437, 1036, 2254, 3, 6, 379, 3, 29, 9, 757, 10210, 15, 7, 825, 3, 6, 2411, 3, 35, 12395, 63, 825, 3, 6, 380, 12938, 1437, 41, 3, 7, 208, 51, 3, 61, 3, 6, 11, 13564, 107, 10057, 26462, 3, 24220, 2195, 41, 3, 7, 122, 115, 17, 3, 61, 3, 6, 21, 8789, 138, 11417, 10356, 16, 765, 960, 3, 5, 12, 4888, 8, 821, 13, 175, 1437, 2097, 3, 6, 62, 9248, 633, 1451, 1801, 2254, 11, 4230, 4897, 697, 1451, 1801, 28, 13774, 6315, 12, 1984, 8, 200, 821, 3, 5, 315, 45, 167, 1884, 161, 24, 2284, 3, 9, 422, 381, 13, 753, 3, 6, 16, 48, 1040, 3, 6, 62, 810, 8, 682, 13, 3, 9690, 8789, 138, 13154, 28, 2909, 13, 347, 753, 3, 6, 21527, 45, 779, 1328, 960, 1948, 772, 3, 6, 765, 960, 1139, 1214, 331, 3, 6, 11417, 4303, 3, 6, 11, 8, 829, 765, 3, 31, 3, 7, 4689, 138, 738, 3, 5, 3, 9, 1249, 593, 1451, 16629, 358, 19, 8520, 3, 5, 69, 772, 30, 490, 960, 331, 504, 24, 32101, 3, 61, 859, 66, 8, 753, 62, 5285, 3, 6, 1139, 1214, 3438, 753, 33, 8, 167, 359, 356, 13, 753, 21, 3, 9690, 8789, 138, 13154, 3, 5, 32101, 3, 61, 16, 455, 12, 1984, 207, 821, 3, 6, 1437, 1036, 6315, 43, 12, 36, 14286, 28, 207, 1451, 1801, 2254, 3, 5, 62, 253, 24, 26462, 3, 24220, 2195, 3, 6, 14286, 28, 13080, 3, 7, 208, 51, 1451, 1801, 19, 167, 1231, 3, 5, 32101, 3, 61, 28, 4321, 14286, 1451, 1801, 11, 13774, 6315, 3, 6, 8789, 138, 13154, 54, 36, 12700, 4313, 28, 32101, 3, 5, 32101, 3, 1454, 3, 89, 536, 2604, 3, 6, 84, 19, 32101, 3, 1454, 3505, 1080, 4709, 3, 2172, 12, 8, 200, 73, 15976, 1361, 358, 3, 6, 11, 32101, 3, 1454, 3505, 1080, 4709, 3, 2172, 12, 3, 9, 168, 14007, 358, 406, 1451, 1801, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 251, 1002, 1564, 1817, 7125, 8102, 1162, 3, 26, 52, 3, 5, 158, 1725, 4139, 7, 12, 48, 1040, 7509, 38, 3, 26, 52, 3, 5, 3, 40, 76, 3, 5, 879, 1353, 5016, 257, 1], "trg": "machine learning;support vector machine;stochastic gradient boosting tree;gradient boosting tree;experiments results;navigational query classification;naive bayes classifier;maximum entropy classifier;information gain;linear svm feature ranking;multiple level feature system;navigational and informational query", "tokenized_trg": [1437, 1036, 32100, 380, 12938, 1437, 32100, 13564, 107, 10057, 26462, 3, 24220, 2195, 32100, 26462, 3, 24220, 2195, 32100, 12341, 772, 32100, 8789, 138, 11417, 13774, 32100, 3, 29, 9, 757, 10210, 15, 7, 853, 7903, 32100, 2411, 3, 35, 12395, 63, 853, 7903, 32100, 251, 2485, 32100, 13080, 3, 7, 208, 51, 1451, 11592, 32100, 1317, 593, 1451, 358, 32100, 8789, 138, 11, 251, 138, 11417, 1]}
{"src": "coverage directed test generation for functional verification using bayesian networks . <sep> functional verification is widely acknowledged as the bottleneck in the hardware design cycle . this paper addresses one of the main challenges of simulation based verification ( or dynamic verification ) , by providing a new approach for coverage directed test generation ( cdg ) . this approach is based on bayesian networks and computer learning techniques . it provides an efficient way for closing a feedback loop from the coverage domain back to a generator that produces new stimuli to the tested design . in this paper , we show how to apply bayesian networks to the cdg problem . applying bayesian networks to the cdg framework has been tested in several experiments , exhibiting encouraging results and indicating that the suggested approach can be used to achieve cdg goals . categories and subject descriptors b . <digit> . <digit> logic design design aids verification general terms verification , measurement , algorithms , experimentation", "tokenized_src": [2591, 6640, 794, 3381, 21, 5014, 17549, 338, 10210, 15, 10488, 5275, 3, 5, 32100, 5014, 17549, 19, 5456, 16974, 38, 8, 4782, 14694, 16, 8, 4214, 408, 4005, 3, 5, 48, 1040, 7181, 80, 13, 8, 711, 2428, 13, 11108, 3, 390, 17549, 41, 42, 4896, 17549, 3, 61, 3, 6, 57, 1260, 3, 9, 126, 1295, 21, 2591, 6640, 794, 3381, 41, 3, 75, 26, 122, 3, 61, 3, 5, 48, 1295, 19, 3, 390, 30, 10210, 15, 10488, 5275, 11, 1218, 1036, 2097, 3, 5, 34, 795, 46, 2918, 194, 21, 6733, 3, 9, 3160, 6494, 45, 8, 2591, 3303, 223, 12, 3, 9, 9877, 24, 9560, 126, 12682, 23, 12, 8, 5285, 408, 3, 5, 16, 48, 1040, 3, 6, 62, 504, 149, 12, 1581, 10210, 15, 10488, 5275, 12, 8, 3, 75, 26, 122, 682, 3, 5, 6247, 10210, 15, 10488, 5275, 12, 8, 3, 75, 26, 122, 4732, 65, 118, 5285, 16, 633, 12341, 3, 6, 3, 30436, 9523, 772, 11, 3, 15716, 24, 8, 5259, 1295, 54, 36, 261, 12, 1984, 3, 75, 26, 122, 1766, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 115, 3, 5, 32101, 3, 5, 32101, 9769, 408, 408, 3052, 7, 17549, 879, 1353, 17549, 3, 6, 9753, 3, 6, 16783, 3, 6, 5016, 257, 1], "trg": "coverage directed test generation;functional verification;bayesian networks;maximal a posteriori;coverage model;most probable explanation;coverage analysis;bidirectional inferences;design under test;conditional probability;markov chain;dynamic bayesian network", "tokenized_trg": [2591, 6640, 794, 3381, 32100, 5014, 17549, 32100, 10210, 15, 10488, 5275, 32100, 13393, 3, 9, 29928, 23, 32100, 2591, 825, 32100, 167, 23093, 7295, 32100, 2591, 1693, 32100, 2647, 26352, 16, 11788, 7, 32100, 408, 365, 794, 32100, 1706, 138, 15834, 32100, 3157, 9789, 3741, 32100, 4896, 10210, 15, 10488, 1229, 1]}
{"src": "creating a massive master index for html and print . <sep> an index connects readers with information . creating an index for a single book is a time honored craft . creating an index for a massive library of html topics is a modern craft that has largely been discarded in favor of robust search engines . the authors show how they optimized a single sourced index for collections of html topics , printed books , and pdf books . with examples from a recent index of <digit> , <digit> entries for <digit> , <digit> distinct html topics also published as <digit> different pdf books , the authors discuss the connections between modern technology and traditional information retrieval methods that made the index possible , usable , and efficient to create and maintain . categories and subject descriptors i . <digit> . <digit> document and text processing index generation , document preparation index generation h . <digit> . <digit> information storage and retrieval content analysis and indexing indexing methods h3 . <digit> digital libraries user issues h . <digit> . <digit> information interfaces and presentation hypertext hypermedia navigation general terms documentation , design , human factors", "tokenized_src": [1577, 3, 9, 3805, 2325, 5538, 21, 3, 10500, 11, 2281, 3, 5, 32100, 46, 5538, 1979, 7, 3962, 28, 251, 3, 5, 1577, 46, 5538, 21, 3, 9, 712, 484, 19, 3, 9, 97, 13242, 5449, 3, 5, 1577, 46, 5538, 21, 3, 9, 3805, 3595, 13, 3, 10500, 4064, 19, 3, 9, 941, 5449, 24, 65, 3, 6974, 118, 3, 29611, 16, 4971, 13, 6268, 960, 7277, 3, 5, 8, 5921, 504, 149, 79, 18149, 3, 9, 712, 3, 15551, 5538, 21, 8274, 13, 3, 10500, 4064, 3, 6, 5519, 1335, 3, 6, 11, 9210, 1335, 3, 5, 28, 4062, 45, 3, 9, 1100, 5538, 13, 32101, 3, 6, 32101, 10066, 21, 32101, 3, 6, 32101, 6746, 3, 10500, 4064, 92, 1790, 38, 32101, 315, 9210, 1335, 3, 6, 8, 5921, 2497, 8, 5992, 344, 941, 748, 11, 1435, 251, 24515, 138, 2254, 24, 263, 8, 5538, 487, 3, 6, 178, 179, 3, 6, 11, 2918, 12, 482, 11, 1961, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 23, 3, 5, 32101, 3, 5, 32101, 1708, 11, 1499, 3026, 5538, 3381, 3, 6, 1708, 4537, 5538, 3381, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 738, 1693, 11, 5538, 53, 5538, 53, 2254, 3, 107, 519, 3, 5, 32101, 1125, 12256, 1139, 807, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 3459, 7, 11, 3831, 6676, 6327, 6676, 8172, 8789, 879, 1353, 7192, 3, 6, 408, 3, 6, 936, 2580, 1], "trg": "massive master;indexing;search;information retrieval methods;navigation;human factors;online information;indexing problems;internally developed format;book indexes;drop down selection of terms;primary index entry;html master index;sql data type;automation", "tokenized_trg": [3805, 2325, 32100, 5538, 53, 32100, 960, 32100, 251, 24515, 138, 2254, 32100, 8789, 32100, 936, 2580, 32100, 367, 251, 32100, 5538, 53, 982, 32100, 22533, 1597, 1910, 32100, 484, 5538, 15, 7, 32100, 2328, 323, 1801, 13, 1353, 32100, 2329, 5538, 1764, 32100, 3, 10500, 2325, 5538, 32100, 11820, 40, 331, 686, 32100, 11747, 1]}
{"src": "data mining in metric space an empirical analysis of supervised learning performance criteria . <sep> many criteria can be used to evaluate the performance of supervised learning . different criteria are appropriate in different settings , and it is not always clear which criteria to use . a further complication is that learning methods that perform well on one criterion may not perform well on other criteria . for example , svms and boosting are designed to optimize accuracy , whereas neural nets typically optimize squared error or cross entropy . we conducted an empirical study using a variety of learning methods ( svms , neural nets , k nearest neighbor , bagged and boosted trees , and boosted stumps ) to compare nine boolean classification performance metrics accuracy , lift , f score , area under the roc curve , average precision , precision recall break even point , squared error , cross entropy , and probability calibration . multidimensional scaling ( mds ) shows that these metrics span a low dimensional manifold . the three metrics that are appropriate when predictions are interpreted as probabilities squared error , cross entropy , and calibration , lay in one part of metric space far away from metrics that depend on the relative order of the predicted values roc area , average precision , break even point , and lift . in between them fall two metrics that depend on comparing predictions to a threshold accuracy and f score . as expected , maximum margin methods such as svms and boosted trees have excellent performance on metrics like accuracy , but perform poorly on probability metrics such as squared error . what was not expected was that the margin methods have excellent performance on ordering metrics such as roc area and average precision . we introduce a new metric , sar , that combines squared error , accuracy , and roc area into one metric . mds and correlation analysis shows that sar is centrally located and correlates well with other metrics , suggesting that it is a good general purpose metric to use when more specific criteria are not known . categories subject descriptors i . <digit> . <digit> pattern recognition design methodology classifier design evaluation . general terms algorithms , measurement , performance , experimentation .", "tokenized_src": [331, 5558, 16, 3, 7959, 628, 46, 23941, 1693, 13, 3, 23313, 1036, 821, 6683, 3, 5, 32100, 186, 6683, 54, 36, 261, 12, 6825, 8, 821, 13, 3, 23313, 1036, 3, 5, 315, 6683, 33, 2016, 16, 315, 3803, 3, 6, 11, 34, 19, 59, 373, 964, 84, 6683, 12, 169, 3, 5, 3, 9, 856, 3, 287, 13555, 19, 24, 1036, 2254, 24, 1912, 168, 30, 80, 3, 2685, 10140, 29, 164, 59, 1912, 168, 30, 119, 6683, 3, 5, 21, 677, 3, 6, 3, 7, 208, 51, 7, 11, 3, 24220, 33, 876, 12, 13436, 7452, 3, 6, 3, 10339, 24228, 3134, 7, 3115, 13436, 2812, 26, 3505, 42, 2269, 3, 35, 12395, 63, 3, 5, 62, 4468, 46, 23941, 810, 338, 3, 9, 1196, 13, 1036, 2254, 41, 3, 7, 208, 51, 7, 3, 6, 24228, 3134, 7, 3, 6, 3, 157, 13012, 10678, 3, 6, 2182, 5402, 11, 3, 30695, 3124, 3, 6, 11, 3, 30695, 27879, 7, 3, 61, 12, 4048, 4169, 3, 12840, 109, 152, 13774, 821, 15905, 7452, 3, 6, 5656, 3, 6, 3, 89, 2604, 3, 6, 616, 365, 8, 3, 7818, 8435, 3, 6, 1348, 11723, 3, 6, 11723, 7881, 1733, 237, 500, 3, 6, 2812, 26, 3505, 3, 6, 2269, 3, 35, 12395, 63, 3, 6, 11, 15834, 26278, 3, 5, 1249, 11619, 24485, 41, 3, 51, 26, 7, 3, 61, 1267, 24, 175, 15905, 8438, 3, 9, 731, 3, 11619, 388, 99, 1490, 3, 5, 8, 386, 15905, 24, 33, 2016, 116, 20099, 33, 3, 20603, 38, 9551, 2197, 2812, 26, 3505, 3, 6, 2269, 3, 35, 12395, 63, 3, 6, 11, 26278, 3, 6, 8260, 16, 80, 294, 13, 3, 7959, 628, 623, 550, 45, 15905, 24, 6002, 30, 8, 5237, 455, 13, 8, 15439, 2620, 3, 7818, 616, 3, 6, 1348, 11723, 3, 6, 1733, 237, 500, 3, 6, 11, 5656, 3, 5, 16, 344, 135, 1590, 192, 15905, 24, 6002, 30, 3, 14622, 20099, 12, 3, 9, 12709, 7452, 11, 3, 89, 2604, 3, 5, 38, 1644, 3, 6, 2411, 6346, 2254, 224, 38, 3, 7, 208, 51, 7, 11, 3, 30695, 3124, 43, 1287, 821, 30, 15905, 114, 7452, 3, 6, 68, 1912, 17509, 30, 15834, 15905, 224, 38, 2812, 26, 3505, 3, 5, 125, 47, 59, 1644, 47, 24, 8, 6346, 2254, 43, 1287, 821, 30, 12320, 15905, 224, 38, 3, 7818, 616, 11, 1348, 11723, 3, 5, 62, 4277, 3, 9, 126, 3, 7959, 3, 6, 3, 7, 291, 3, 6, 24, 3, 15256, 2812, 26, 3505, 3, 6, 7452, 3, 6, 11, 3, 7818, 616, 139, 80, 3, 7959, 3, 5, 3, 51, 26, 7, 11, 18712, 1693, 1267, 24, 3, 7, 291, 19, 2069, 120, 1069, 11, 30575, 7, 168, 28, 119, 15905, 3, 6, 15495, 24, 34, 19, 3, 9, 207, 879, 1730, 3, 7959, 12, 169, 116, 72, 806, 6683, 33, 59, 801, 3, 5, 5897, 1426, 20, 11815, 127, 7, 3, 23, 3, 5, 32101, 3, 5, 32101, 3275, 5786, 408, 15663, 853, 7903, 408, 5002, 3, 5, 879, 1353, 16783, 3, 6, 9753, 3, 6, 821, 3, 6, 5016, 257, 3, 5, 1], "trg": "metrics;supervised learning;supervised learning;svms;squared error;cross entropy;performance metric;lift;roc;precision;recall;ordering metric;algorithmns;euclidean distance;performance evaluation;standard deviation;pairwise;backpropagation", "tokenized_trg": [15905, 32100, 3, 23313, 1036, 32100, 3, 23313, 1036, 32100, 3, 7, 208, 51, 7, 32100, 2812, 26, 3505, 32100, 2269, 3, 35, 12395, 63, 32100, 821, 3, 7959, 32100, 5656, 32100, 3, 7818, 32100, 11723, 32100, 7881, 32100, 12320, 3, 7959, 32100, 12628, 29, 7, 32100, 3, 15, 76, 14758, 221, 152, 2357, 32100, 821, 5002, 32100, 1068, 25291, 32100, 3116, 10684, 32100, 223, 1409, 11057, 257, 1]}
{"src": "database security curriculum in infosec program . <sep> database security course is an important part of the infosec curriculum . in many institutions this is not taught as an independent course . parts of the contents presented in this paper are usually incorporated in other courses such as network security . the importance of database security concepts stems from the fact that a compromise of data at rest could expose an organization to a greater security threat than otherwise . database vulnerabilities exposed recently in several high profile incidents would be a good reason to dedicate a full course to this important topic . in this paper we present key topics such as technologies for database protection , access control , multilevel security , database vulnerabilities and defenses , privacy and legal issues , impact of policies and some well known secure database models . categories and subject descriptors h . <digit> . <digit> general security , integrity and protection d . <digit> . <digit> security and protection access controls , authentication k . <digit> . <digit> security and protection physical security", "tokenized_src": [3501, 1034, 7850, 16, 2845, 7549, 478, 3, 5, 32100, 3501, 1034, 503, 19, 46, 359, 294, 13, 8, 2845, 7549, 7850, 3, 5, 16, 186, 4222, 48, 19, 59, 4436, 38, 46, 2547, 503, 3, 5, 1467, 13, 8, 10223, 2569, 16, 48, 1040, 33, 1086, 3, 10975, 16, 119, 2996, 224, 38, 1229, 1034, 3, 5, 8, 3172, 13, 3501, 1034, 6085, 6269, 7, 45, 8, 685, 24, 3, 9, 12326, 13, 331, 44, 880, 228, 14644, 46, 1470, 12, 3, 9, 2123, 1034, 5888, 145, 2904, 3, 5, 3501, 27311, 6666, 1310, 16, 633, 306, 3278, 15935, 133, 36, 3, 9, 207, 1053, 12, 19567, 3, 9, 423, 503, 12, 48, 359, 2859, 3, 5, 16, 48, 1040, 62, 915, 843, 4064, 224, 38, 2896, 21, 3501, 1711, 3, 6, 592, 610, 3, 6, 1249, 4563, 1034, 3, 6, 3501, 27311, 11, 4453, 7, 3, 6, 4570, 11, 1281, 807, 3, 6, 1113, 13, 3101, 11, 128, 168, 801, 2451, 3501, 2250, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 879, 1034, 3, 6, 9322, 11, 1711, 3, 26, 3, 5, 32101, 3, 5, 32101, 1034, 11, 1711, 592, 7415, 3, 6, 20188, 3, 157, 3, 5, 32101, 3, 5, 32101, 1034, 11, 1711, 1722, 1034, 1], "trg": "database;database;security;access control;multilevel security;privacy;policy;authentication;cia;inference;encryption;buffer overflows;polyinstantiation;inference channel", "tokenized_trg": [3501, 32100, 3501, 32100, 1034, 32100, 592, 610, 32100, 1249, 4563, 1034, 32100, 4570, 32100, 1291, 32100, 20188, 32100, 3, 4915, 32100, 16, 11788, 32100, 19849, 32100, 17164, 147, 7631, 7, 32100, 4251, 26166, 23, 257, 32100, 16, 11788, 4245, 1]}
{"src": "dbblue low diameter and self routing bluetooth scatternet . <sep> this paper addresses the problem of scatternet formation for single hop bluetooth based ad hoc networks , with minimal communication overhead . we adopt the well known structure de bruijn graph to form the backbone of bluetooth scatternet , hereafter called dbblue , such that every master node has at most seven slaves , every slave node is in at most two piconets , and no node assumes both master and slave roles . our structure dbblue also enjoys a nice routing property the diameter of the graph is and we can find a path with at most hops for every pair of nodes without any routing table . moreover , the congestion of every node is at most , assuming that a unit of total traffic demand is equally distributed among all pair of nodes . we discuss in detail a vigorous method to locally update the structure dbblue using at most communications when a node joins or leaves the network . in most cases , the cost of updating the scatternet is actually since a node can join or leave without affecting the remaining scatternet . the number of nodes affected when a node joins or leaves the network is always bounded from above by a constant . to facilitate self routing and easy updating , we design a scalable mac assigning mechanism for piconet , which guarantees the packet delivery during scatternet updating . the dbblue scatternet can be constructed incrementally when the nodes join the network one by one . previously no method can guarantee all these properties although some methods can achieve some of the properties . categories and subject descriptors c . <digit> . <digit> network architecture and design wireless communication , network topology g . <digit> . <digit> graph theory network problems , graph algorithms general terms algorithms , design , theory", "tokenized_src": [3, 26, 115, 7060, 15, 731, 9260, 11, 1044, 22764, 31327, 24713, 1582, 3, 5, 32100, 48, 1040, 7181, 8, 682, 13, 24713, 1582, 3239, 21, 712, 13652, 31327, 3, 390, 3, 9, 26, 3, 24344, 5275, 3, 6, 28, 6211, 1901, 15998, 3, 5, 62, 4693, 8, 168, 801, 1809, 20, 3, 9052, 28469, 8373, 12, 607, 8, 223, 12269, 13, 31327, 24713, 1582, 3, 6, 270, 10245, 718, 3, 26, 115, 7060, 15, 3, 6, 224, 24, 334, 2325, 150, 221, 65, 44, 167, 2391, 15484, 7, 3, 6, 334, 15484, 150, 221, 19, 16, 44, 167, 192, 6686, 782, 17, 7, 3, 6, 11, 150, 150, 221, 5344, 7, 321, 2325, 11, 15484, 6270, 3, 5, 69, 1809, 3, 26, 115, 7060, 15, 92, 777, 7, 3, 9, 1245, 22764, 785, 8, 9260, 13, 8, 8373, 19, 11, 62, 54, 253, 3, 9, 2071, 28, 44, 167, 13652, 7, 21, 334, 3116, 13, 150, 1395, 406, 136, 22764, 953, 3, 5, 72, 1890, 3, 6, 8, 26294, 13, 334, 150, 221, 19, 44, 167, 3, 6, 3, 15433, 24, 3, 9, 1745, 13, 792, 2117, 2173, 19, 7509, 8308, 859, 66, 3116, 13, 150, 1395, 3, 5, 62, 2497, 16, 2736, 3, 9, 25681, 1573, 12, 8428, 2270, 8, 1809, 3, 26, 115, 7060, 15, 338, 44, 167, 5030, 116, 3, 9, 150, 221, 1715, 7, 42, 3231, 8, 1229, 3, 5, 16, 167, 1488, 3, 6, 8, 583, 13, 14809, 8, 24713, 1582, 19, 700, 437, 3, 9, 150, 221, 54, 1715, 42, 1175, 406, 3, 13403, 8, 4080, 24713, 1582, 3, 5, 8, 381, 13, 150, 1395, 4161, 116, 3, 9, 150, 221, 1715, 7, 42, 3231, 8, 1229, 19, 373, 3, 115, 14471, 45, 756, 57, 3, 9, 3917, 3, 5, 12, 6758, 1044, 22764, 11, 514, 14809, 3, 6, 62, 408, 3, 9, 3, 24079, 11486, 12317, 53, 8557, 21, 6686, 782, 17, 3, 6, 84, 16935, 8, 13531, 1929, 383, 24713, 1582, 14809, 3, 5, 8, 3, 26, 115, 7060, 15, 24713, 1582, 54, 36, 8520, 28351, 120, 116, 8, 150, 1395, 1715, 8, 1229, 80, 57, 80, 3, 5, 3150, 150, 1573, 54, 3614, 66, 175, 2605, 2199, 128, 2254, 54, 1984, 128, 13, 8, 2605, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 3, 5, 32101, 1229, 4648, 11, 408, 5419, 1901, 3, 6, 1229, 420, 1863, 3, 122, 3, 5, 32101, 3, 5, 32101, 8373, 4516, 1229, 982, 3, 6, 8373, 16783, 879, 1353, 16783, 3, 6, 408, 3, 6, 4516, 1], "trg": "low diameter;low diameter;self routing;bluetooth;scatternet formation;single hop;ad hoc networks;de bruijn graph;bruijn graph;easy updating;scalable mac assignment;network topology;equal traffic;self routing scatternet;bluetooth networks;const updating cost", "tokenized_trg": [731, 9260, 32100, 731, 9260, 32100, 1044, 22764, 32100, 31327, 32100, 24713, 1582, 3239, 32100, 712, 13652, 32100, 3, 9, 26, 3, 24344, 5275, 32100, 20, 3, 9052, 28469, 8373, 32100, 3, 9052, 28469, 8373, 32100, 514, 14809, 32100, 3, 24079, 11486, 9587, 32100, 1229, 420, 1863, 32100, 4081, 2117, 32100, 1044, 22764, 24713, 1582, 32100, 31327, 5275, 32100, 6900, 17, 14809, 583, 1]}
{"src": "development of e commerce statistics and the implications . <sep> this text has analyzed the development of e commerce in some developed countries such as canada , u . s . a . , japan , etc and put forward several suggestions on how to set up the system of e commerce in our country taking the national conditions of our country into account .", "tokenized_src": [606, 13, 3, 15, 12794, 7475, 11, 8, 12418, 3, 5, 32100, 48, 1499, 65, 3, 16466, 8, 606, 13, 3, 15, 12794, 16, 128, 1597, 1440, 224, 38, 19343, 3, 6, 3, 76, 3, 5, 3, 7, 3, 5, 3, 9, 3, 5, 3, 6, 2662, 2837, 3, 6, 672, 11, 474, 1039, 633, 5782, 30, 149, 12, 356, 95, 8, 358, 13, 3, 15, 12794, 16, 69, 684, 838, 8, 1157, 1124, 13, 69, 684, 139, 905, 3, 5, 1], "trg": "e commerce;e commerce statistics;statistics;implications;statistical methods;authority;china;development stage;measurement;survey;definition of e commerce;statistical survey", "tokenized_trg": [3, 15, 12794, 32100, 3, 15, 12794, 7475, 32100, 7475, 32100, 12418, 32100, 11775, 2254, 32100, 5015, 32100, 20576, 32100, 606, 1726, 32100, 9753, 32100, 3719, 32100, 4903, 13, 3, 15, 12794, 32100, 11775, 3719, 1]}
{"src": "development through communicative action and information system design a case study from south africa . <sep> many authors have recognised the importance of structure in shaping information system ( is ) design and use . structuration theory has been used in is research and design to assist with the identification and understanding of the structures in which the is is situated . from a critical theoretical perspective , focusing on the habermas ' theory of communicative action , a community based child health information system was designed and implemented in a municipality in rural south africa . the structures which shaped and influenced the design of this is ( the restructured health services and social tradition ) are explored and discussed . from this case study the implications of using is design as a developmental tool are raised namely the development of a shared understanding , the participation of key players and the agreement on joint action . categories and subject descriptors h . <digit> . <digit> information systems application general h . <digit> . <digit> information systems applications systems and information theory information theory general terms design , theory additional key words and phrases information system design , community information systems , structuration theory , critical social theory", "tokenized_src": [606, 190, 6639, 447, 1528, 1041, 11, 251, 358, 408, 3, 9, 495, 810, 45, 3414, 24040, 3, 5, 32100, 186, 5921, 43, 14869, 8, 3172, 13, 1809, 16, 20266, 251, 358, 41, 19, 3, 61, 408, 11, 169, 3, 5, 19444, 1575, 4516, 65, 118, 261, 16, 19, 585, 11, 408, 12, 2094, 28, 8, 10356, 11, 1705, 13, 8, 5278, 16, 84, 8, 19, 19, 8382, 3, 5, 45, 3, 9, 2404, 13605, 3503, 3, 6, 3, 7388, 30, 8, 2010, 52, 2754, 3, 31, 4516, 13, 6639, 447, 1528, 1041, 3, 6, 3, 9, 573, 3, 390, 861, 533, 251, 358, 47, 876, 11, 6960, 16, 3, 9, 27597, 16, 5372, 3414, 24040, 3, 5, 8, 5278, 84, 3, 6489, 11, 3, 12913, 8, 408, 13, 48, 19, 41, 8, 3, 60, 16180, 26, 533, 364, 11, 569, 4387, 3, 61, 33, 15883, 11, 5172, 3, 5, 45, 48, 495, 810, 8, 12418, 13, 338, 19, 408, 38, 3, 9, 20697, 1464, 33, 3279, 3, 17332, 8, 606, 13, 3, 9, 2471, 1705, 3, 6, 8, 5178, 13, 843, 1508, 11, 8, 2791, 30, 4494, 1041, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1002, 917, 879, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1002, 1564, 1002, 11, 251, 4516, 251, 4516, 879, 1353, 408, 3, 6, 4516, 1151, 843, 1234, 11, 15101, 251, 358, 408, 3, 6, 573, 251, 1002, 3, 6, 19444, 1575, 4516, 3, 6, 2404, 569, 4516, 1], "trg": "communicative action;information system design;structuration theory;structuration theory;health information systems;community information systems;critical social theory;moral codes or norms;community monitoring system;conducive environment;critical social theory in is design;the ideal speech situation;marginalisation;interpretative schemes;duality of structure", "tokenized_trg": [6639, 447, 1528, 1041, 32100, 251, 358, 408, 32100, 19444, 1575, 4516, 32100, 19444, 1575, 4516, 32100, 533, 251, 1002, 32100, 573, 251, 1002, 32100, 2404, 569, 4516, 32100, 4854, 5633, 42, 7982, 7, 32100, 573, 4891, 358, 32100, 17689, 757, 1164, 32100, 2404, 569, 4516, 16, 19, 408, 32100, 8, 1523, 5023, 1419, 32100, 18777, 2121, 32100, 7280, 1528, 15171, 32100, 146, 10355, 13, 1809, 1]}
{"src": "diagnosis of tcp overlay connection failures using bayesian networks . <sep> when failures occur in internet overlay connections today , it is difficult for users to determine the root cause of failure . an overlay connection may require tcp connections between a series of overlay nodes to succeed , but accurately determining which of these connections has failed is difficult for users without access to the internal workings of the overlay . diagnosis using active probing is costly and may be inaccurate if probe packets are filtered or blocked . to address this problem , we develop a passive diagnosis approach that infers the most likely cause of failure using a bayesian network modeling the conditional probability of tcp failures given the ip addresses of the hosts along the overlay path . we collect tcp failure data for <digit> . <digit> million tcp connections using data from the new planetseer overlay monitoring system and train a bayesian network for the diagnosis of overlay connection failures . we evaluate the accuracy of diagnosis using this bayesian network on a set of overlay connections generated from observations of codeen traffic patterns and find that our approach can accurately diagnose failures .", "tokenized_src": [8209, 13, 3, 17, 75, 102, 25980, 2135, 3338, 7, 338, 10210, 15, 10488, 5275, 3, 5, 32100, 116, 3338, 7, 4093, 16, 1396, 25980, 5992, 469, 3, 6, 34, 19, 1256, 21, 1105, 12, 2082, 8, 5465, 1137, 13, 3338, 3, 5, 46, 25980, 2135, 164, 1457, 3, 17, 75, 102, 5992, 344, 3, 9, 939, 13, 25980, 150, 1395, 12, 7229, 3, 6, 68, 12700, 3, 11682, 84, 13, 175, 5992, 65, 4567, 19, 1256, 21, 1105, 406, 592, 12, 8, 3224, 464, 7, 13, 8, 25980, 3, 5, 8209, 338, 1676, 12361, 53, 19, 11855, 11, 164, 36, 27801, 3, 99, 12732, 13531, 7, 33, 3, 23161, 42, 12468, 3, 5, 12, 1115, 48, 682, 3, 6, 62, 1344, 3, 9, 14410, 8209, 1295, 24, 16, 1010, 7, 8, 167, 952, 1137, 13, 3338, 338, 3, 9, 10210, 15, 10488, 1229, 15309, 8, 1706, 138, 15834, 13, 3, 17, 75, 102, 3338, 7, 787, 8, 3, 23, 102, 7181, 13, 8, 9855, 590, 8, 25980, 2071, 3, 5, 62, 2868, 3, 17, 75, 102, 3338, 331, 21, 32101, 3, 5, 32101, 770, 3, 17, 75, 102, 5992, 338, 331, 45, 8, 126, 4345, 7, 15, 49, 25980, 4891, 358, 11, 2412, 3, 9, 10210, 15, 10488, 1229, 21, 8, 8209, 13, 25980, 2135, 3338, 7, 3, 5, 62, 6825, 8, 7452, 13, 8209, 338, 48, 10210, 15, 10488, 1229, 30, 3, 9, 356, 13, 25980, 5992, 6126, 45, 14181, 13, 1081, 35, 2117, 4264, 11, 253, 24, 69, 1295, 54, 12700, 18730, 3338, 7, 3, 5, 1], "trg": "tcp overlay connections;bayesian networks;passive diagnosis;bayesian networks modelling;planetseer;planetseer overlay monitoring system;codeen traffic patterns;clustering;inter as tcp failure probabilities;active probing for diagnosis;network address translation;tcp overlay path diagnosis;fault diagnosis;nat", "tokenized_trg": [3, 17, 75, 102, 25980, 5992, 32100, 10210, 15, 10488, 5275, 32100, 14410, 8209, 32100, 10210, 15, 10488, 5275, 24716, 32100, 4345, 7, 15, 49, 32100, 4345, 7, 15, 49, 25980, 4891, 358, 32100, 1081, 35, 2117, 4264, 32100, 9068, 53, 32100, 1413, 38, 3, 17, 75, 102, 3338, 9551, 2197, 32100, 1676, 12361, 53, 21, 8209, 32100, 1229, 1115, 7314, 32100, 3, 17, 75, 102, 25980, 2071, 8209, 32100, 7828, 8209, 32100, 3, 29, 144, 1]}
{"src": "digital asset management using a native xml database implementation . <sep> digital asset management ( dam ) , the management of digital content so that it can be cataloged , searched and re purposed , is extremely challenging for organizations that rely on image handling and expect to gain business value from these assets . metadata plays a crucial role in their management , and xml , with its inherent support for structural representation , is an ideal technology for this . this paper analyzes the capabilities of a native xml database solution via the development of a proof of concept and describes implementation requirements , strategy , and advantages and disadvantages of this solution . categories and subject descriptors h . <digit> . <digit> database management database applications , image databases and d . <digit> . <digit> programming languages language classifications , extensible languages , xml . general terms languages , performance", "tokenized_src": [1125, 7000, 758, 338, 3, 9, 4262, 3, 226, 51, 40, 3501, 4432, 3, 5, 32100, 1125, 7000, 758, 41, 10157, 3, 61, 3, 6, 8, 758, 13, 1125, 738, 78, 24, 34, 54, 36, 10173, 15, 26, 3, 6, 19141, 11, 3, 60, 1730, 26, 3, 6, 19, 2033, 4421, 21, 2371, 24, 3, 4610, 30, 1023, 5834, 11, 1672, 12, 2485, 268, 701, 45, 175, 4089, 3, 5, 26686, 4805, 3, 9, 4462, 1075, 16, 70, 758, 3, 6, 11, 3, 226, 51, 40, 3, 6, 28, 165, 18340, 380, 21, 8649, 6497, 3, 6, 19, 46, 1523, 748, 21, 48, 3, 5, 48, 1040, 8341, 7, 8, 5644, 13, 3, 9, 4262, 3, 226, 51, 40, 3501, 1127, 1009, 8, 606, 13, 3, 9, 5594, 13, 2077, 11, 8788, 4432, 1502, 3, 6, 1998, 3, 6, 11, 7648, 11, 18093, 7, 13, 48, 1127, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 3501, 1564, 3, 6, 1023, 16961, 11, 3, 26, 3, 5, 32101, 3, 5, 32101, 6020, 8024, 1612, 13774, 7, 3, 6, 28659, 2296, 8024, 3, 6, 3, 226, 51, 40, 3, 5, 879, 1353, 8024, 3, 6, 821, 1], "trg": "digital asset management;digital asset management;native xml;xml database;database;dam;metadata;proof of concept;digital images;semi structured data;multimedia;heterogenous data;storage and retrieval;keyword search", "tokenized_trg": [1125, 7000, 758, 32100, 1125, 7000, 758, 32100, 4262, 3, 226, 51, 40, 32100, 3, 226, 51, 40, 3501, 32100, 3501, 32100, 10157, 32100, 26686, 32100, 5594, 13, 2077, 32100, 1125, 1383, 32100, 4772, 14039, 331, 32100, 19131, 32100, 26481, 729, 1162, 331, 32100, 1606, 11, 24515, 138, 32100, 15693, 960, 1]}
{"src": "a fair and traffic dependent scheduling algorithm for bluetooth scatternets . <sep> mechanisms and algorithms necessary to set up and maintain them . the operation of a scatternet requires some bluetooth units to be inter piconet units ( gateways ) , which need to time division multiplex their presence among their piconets . this requires a scatternet scheduling algorithm that can schedule the presence of these units in an efficient manner . in this paper , we propose a distributed scatternet scheduling scheme that is implemented using the hold mode of bluetooth and adapts to non uniform and changing traffic . another attribute of the scheme is that it results in fair allocation of bandwidth to each bluetooth unit . this scheme provides an integrated solution for both intra and inter piconet scheduling , i . e . , for polling of slaves and scheduling of gateways .", "tokenized_src": [3, 9, 2725, 11, 2117, 8976, 16131, 12628, 21, 31327, 24713, 1582, 7, 3, 5, 32100, 12009, 11, 16783, 1316, 12, 356, 95, 11, 1961, 135, 3, 5, 8, 2986, 13, 3, 9, 24713, 1582, 2311, 128, 31327, 3173, 12, 36, 1413, 6686, 782, 17, 3173, 41, 17090, 7, 3, 61, 3, 6, 84, 174, 12, 97, 4889, 1317, 226, 70, 3053, 859, 70, 6686, 782, 17, 7, 3, 5, 48, 2311, 3, 9, 24713, 1582, 16131, 12628, 24, 54, 2023, 8, 3053, 13, 175, 3173, 16, 46, 2918, 3107, 3, 5, 16, 48, 1040, 3, 6, 62, 4230, 3, 9, 8308, 24713, 1582, 16131, 5336, 24, 19, 6960, 338, 8, 1520, 2175, 13, 31327, 11, 3374, 7, 12, 529, 7117, 11, 2839, 2117, 3, 5, 430, 15816, 13, 8, 5336, 19, 24, 34, 772, 16, 2725, 17127, 13, 19703, 12, 284, 31327, 1745, 3, 5, 48, 5336, 795, 46, 4580, 1127, 21, 321, 6344, 11, 1413, 6686, 782, 17, 16131, 3, 6, 3, 23, 3, 5, 3, 15, 3, 5, 3, 6, 21, 5492, 53, 13, 15484, 7, 11, 16131, 13, 17090, 7, 3, 5, 1], "trg": "fairness;fairness;traffic dependent scheduling;scheduling algorithm;scheduling;bluetooth;scatternet;scatternet;scatternets;scatternets;piconet;piconet;gateway;gateway;time division multiplex;efficiency;scheduling scheme;hold mode;changing traffic;allocation of bandwidth;allocation of bandwidth;slaves;slave;scheduling of gateways;fair share;non gateway slave traffic;blueooth;master unit;traffic adaptive;non uniform traffic;distributed algorithm;slave unit;bandwidth utilization;rendezvous point;virtual slave;rendezvous point;rendezvous points;traffic rate;scatternet presence fraction;gateway slave traffic;piconet presence fraction;heuristic;round robin polling;round robin;master;bluetooth technology;fair share;polling algorithm;information exchange", "tokenized_trg": [2725, 655, 32100, 2725, 655, 32100, 2117, 8976, 16131, 32100, 16131, 12628, 32100, 16131, 32100, 31327, 32100, 24713, 1582, 32100, 24713, 1582, 32100, 24713, 1582, 7, 32100, 24713, 1582, 7, 32100, 6686, 782, 17, 32100, 6686, 782, 17, 32100, 17090, 32100, 17090, 32100, 97, 4889, 1317, 226, 32100, 3949, 32100, 16131, 5336, 32100, 1520, 2175, 32100, 2839, 2117, 32100, 17127, 13, 19703, 32100, 17127, 13, 19703, 32100, 15484, 7, 32100, 15484, 32100, 16131, 13, 17090, 7, 32100, 2725, 698, 32100, 529, 17090, 15484, 2117, 32100, 1692, 20895, 32100, 2325, 1745, 32100, 2117, 25326, 32100, 529, 7117, 2117, 32100, 8308, 12628, 32100, 15484, 1745, 32100, 19703, 21961, 32100, 14380, 3249, 500, 32100, 4291, 15484, 32100, 14380, 3249, 500, 32100, 14380, 3249, 979, 32100, 2117, 1080, 32100, 24713, 1582, 3053, 12211, 32100, 17090, 15484, 2117, 32100, 6686, 782, 17, 3053, 12211, 32100, 3, 88, 450, 3040, 32100, 1751, 3, 5840, 77, 5492, 53, 32100, 1751, 3, 5840, 77, 32100, 2325, 32100, 31327, 748, 32100, 2725, 698, 32100, 5492, 53, 12628, 32100, 251, 2509, 1]}
{"src": "<unk> ordering pages in web directories . <sep> web directories are repositories of web pages organized in a hierarchy of topics and sub topics . in this paper , we present <unk> , a ranking framework that orders the pages within a given topic according to how informative they are about the topic . our method works in three steps first , it processes web pages within a topic in order to extract structures that are called lexical chains , which are then used for measuring how informative a page is for a particular topic . then , it measures the relative semantic similarity of the pages within a topic . finally , the two metrics are combined for ranking all the pages within a topic before presenting them to the users . categories and subject descriptors h . <digit> . <digit> information search and retrieval information filtering , retrieval models h . <digit> . m information systems miscellaneous general terms algorithms , design , experimentation , measurement", "tokenized_src": [2, 12320, 1688, 16, 765, 2090, 725, 3, 5, 32100, 765, 2090, 725, 33, 14173, 15467, 15, 7, 13, 765, 1688, 4997, 16, 3, 9, 25515, 13, 4064, 11, 769, 4064, 3, 5, 16, 48, 1040, 3, 6, 62, 915, 2, 3, 6, 3, 9, 11592, 4732, 24, 5022, 8, 1688, 441, 3, 9, 787, 2859, 1315, 12, 149, 11152, 79, 33, 81, 8, 2859, 3, 5, 69, 1573, 930, 16, 386, 2245, 166, 3, 6, 34, 2842, 765, 1688, 441, 3, 9, 2859, 16, 455, 12, 5819, 5278, 24, 33, 718, 3, 30949, 138, 16534, 3, 6, 84, 33, 258, 261, 21, 11297, 149, 11152, 3, 9, 543, 19, 21, 3, 9, 1090, 2859, 3, 5, 258, 3, 6, 34, 3629, 8, 5237, 27632, 1126, 485, 13, 8, 1688, 441, 3, 9, 2859, 3, 5, 2031, 3, 6, 8, 192, 15905, 33, 3334, 21, 11592, 66, 8, 1688, 441, 3, 9, 2859, 274, 3, 12072, 135, 12, 8, 1105, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 960, 11, 24515, 138, 251, 4191, 53, 3, 6, 24515, 138, 2250, 3, 107, 3, 5, 32101, 3, 5, 3, 51, 251, 1002, 1817, 7125, 8102, 1162, 879, 1353, 16783, 3, 6, 408, 3, 6, 5016, 257, 3, 6, 9753, 1], "trg": "web directory;web directory;ranking;lexical chains;semantic similarity;semantic similarities;scoring;ranking metric;topic importance;information retrieval;topic hierachy;pagerank;directoryrank", "tokenized_trg": [765, 8174, 32100, 765, 8174, 32100, 11592, 32100, 3, 30949, 138, 16534, 32100, 27632, 1126, 485, 32100, 27632, 25758, 32100, 10389, 32100, 11592, 3, 7959, 32100, 2859, 3172, 32100, 251, 24515, 138, 32100, 2859, 1382, 9, 11971, 32100, 543, 6254, 32100, 8174, 6254, 1]}
{"src": "discovering and ranking web services with basil a personalized approach with biased focus . <sep> in this paper we present a personalized web service discovery and ranking technique for discovering and ranking relevant data intensive web services . our first prototype called basil supports a personalized view of data intensive web services through source biased focus . basil provides service discovery and ranking through source biased probing and source biased relevance metrics . concretely , the basil approach has three unique features ( <digit> ) it is able to determine in very few interactions whether a target service is relevant to the given source service by probing the target with very precise probes ( <digit> ) it can evaluate and rank the relevant services discovered based on a set of source biased relevance metrics and ( <digit> ) it can identify interesting types of relationships for each source service with respect to other discovered services , which can be used as value added metadata for each service . we also introduce a performance optimization technique called source biased probing with focal terms to further improve the effectiveness of the basic source biased service discovery algorithm . the paper concludes with a set of initial experiments showing the effectiveness of the basil system . categories and subject descriptors h . <digit> . <digit> online information services web based services general terms algorithms , experimentation", "tokenized_src": [17452, 11, 11592, 765, 364, 28, 20605, 3, 9, 9354, 1295, 28, 30026, 992, 3, 5, 32100, 16, 48, 1040, 62, 915, 3, 9, 9354, 765, 313, 9087, 11, 11592, 3317, 21, 17452, 11, 11592, 2193, 331, 9786, 765, 364, 3, 5, 69, 166, 14402, 718, 20605, 4951, 3, 9, 9354, 903, 13, 331, 9786, 765, 364, 190, 1391, 30026, 992, 3, 5, 20605, 795, 313, 9087, 11, 11592, 190, 1391, 30026, 12361, 53, 11, 1391, 30026, 20208, 15905, 3, 5, 4427, 120, 3, 6, 8, 20605, 1295, 65, 386, 775, 753, 41, 32101, 3, 61, 34, 19, 3, 179, 12, 2082, 16, 182, 360, 9944, 823, 3, 9, 2387, 313, 19, 2193, 12, 8, 787, 1391, 313, 57, 12361, 53, 8, 2387, 28, 182, 9272, 12732, 7, 41, 32101, 3, 61, 34, 54, 6825, 11, 11003, 8, 2193, 364, 3883, 3, 390, 30, 3, 9, 356, 13, 1391, 30026, 20208, 15905, 11, 41, 32101, 3, 61, 34, 54, 2862, 1477, 1308, 13, 3079, 21, 284, 1391, 313, 28, 1445, 12, 119, 3883, 364, 3, 6, 84, 54, 36, 261, 38, 701, 974, 26686, 21, 284, 313, 3, 5, 62, 92, 4277, 3, 9, 821, 11295, 3317, 718, 1391, 30026, 12361, 53, 28, 15949, 1353, 12, 856, 1172, 8, 9570, 13, 8, 1857, 1391, 30026, 313, 9087, 12628, 3, 5, 8, 1040, 12692, 7, 28, 3, 9, 356, 13, 2332, 12341, 2924, 8, 9570, 13, 8, 20605, 358, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 367, 251, 364, 765, 3, 390, 364, 879, 1353, 16783, 3, 6, 5016, 257, 1], "trg": "ranking;web service discovery;data intensive web services;source biased probing;focal terms;query biased probing;biased discovery;data intensive services", "tokenized_trg": [11592, 32100, 765, 313, 9087, 32100, 331, 9786, 765, 364, 32100, 1391, 30026, 12361, 53, 32100, 15949, 1353, 32100, 11417, 30026, 12361, 53, 32100, 30026, 9087, 32100, 331, 9786, 364, 1]}
{"src": "distance measures for mpeg <digit> based retrieval . <sep> in visual information retrieval the careful choice of suitable proximity measures is a crucial success factor . the evaluation presented in this paper aims at showing that the distance measures suggested by the mpeg <digit> group for the visual descriptors can be beaten by general purpose measures . eight visual mpeg <digit> descriptors were selected and <digit> distance measures implemented . three media collections were created and assessed , performance indicators developed and more than <digit> tests performed . additionally , a quantisation model was developed to be able to use predicate based distance measures on continuous data as well . the evaluation shows that the distance measures recommended in the mpeg <digit> standard are among the best but that other measures perform even better . categories and subject descriptors h . <digit> . <digit> information storage and retrieval information search and retrieval , information filtering , query formulation , retrieval models . general terms algorithms , measurement , experimentation , performance , theory .", "tokenized_src": [2357, 3629, 21, 3, 1167, 15, 122, 32101, 3, 390, 24515, 138, 3, 5, 32100, 16, 3176, 251, 24515, 138, 8, 6195, 1160, 13, 3255, 16595, 3629, 19, 3, 9, 4462, 1269, 2945, 3, 5, 8, 5002, 2569, 16, 48, 1040, 3, 8345, 44, 2924, 24, 8, 2357, 3629, 5259, 57, 8, 3, 1167, 15, 122, 32101, 563, 21, 8, 3176, 20, 11815, 127, 7, 54, 36, 3, 17349, 57, 879, 1730, 3629, 3, 5, 2641, 3176, 3, 1167, 15, 122, 32101, 20, 11815, 127, 7, 130, 2639, 11, 32101, 2357, 3629, 6960, 3, 5, 386, 783, 8274, 130, 990, 11, 14841, 3, 6, 821, 15600, 1597, 11, 72, 145, 32101, 3830, 3032, 3, 5, 11700, 3, 6, 3, 9, 13500, 2121, 825, 47, 1597, 12, 36, 3, 179, 12, 169, 554, 4370, 342, 3, 390, 2357, 3629, 30, 7558, 331, 38, 168, 3, 5, 8, 5002, 1267, 24, 8, 2357, 3629, 3024, 16, 8, 3, 1167, 15, 122, 32101, 1068, 33, 859, 8, 200, 68, 24, 119, 3629, 1912, 237, 394, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 3, 6, 251, 4191, 53, 3, 6, 11417, 20029, 3, 6, 24515, 138, 2250, 3, 5, 879, 1353, 16783, 3, 6, 9753, 3, 6, 5016, 257, 3, 6, 821, 3, 6, 4516, 3, 5, 1], "trg": "distance measure;distance measurement;mpeg <digit>;visual information retrieval;visual information retrieval;mpeg <digit> descriptors;quantisation;similarity measurement;content based video retrieval;similarity perception;human similarity perception;content based image retrieval", "tokenized_trg": [2357, 3613, 32100, 2357, 9753, 32100, 3, 1167, 15, 122, 32101, 32100, 3176, 251, 24515, 138, 32100, 3176, 251, 24515, 138, 32100, 3, 1167, 15, 122, 32101, 20, 11815, 127, 7, 32100, 13500, 2121, 32100, 1126, 485, 9753, 32100, 738, 3, 390, 671, 24515, 138, 32100, 1126, 485, 8136, 32100, 936, 1126, 485, 8136, 32100, 738, 3, 390, 1023, 24515, 138, 1]}
{"src": "dogs or robots why do children see them as robotic pets rather than canine machines . <sep> in the not too distant future intelligent creatures ( robots , smart devices , smart vehicles , smart buildings , etc ) will share the everyday living environment of human beings . it is important then to analyze the attitudes humans are to adopt for interaction with morphologically different devices , based on their appearance and behavior . in particular , these devices will become multi modal interfaces , with computers or networks of computers , for a large and complex universe of applications . our results show that children are quickly attached to the word dog ' reflecting a conceptualization that robots that look like dogs ( in particular sony aibo ) are closer to living dogs than they are to other devices . by contrast , adults perceive aibo as having stronger similarities to machines than to dogs ( reflected by definitions of robot ) . illustration of the characteristics structured in the definition of robot are insufficient to convince children aibo is closer to a machine than to a dog .", "tokenized_src": [3887, 42, 7567, 7, 572, 103, 502, 217, 135, 38, 20407, 8636, 1066, 145, 54, 630, 4096, 3, 5, 32100, 16, 8, 59, 396, 10382, 647, 7951, 14231, 41, 7567, 7, 3, 6, 2592, 1904, 3, 6, 2592, 3203, 3, 6, 2592, 3950, 3, 6, 672, 3, 61, 56, 698, 8, 4604, 840, 1164, 13, 936, 271, 7, 3, 5, 34, 19, 359, 258, 12, 8341, 8, 18537, 6917, 33, 12, 4693, 21, 6565, 28, 3, 8886, 4478, 120, 315, 1904, 3, 6, 3, 390, 30, 70, 3179, 11, 3889, 3, 5, 16, 1090, 3, 6, 175, 1904, 56, 582, 1249, 3, 20226, 3459, 7, 3, 6, 28, 7827, 42, 5275, 13, 7827, 3, 6, 21, 3, 9, 508, 11, 1561, 8084, 13, 1564, 3, 5, 69, 772, 504, 24, 502, 33, 1224, 5223, 12, 8, 1448, 1782, 3, 31, 19124, 3, 9, 17428, 1707, 24, 7567, 7, 24, 320, 114, 3887, 41, 16, 1090, 520, 63, 3, 9, 23, 115, 32, 3, 61, 33, 4645, 12, 840, 3887, 145, 79, 33, 12, 119, 1904, 3, 5, 57, 4656, 3, 6, 3513, 21505, 3, 9, 23, 115, 32, 38, 578, 6879, 25758, 12, 4096, 145, 12, 3887, 41, 3, 12999, 57, 4903, 7, 13, 7567, 3, 61, 3, 5, 16779, 13, 8, 6803, 14039, 16, 8, 4903, 13, 7567, 33, 16, 17817, 12, 15113, 502, 3, 9, 23, 115, 32, 19, 4645, 12, 3, 9, 1437, 145, 12, 3, 9, 1782, 3, 5, 1], "trg": "robots;intelligent creatures;interaction;multi modal interfaces;agency;essence;language;human attitudes;robot attributes;perceived attitude;behavioral science;zoo morphological autonomous mobile robots;hci;feelings", "tokenized_trg": [7567, 7, 32100, 7951, 14231, 32100, 6565, 32100, 1249, 3, 20226, 3459, 7, 32100, 3193, 32100, 10848, 32100, 1612, 32100, 936, 18537, 32100, 7567, 12978, 32100, 14057, 7525, 32100, 17340, 2056, 32100, 3, 172, 32, 32, 3, 8886, 4478, 21286, 1156, 7567, 7, 32100, 3, 107, 75, 23, 32100, 6382, 1]}
{"src": "downloading textual hidden web content through keyword queries . <sep> an ever increasing amount of information on the web today is available only through search interfaces the users have to type in a set of keywords in a search form in order to access the pages from certain web sites . these pages are often referred to as the hidden web or the deep web . since there are no static links to the hidden web pages , search engines can not discover and index such pages and thus do not return them in the results . however , according to recent studies , the content provided by many hidden web sites is often of very high quality and can be extremely valuable to many users . in this paper , we study how we can build an effective hidden web crawler that can autonomously discover and download pages from the hidden web . since the only entry point to a hidden web site is a query interface , the main challenge that a hidden web crawler has to face is how to automatically generate meaningful queries to issue to the site . here , we provide a theoretical framework to investigate the query generation problem for the hidden web and we propose effective policies for generating queries automatically . our policies proceed iteratively , issuing a different query in every iteration . we experimentally evaluate the effectiveness of these policies on <digit> real hidden web sites and our results are very promising . for instance , in one experiment , one of our policies downloaded more than <digit> % of a hidden web site ( that contains <digit> million documents ) after issuing fewer than <digit> queries . categories and subject descriptors h . <digit> . <digit> information systems digital libraries h . <digit> . <digit> information systems content analysis and indexing h . <digit> . <digit> information systems information search and retrieval . general terms algorithms , performance , design .", "tokenized_src": [16891, 1499, 3471, 5697, 765, 738, 190, 15693, 13154, 3, 5, 32100, 46, 664, 3094, 866, 13, 251, 30, 8, 765, 469, 19, 347, 163, 190, 960, 3459, 7, 8, 1105, 43, 12, 686, 16, 3, 9, 356, 13, 12545, 16, 3, 9, 960, 607, 16, 455, 12, 592, 8, 1688, 45, 824, 765, 1471, 3, 5, 175, 1688, 33, 557, 3, 4822, 12, 38, 8, 5697, 765, 42, 8, 1659, 765, 3, 5, 437, 132, 33, 150, 14491, 2416, 12, 8, 5697, 765, 1688, 3, 6, 960, 7277, 54, 59, 2928, 11, 5538, 224, 1688, 11, 2932, 103, 59, 1205, 135, 16, 8, 772, 3, 5, 983, 3, 6, 1315, 12, 1100, 2116, 3, 6, 8, 738, 937, 57, 186, 5697, 765, 1471, 19, 557, 13, 182, 306, 463, 11, 54, 36, 2033, 3435, 12, 186, 1105, 3, 5, 16, 48, 1040, 3, 6, 62, 810, 149, 62, 54, 918, 46, 1231, 5697, 765, 18639, 49, 24, 54, 21286, 120, 2928, 11, 946, 1688, 45, 8, 5697, 765, 3, 5, 437, 8, 163, 1764, 500, 12, 3, 9, 5697, 765, 353, 19, 3, 9, 11417, 3459, 3, 6, 8, 711, 1921, 24, 3, 9, 5697, 765, 18639, 49, 65, 12, 522, 19, 149, 12, 3269, 3806, 7892, 13154, 12, 962, 12, 8, 353, 3, 5, 270, 3, 6, 62, 370, 3, 9, 13605, 4732, 12, 9127, 8, 11417, 3381, 682, 21, 8, 5697, 765, 11, 62, 4230, 1231, 3101, 21, 3, 11600, 13154, 3269, 3, 5, 69, 3101, 8669, 34, 49, 1528, 120, 3, 6, 19, 17180, 3, 9, 315, 11417, 16, 334, 34, 49, 257, 3, 5, 62, 11082, 120, 6825, 8, 9570, 13, 175, 3101, 30, 32101, 490, 5697, 765, 1471, 11, 69, 772, 33, 182, 12894, 3, 5, 21, 3421, 3, 6, 16, 80, 5016, 3, 6, 80, 13, 69, 3101, 11081, 72, 145, 32101, 3, 1454, 13, 3, 9, 5697, 765, 353, 41, 24, 2579, 32101, 770, 2691, 3, 61, 227, 19, 17180, 3, 10643, 145, 32101, 13154, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1002, 1125, 12256, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1002, 738, 1693, 11, 5538, 53, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1002, 251, 960, 11, 24515, 138, 3, 5, 879, 1353, 16783, 3, 6, 821, 3, 6, 408, 3, 5, 1], "trg": "hidden web;keyword queries;keyword query;deep web;crawler;deep web crawler;hidden web crawling;accurate language model;keyword selection;potential bias;efficiency;adaptive algorithmn;coverage;adaptive algorithm;query selection", "tokenized_trg": [5697, 765, 32100, 15693, 13154, 32100, 15693, 11417, 32100, 1659, 765, 32100, 18639, 49, 32100, 1659, 765, 18639, 49, 32100, 5697, 765, 18639, 53, 32100, 4034, 1612, 825, 32100, 15693, 1801, 32100, 1055, 14387, 32100, 3949, 32100, 25326, 12628, 29, 32100, 2591, 32100, 25326, 12628, 32100, 11417, 1801, 1]}
{"src": "easy language extension with meta aspectj . <sep> domain specific languages hold the potential of automating the software development process . nevertheless , the <unk> tion of a domain specific language is hindered by the difficulty of transitioning to different language syntax and employing a separate translator in the software build process . we present a methodology that simplifies the development and deployment of small language extensions , in the context of java . the main language design principle is that of language extension through unobtrusive annotations . the main language implementation idea is to express the language as a generator of customized aspectj aspects , using our meta aspectj tool . the advantages of the approach are twofold . first , the tool integrates into an existing software application much as a regular api or library , instead of as a language extension . this means that the programmer can remove the language extension at any point and choose to implement the required functionality by hand without needing to rewrite the client code . second , a mature language implementation is easy to achieve with little effort since aspectj takes care of the low level issues of interfacing with the base java language . categories and subject descriptors d . <digit> . <digit> programming techniques automatic programming d . <digit> . <digit> software engineering reusable software d . <digit> . <digit> programming languages language constructs and features general terms domain specific languages , language extensions introduction and motivation the idea of extensible languages has fascinated programmers for many decades , as evident by the extensibility features in languages as old as lisp . from a software engineering standpoint , the main advantages of expressing a concept as a language feature , as opposed to a library api , are in terms of conciseness , safety , and performance . a language feature allows expressing the programmer ' s intent much more concisely in contrast , libraries are limited to a function or method call syntax . a language feature also allow better static error checking a library can only check the static types of arguments of a function call against the declared types of the formals . finally , a language feature can take advantage of context information and employ an optimized implementation , while a library routine can not be customized according to its uses . despite these advantages , there are excellent reasons why full language extensibility is undesirable . changing the syntax and semantics of a programming language is confusing and can lead to incomprehensible code . furthermore , programming languages are complex entities , designed to provide a small number of features but allow them to be combined as generally as possible . a new feature can either increase the complexity of the language implementation significantly ( because of interactions with all existing features ) , or will need to be limited in its interactions , which is a bad language design principle that leads to single use features and design bloat . in past work <digit> , we have advocated expressing small language extensions purely through unobtrusive annotations . indeed , the introduction of user defined annotations in mainstream programming languages , such as c and java , has allowed specialized language extensions ( e . g . , for distributed computing , persistence , or real time programming ) to be added without changing the base syntax . we believe that the approach of limited language extension through annotations meshes very well with an implementation technique that uses our meta aspectj ( maj ) tool <digit> to express the semantics of the language extension . specifically , maj is a language that allows writing programs that generate aspects in the aspectj language <digit> . the programmer can easily express an extension to the java language as a program that a ) reads annotations and type information from an existing program using java reflection b ) outputs a customized aspectj aspect that transforms the original program according to the information in the annotation c ) executes the generated aspect by using the standard aspectj compiler . in other words , our approach uses the aspectj language as a compiler back end . aspectj code is not written by the application programmer but generated by the language extension , for the sole purpose of expressing program transformations easily and generally . this is appropriate , as aspectj embodies the aspect oriented programming <digit> philosophy of expressing program enhancements orthogonally and independently of the original source code . our approach has the advantage of simplifying the implementation of the language extension significantly , without encouraging undisciplined language extension ( since the only extensions allowed are through annotations ) . specifically , the approach leverages the engineering sophistication of the aspectj compiler implementation and its provisions for dealing correctly with different java language features . if a programmer were to replicate the same effort by hand , she would likely need to reproduce much of the aspectj compiler complexity . the purpose of this paper is to support the idea of implementing small language extensions as programs that produce aspects . we have recently implemented a number of such small extensions to java and they all exhibit a striking simplicity . specifically , we did not have to implement ( or extend ) a java parser , we did not need to deal with syntax tree pattern matching and transformation , and we did not need to provide special handling for many java complexities . the combined annotations maj approach ensured that our small language extensions were implementable in a few hundreds of lines of code , without sacrificing generality in their conditions of use . we discuss two such extensions in detail , after first introducing the maj language .", "tokenized_src": [514, 1612, 4924, 28, 10531, 2663, 354, 3, 5, 32100, 3303, 806, 8024, 1520, 8, 1055, 13, 7791, 53, 8, 889, 606, 433, 3, 5, 17516, 3, 6, 8, 2, 3, 1575, 13, 3, 9, 3303, 806, 1612, 19, 22190, 15, 26, 57, 8, 8565, 13, 3508, 53, 12, 315, 1612, 28230, 11, 5936, 53, 3, 9, 2450, 22770, 16, 8, 889, 918, 433, 3, 5, 62, 915, 3, 9, 15663, 24, 29376, 7, 8, 606, 11, 12001, 13, 422, 1612, 15176, 3, 6, 16, 8, 2625, 13, 3, 27578, 3, 5, 8, 711, 1612, 408, 8454, 19, 24, 13, 1612, 4924, 190, 73, 32, 115, 2666, 7, 757, 30729, 7, 3, 5, 8, 711, 1612, 4432, 800, 19, 12, 3980, 8, 1612, 38, 3, 9, 9877, 13, 8444, 2663, 354, 3149, 3, 6, 338, 69, 10531, 2663, 354, 1464, 3, 5, 8, 7648, 13, 8, 1295, 33, 192, 10533, 3, 5, 166, 3, 6, 8, 1464, 9162, 7, 139, 46, 1895, 889, 917, 231, 38, 3, 9, 1646, 3, 13306, 42, 3595, 3, 6, 1446, 13, 38, 3, 9, 1612, 4924, 3, 5, 48, 598, 24, 8, 2486, 52, 54, 2036, 8, 1612, 4924, 44, 136, 500, 11, 854, 12, 4028, 8, 831, 6730, 57, 609, 406, 174, 53, 12, 3, 60, 17504, 8, 1188, 1081, 3, 5, 511, 3, 6, 3, 9, 10281, 1612, 4432, 19, 514, 12, 1984, 28, 385, 1941, 437, 2663, 354, 1217, 124, 13, 8, 731, 593, 807, 13, 1413, 20490, 28, 8, 1247, 3, 27578, 1612, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 6020, 2097, 6569, 6020, 3, 26, 3, 5, 32101, 3, 5, 32101, 889, 3867, 3, 28147, 889, 3, 26, 3, 5, 32101, 3, 5, 32101, 6020, 8024, 1612, 6774, 7, 11, 753, 879, 1353, 3303, 806, 8024, 3, 6, 1612, 15176, 5302, 11, 6620, 8, 800, 13, 28659, 2296, 8024, 65, 24631, 478, 5567, 21, 186, 4160, 3, 6, 38, 6843, 57, 8, 28659, 115, 14277, 753, 16, 8024, 38, 625, 38, 3, 40, 159, 102, 3, 5, 45, 3, 9, 889, 3867, 28628, 3, 6, 8, 711, 7648, 13, 3, 21008, 3, 9, 2077, 38, 3, 9, 1612, 1451, 3, 6, 38, 8560, 12, 3, 9, 3595, 3, 13306, 3, 6, 33, 16, 1353, 13, 22874, 655, 3, 6, 1455, 3, 6, 11, 821, 3, 5, 3, 9, 1612, 1451, 1250, 3, 21008, 8, 2486, 52, 3, 31, 3, 7, 9508, 231, 72, 22874, 120, 16, 4656, 3, 6, 12256, 33, 1643, 12, 3, 9, 1681, 42, 1573, 580, 28230, 3, 5, 3, 9, 1612, 1451, 92, 995, 394, 14491, 3505, 6450, 3, 9, 3595, 54, 163, 691, 8, 14491, 1308, 13, 12874, 13, 3, 9, 1681, 580, 581, 8, 10126, 1308, 13, 8, 4727, 7, 3, 5, 2031, 3, 6, 3, 9, 1612, 1451, 54, 240, 2337, 13, 2625, 251, 11, 5936, 46, 18149, 4432, 3, 6, 298, 3, 9, 3595, 3860, 54, 59, 36, 8444, 1315, 12, 165, 2284, 3, 5, 3, 3565, 175, 7648, 3, 6, 132, 33, 1287, 2081, 572, 423, 1612, 28659, 115, 14277, 19, 30995, 3, 5, 2839, 8, 28230, 11, 27632, 7, 13, 3, 9, 6020, 1612, 19, 15266, 11, 54, 991, 12, 16, 287, 22459, 2296, 1081, 3, 5, 856, 3706, 3, 6, 6020, 8024, 33, 1561, 12311, 3, 6, 876, 12, 370, 3, 9, 422, 381, 13, 753, 68, 995, 135, 12, 36, 3334, 38, 2389, 38, 487, 3, 5, 3, 9, 126, 1451, 54, 893, 993, 8, 11641, 13, 8, 1612, 4432, 4019, 41, 250, 13, 9944, 28, 66, 1895, 753, 3, 61, 3, 6, 42, 56, 174, 12, 36, 1643, 16, 165, 9944, 3, 6, 84, 19, 3, 9, 1282, 1612, 408, 8454, 24, 3433, 12, 712, 169, 753, 11, 408, 3, 4672, 144, 3, 5, 16, 657, 161, 32101, 3, 6, 62, 43, 11223, 26, 3, 21008, 422, 1612, 15176, 3, 18760, 190, 73, 32, 115, 2666, 7, 757, 30729, 7, 3, 5, 5071, 3, 6, 8, 5302, 13, 1139, 4802, 30729, 7, 16, 12946, 6020, 8024, 3, 6, 224, 38, 3, 75, 11, 3, 27578, 3, 6, 65, 2225, 3, 8689, 1612, 15176, 41, 3, 15, 3, 5, 3, 122, 3, 5, 3, 6, 21, 8308, 10937, 3, 6, 29486, 3, 6, 42, 490, 97, 6020, 3, 61, 12, 36, 974, 406, 2839, 8, 1247, 28230, 3, 5, 62, 857, 24, 8, 1295, 13, 1643, 1612, 4924, 190, 30729, 7, 13476, 15, 7, 182, 168, 28, 46, 4432, 3317, 24, 2284, 69, 10531, 2663, 354, 41, 3, 16547, 3, 61, 1464, 32101, 12, 3980, 8, 27632, 7, 13, 8, 1612, 4924, 3, 5, 3346, 3, 6, 3, 16547, 19, 3, 9, 1612, 24, 1250, 913, 1356, 24, 3806, 3149, 16, 8, 2663, 354, 1612, 32101, 3, 5, 8, 2486, 52, 54, 1153, 3980, 46, 4924, 12, 8, 3, 27578, 1612, 38, 3, 9, 478, 24, 3, 9, 3, 61, 608, 7, 30729, 7, 11, 686, 251, 45, 46, 1895, 478, 338, 3, 27578, 9619, 3, 115, 3, 61, 3911, 7, 3, 9, 8444, 2663, 354, 2663, 24, 3343, 7, 8, 926, 478, 1315, 12, 8, 251, 16, 8, 30729, 3, 75, 3, 61, 12133, 7, 8, 6126, 2663, 57, 338, 8, 1068, 2663, 354, 29801, 3, 5, 16, 119, 1234, 3, 6, 69, 1295, 2284, 8, 2663, 354, 1612, 38, 3, 9, 29801, 223, 414, 3, 5, 2663, 354, 1081, 19, 59, 1545, 57, 8, 917, 2486, 52, 68, 6126, 57, 8, 1612, 4924, 3, 6, 21, 8, 4199, 1730, 13, 3, 21008, 478, 6586, 7, 1153, 11, 2389, 3, 5, 48, 19, 2016, 3, 6, 38, 2663, 354, 3, 24973, 7, 8, 2663, 3, 9442, 6020, 32101, 8156, 13, 3, 21008, 478, 15220, 7, 26429, 5307, 1427, 11, 13971, 13, 8, 926, 1391, 1081, 3, 5, 69, 1295, 65, 8, 2337, 13, 18356, 53, 8, 4432, 13, 8, 1612, 4924, 4019, 3, 6, 406, 9523, 64, 159, 3389, 747, 26, 1612, 4924, 41, 437, 8, 163, 15176, 2225, 33, 190, 30729, 7, 3, 61, 3, 5, 3346, 3, 6, 8, 1295, 11531, 7, 8, 3867, 29244, 13, 8, 2663, 354, 29801, 4432, 11, 165, 9848, 21, 4945, 6549, 28, 315, 3, 27578, 1612, 753, 3, 5, 3, 99, 3, 9, 2486, 52, 130, 12, 18526, 8, 337, 1941, 57, 609, 3, 6, 255, 133, 952, 174, 12, 16518, 231, 13, 8, 2663, 354, 29801, 11641, 3, 5, 8, 1730, 13, 48, 1040, 19, 12, 380, 8, 800, 13, 3, 10311, 422, 1612, 15176, 38, 1356, 24, 1759, 3149, 3, 5, 62, 43, 1310, 6960, 3, 9, 381, 13, 224, 422, 15176, 12, 3, 27578, 11, 79, 66, 6981, 3, 9, 11214, 16538, 3, 5, 3346, 3, 6, 62, 410, 59, 43, 12, 4028, 41, 42, 4285, 3, 61, 3, 9, 3, 27578, 260, 7, 49, 3, 6, 62, 410, 59, 174, 12, 1154, 28, 28230, 2195, 3275, 8150, 11, 6586, 3, 6, 11, 62, 410, 59, 174, 12, 370, 534, 5834, 21, 186, 3, 27578, 3, 30556, 3, 5, 8, 3334, 30729, 7, 3, 16547, 1295, 766, 26, 24, 69, 422, 1612, 15176, 130, 4028, 179, 16, 3, 9, 360, 3986, 13, 2356, 13, 1081, 3, 6, 406, 3, 30016, 879, 485, 16, 70, 1124, 13, 169, 3, 5, 62, 2497, 192, 224, 15176, 16, 2736, 3, 6, 227, 166, 3, 13505, 8, 3, 16547, 1612, 3, 5, 1], "trg": "language extensions;language extension;meta aspectj;domain specific languages;domain specific language;java;annotation;simplicity", "tokenized_trg": [1612, 15176, 32100, 1612, 4924, 32100, 10531, 2663, 354, 32100, 3303, 806, 8024, 32100, 3303, 806, 1612, 32100, 3, 27578, 32100, 30729, 32100, 16538, 1]}
{"src": "hourly analysis of a very large topically categorized web query log . <sep> we review a query log of hundreds of millions of queries that constitute the total query traffic for an entire week of a general purpose commercial web search service . previously , query logs have been studied from a single , cumulative view . in contrast , our analysis shows changes in popularity and uniqueness of topically categorized queries across the hours of the day . we examine query traffic on an hourly basis by matching it against lists of queries that have been topically pre categorized by human editors . this represents <digit> % of the query traffic . we show that query traffic from particular topical categories differs both from the query stream as a whole and from other categories . this analysis provides valuable insight for improving retrieval effectiveness and efficiency . it is also relevant to the development of enhanced query disambiguation , routing , and caching algorithms . categories and subject descriptors h . <digit> . <digit> information storage and retrieval online information services , web based services general terms measurement , human factors .", "tokenized_src": [1781, 120, 1693, 13, 3, 9, 182, 508, 420, 6402, 3, 28295, 765, 11417, 4303, 3, 5, 32100, 62, 1132, 3, 9, 11417, 4303, 13, 3986, 13, 4040, 13, 13154, 24, 11708, 8, 792, 11417, 2117, 21, 46, 1297, 471, 13, 3, 9, 879, 1730, 1328, 765, 960, 313, 3, 5, 3150, 3, 6, 11417, 4303, 7, 43, 118, 7463, 45, 3, 9, 712, 3, 6, 25965, 903, 3, 5, 16, 4656, 3, 6, 69, 1693, 1267, 1112, 16, 9897, 11, 775, 655, 13, 420, 6402, 3, 28295, 13154, 640, 8, 716, 13, 8, 239, 3, 5, 62, 5443, 11417, 2117, 30, 46, 1781, 120, 1873, 57, 8150, 34, 581, 7809, 13, 13154, 24, 43, 118, 420, 6402, 554, 3, 28295, 57, 936, 18008, 3, 5, 48, 5475, 32101, 3, 1454, 13, 8, 11417, 2117, 3, 5, 62, 504, 24, 11417, 2117, 45, 1090, 2859, 138, 5897, 7641, 7, 321, 45, 8, 11417, 6093, 38, 3, 9, 829, 11, 45, 119, 5897, 3, 5, 48, 1693, 795, 3435, 6574, 21, 4863, 24515, 138, 9570, 11, 3949, 3, 5, 34, 19, 92, 2193, 12, 8, 606, 13, 8358, 11417, 1028, 24621, 257, 3, 6, 22764, 3, 6, 11, 212, 8509, 16783, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 367, 251, 364, 3, 6, 765, 3, 390, 364, 879, 1353, 9753, 3, 6, 936, 2580, 3, 5, 1], "trg": "query log;query traffic;web search;topical categories;query stream;frequency distribution;query log analysis;log analysis", "tokenized_trg": [11417, 4303, 32100, 11417, 2117, 32100, 765, 960, 32100, 2859, 138, 5897, 32100, 11417, 6093, 32100, 7321, 3438, 32100, 11417, 4303, 1693, 32100, 4303, 1693, 1]}
{"src": "efficient multi way text categorization via generalized discriminant analysis . <sep> text categorization is an important research area and has been receiving much attention due to the growth of the on line information and of internet . automated text categorization is generally cast as a multi class classification problem . much of previous work focused on binary document classification problems . support vector machines ( svms ) excel in binary classification , but the elegant theory behind large margin hyperplane can not be easily extended to multi class text classification . in addition , the training time and scaling are also important concerns . on the other hand , other techniques naturally extensible to handle multi class classification are generally not as accurate as svm . this paper presents a simple and efficient solution to multi class text categorization . classification problems are first formulated as optimization via discriminant analysis . text categorization is then cast as the problem of finding coordinate transformations that reflects the inherent similarity from the data . while most of the previous approaches decompose a multiclass classification problem into multiple independent binary classification tasks , the proposed approach enables direct multi class classification . by using generalized singular value decomposition ( gsvd ) , a coordinate transformation that reflects the inherent class structure indicated by the generalized singular values is identified . extensive experiments demonstrate the efficiency and effectiveness of the proposed approach . categories and subject descriptors h . <digit> information storage and retrieval information search and retrieval i . <digit> artificial intelligence learning i . <digit> pattern recognition applications general terms algorithms , measurement , performance , experimentation , verification", "tokenized_src": [2918, 1249, 194, 1499, 9624, 122, 127, 1707, 1009, 879, 1601, 9192, 288, 1693, 3, 5, 32100, 1499, 9624, 122, 127, 1707, 19, 46, 359, 585, 616, 11, 65, 118, 4281, 231, 1388, 788, 12, 8, 1170, 13, 8, 30, 689, 251, 11, 13, 1396, 3, 5, 10069, 1499, 9624, 122, 127, 1707, 19, 2389, 4061, 38, 3, 9, 1249, 853, 13774, 682, 3, 5, 231, 13, 1767, 161, 2937, 30, 14865, 1708, 13774, 982, 3, 5, 380, 12938, 4096, 41, 3, 7, 208, 51, 7, 3, 61, 11197, 16, 14865, 13774, 3, 6, 68, 8, 3865, 4516, 1187, 508, 6346, 6676, 3767, 15, 54, 59, 36, 1153, 4760, 12, 1249, 853, 1499, 13774, 3, 5, 16, 811, 3, 6, 8, 761, 97, 11, 24485, 33, 92, 359, 3315, 3, 5, 30, 8, 119, 609, 3, 6, 119, 2097, 6212, 28659, 2296, 12, 2174, 1249, 853, 13774, 33, 2389, 59, 38, 4034, 38, 3, 7, 208, 51, 3, 5, 48, 1040, 6621, 3, 9, 650, 11, 2918, 1127, 12, 1249, 853, 1499, 9624, 122, 127, 1707, 3, 5, 13774, 982, 33, 166, 3, 23148, 38, 11295, 1009, 9192, 288, 1693, 3, 5, 1499, 9624, 122, 127, 1707, 19, 258, 4061, 38, 8, 682, 13, 2342, 11639, 6586, 7, 24, 3, 17441, 8, 18340, 1126, 485, 45, 8, 331, 3, 5, 298, 167, 13, 8, 1767, 6315, 20, 287, 2748, 15, 3, 9, 1249, 4057, 13774, 682, 139, 1317, 2547, 14865, 13774, 4145, 3, 6, 8, 4382, 1295, 3, 7161, 1223, 1249, 853, 13774, 3, 5, 57, 338, 879, 1601, 22166, 701, 20, 287, 4718, 41, 3, 122, 7, 208, 26, 3, 61, 3, 6, 3, 9, 11639, 6586, 24, 3, 17441, 8, 18340, 853, 1809, 7972, 57, 8, 879, 1601, 22166, 2620, 19, 4313, 3, 5, 3616, 12341, 5970, 8, 3949, 11, 9570, 13, 8, 4382, 1295, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 3, 23, 3, 5, 32101, 7353, 6123, 1036, 3, 23, 3, 5, 32101, 3275, 5786, 1564, 879, 1353, 16783, 3, 6, 9753, 3, 6, 821, 3, 6, 5016, 257, 3, 6, 17549, 1], "trg": "text categorization;discriminant analysis;discriminant analysis;multi class classification;svms;multi class text categorization;gsvd;gda", "tokenized_trg": [1499, 9624, 122, 127, 1707, 32100, 9192, 288, 1693, 32100, 9192, 288, 1693, 32100, 1249, 853, 13774, 32100, 3, 7, 208, 51, 7, 32100, 1249, 853, 1499, 9624, 122, 127, 1707, 32100, 3, 122, 7, 208, 26, 32100, 3, 122, 26, 9, 1]}
{"src": "efficient phrase querying with an auxiliary index . <sep> search engines need to evaluate queries extremely fast , a challenging task given the vast quantities of data being indexed . a significant proportion of the queries posed to search engines involve phrases . in this paper we consider how phrase queries can be efficiently supported with low disk overheads . previous research has shown that phrase queries can be rapidly evaluated using nextword indexes , but these indexes are twice as large as conventional inverted files . we propose a combination of nextword indexes with inverted files as a solution to this problem . our experiments show that combined use of an auxiliary nextword index and a conventional inverted file allow evaluation of phrase queries in half the time required to evaluate such queries with an inverted file alone , and the space overhead is only <digit> % of the size of the inverted file . further time savings are available with only slight increases in disk requirements . categories and subject descriptors h . <digit> . <digit> information storage and retrieval systems and software evaluation ( efficiency ) e . <digit> data storage representations general terms algorithms , performance", "tokenized_src": [2918, 9261, 11417, 53, 28, 46, 3, 31086, 5538, 3, 5, 32100, 960, 7277, 174, 12, 6825, 13154, 2033, 1006, 3, 6, 3, 9, 4421, 2491, 787, 8, 4248, 16274, 13, 331, 271, 3, 30564, 3, 5, 3, 9, 1516, 7385, 13, 8, 13154, 3, 12151, 12, 960, 7277, 7789, 15101, 3, 5, 16, 48, 1040, 62, 1099, 149, 9261, 13154, 54, 36, 8877, 3510, 28, 731, 8987, 15998, 7, 3, 5, 1767, 585, 65, 2008, 24, 9261, 13154, 54, 36, 7313, 14434, 338, 416, 6051, 5538, 15, 7, 3, 6, 68, 175, 5538, 15, 7, 33, 4394, 38, 508, 38, 7450, 16, 19825, 2073, 3, 5, 62, 4230, 3, 9, 2711, 13, 416, 6051, 5538, 15, 7, 28, 16, 19825, 2073, 38, 3, 9, 1127, 12, 48, 682, 3, 5, 69, 12341, 504, 24, 3334, 169, 13, 46, 3, 31086, 416, 6051, 5538, 11, 3, 9, 7450, 16, 19825, 1042, 995, 5002, 13, 9261, 13154, 16, 985, 8, 97, 831, 12, 6825, 224, 13154, 28, 46, 16, 19825, 1042, 2238, 3, 6, 11, 8, 628, 15998, 19, 163, 32101, 3, 1454, 13, 8, 812, 13, 8, 16, 19825, 1042, 3, 5, 856, 97, 5051, 33, 347, 28, 163, 9927, 5386, 16, 8987, 1502, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 1002, 11, 889, 5002, 41, 3949, 3, 61, 3, 15, 3, 5, 32101, 331, 1606, 6497, 7, 879, 1353, 16783, 3, 6, 821, 1], "trg": "phrase query;indexing;nextword index;query evaluation;evaluation efficiency;index representation;phrase query evaluation;stopping;common words;inverted index", "tokenized_trg": [9261, 11417, 32100, 5538, 53, 32100, 416, 6051, 5538, 32100, 11417, 5002, 32100, 5002, 3949, 32100, 5538, 6497, 32100, 9261, 11417, 5002, 32100, 10847, 32100, 1017, 1234, 32100, 16, 19825, 5538, 1]}
{"src": "efficient retrieval of similar shapes . <sep> we propose an indexing technique for the fast retrieval of objects in 2d images basedon similarity between their boundary shapes . our technique is robust in the presence of noise <unk> several important notions of similarity including optimal matches irrespective of variations in orientation and or position . our method can also handle size invariant matches using a normalization technique , although optimality is not <unk> . we <unk> method and performed experiments on real ( hand written digits ) data . our experimental results <unk> superiority of our method comparedto search basedon sequential scanning , which is the only obvious competitor . the performance gain of our method increases with any increase in the number or the size of shapes .", "tokenized_src": [2918, 24515, 138, 13, 1126, 8803, 3, 5, 32100, 62, 4230, 46, 5538, 53, 3317, 21, 8, 1006, 24515, 138, 13, 4820, 16, 204, 26, 1383, 3, 390, 106, 1126, 485, 344, 70, 20430, 8803, 3, 5, 69, 3317, 19, 6268, 16, 8, 3053, 13, 4661, 2, 633, 359, 9347, 7, 13, 1126, 485, 379, 6624, 6407, 3, 30032, 13, 10914, 16, 12602, 11, 42, 1102, 3, 5, 69, 1573, 54, 92, 2174, 812, 16, 9504, 288, 6407, 338, 3, 9, 1389, 1707, 3317, 3, 6, 2199, 6624, 485, 19, 59, 2, 3, 5, 62, 2, 1573, 11, 3032, 12341, 30, 490, 41, 609, 1545, 3, 9206, 7, 3, 61, 331, 3, 5, 69, 11082, 772, 2, 4784, 485, 13, 69, 1573, 3, 2172, 235, 960, 3, 390, 106, 29372, 18269, 3, 6, 84, 19, 8, 163, 4813, 18766, 3, 5, 8, 821, 2485, 13, 69, 1573, 5386, 28, 136, 993, 16, 8, 381, 42, 8, 812, 13, 8803, 3, 5, 1], "trg": "efficiency;indexing techniques;search;image databases;database;non textual objects;shape classification;similarity queries;shape retrieval similarity retrieval fourier descriptors;fingerprint;queries;handwriting recognition;fourier descriptors", "tokenized_trg": [3949, 32100, 5538, 53, 2097, 32100, 960, 32100, 1023, 16961, 32100, 3501, 32100, 529, 1499, 3471, 4820, 32100, 2346, 13774, 32100, 1126, 485, 13154, 32100, 2346, 24515, 138, 1126, 485, 24515, 138, 662, 972, 20, 11815, 127, 7, 32100, 21759, 32100, 13154, 32100, 609, 9933, 5786, 32100, 662, 972, 20, 11815, 127, 7, 1]}
{"src": "a flexible 3d slicer for voxelization using graphics hardware . <sep> in this paper we present a simple but general 3d slicer for voxelizing polygonal model . instead of voxelizing a model by projecting and rasterizing triangles with clipping planes , the distance field is used for more accurate and stable voxelization . distance transform is used with triangles on voxels of each slice . a voxel is marked with opacity only when the shortest distance between it and triangles is judged as intersection . with advanced programmable graphics hardware assistance , surface and solid voxelization are feasible and more efficient than on a cpu . cr categories i . <digit> . <digit> computer graphics hardware architecture graphics processors i . <digit> . <digit> computer graphics computational geometry and object modeling curve , surface , solid , and object representations", "tokenized_src": [3, 9, 4136, 220, 26, 13810, 52, 21, 3, 1621, 226, 15, 40, 1707, 338, 6484, 4214, 3, 5, 32100, 16, 48, 1040, 62, 915, 3, 9, 650, 68, 879, 220, 26, 13810, 52, 21, 3, 1621, 226, 15, 40, 2610, 4251, 5307, 138, 825, 3, 5, 1446, 13, 3, 1621, 226, 15, 40, 2610, 3, 9, 825, 57, 516, 53, 11, 3, 20484, 49, 2610, 19938, 7, 28, 5516, 2462, 6112, 7, 3, 6, 8, 2357, 1057, 19, 261, 21, 72, 4034, 11, 5711, 3, 1621, 226, 15, 40, 1707, 3, 5, 2357, 3343, 19, 261, 28, 19938, 7, 30, 3, 1621, 226, 3573, 13, 284, 13810, 3, 5, 3, 9, 3, 1621, 226, 15, 40, 19, 7027, 28, 3, 32, 5379, 485, 163, 116, 8, 3, 31115, 2357, 344, 34, 11, 19938, 7, 19, 5191, 26, 38, 15415, 3, 5, 28, 2496, 3, 7050, 179, 6484, 4214, 2927, 3, 6, 1774, 11, 1973, 3, 1621, 226, 15, 40, 1707, 33, 20218, 11, 72, 2918, 145, 30, 3, 9, 3, 75, 4987, 3, 5, 5764, 5897, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 4214, 4648, 6484, 7502, 7, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 25850, 23898, 11, 3735, 15309, 8435, 3, 6, 1774, 3, 6, 1973, 3, 6, 11, 3735, 6497, 7, 1], "trg": "3d slicer;voxelization;voxelization;graphics hardware;polygonal model;polygonal model;modeling;rasterization;triangles;distance field;distance field;distance transform;opacity;computer graphics;computational geometry;object representation;object representation;volumetric representation;infinitude;volume construction;surface voxelization;polygonal objects;gpu based 3d slicer approach;pixel shader;rendering;gpu;local distance field;hausdorff distance;rendering pipeline;volumetric representation;hausforff distance;polygonal object;hausdorff distance;gpu computation;slice based approach;geometric representation;rendering;rendering cost;3d modelling;surface representation;adaptive dense voxelization", "tokenized_trg": [220, 26, 13810, 52, 32100, 3, 1621, 226, 15, 40, 1707, 32100, 3, 1621, 226, 15, 40, 1707, 32100, 6484, 4214, 32100, 4251, 5307, 138, 825, 32100, 4251, 5307, 138, 825, 32100, 15309, 32100, 3, 20484, 49, 1707, 32100, 19938, 7, 32100, 2357, 1057, 32100, 2357, 1057, 32100, 2357, 3343, 32100, 3, 32, 5379, 485, 32100, 1218, 6484, 32100, 25850, 23898, 32100, 3735, 6497, 32100, 3735, 6497, 32100, 2908, 3929, 6497, 32100, 16, 5582, 19835, 32100, 2908, 1449, 32100, 1774, 3, 1621, 226, 15, 40, 1707, 32100, 4251, 5307, 138, 4820, 32100, 3, 122, 4987, 3, 390, 220, 26, 13810, 52, 1295, 32100, 3, 14251, 7891, 52, 32100, 18968, 32100, 3, 122, 4987, 32100, 415, 2357, 1057, 32100, 3, 2989, 8716, 89, 2357, 32100, 18968, 12045, 32100, 2908, 3929, 6497, 32100, 3, 2989, 1161, 89, 89, 2357, 32100, 4251, 5307, 138, 3735, 32100, 3, 2989, 8716, 89, 2357, 32100, 3, 122, 4987, 29761, 32100, 13810, 3, 390, 1295, 32100, 21910, 6497, 32100, 18968, 32100, 18968, 583, 32100, 220, 26, 24716, 32100, 1774, 6497, 32100, 25326, 13809, 3, 1621, 226, 15, 40, 1707, 1]}
{"src": "queries enabling querying for semantic associations on the semantic web . <sep> this paper presents the notion of semantic associations as complex relationships between resource entities . these relationships capture both a connectivity of entities as well as similarity of entities based on a specific notion of similarity called isomorphism . it formalizes these notions for the rdf data model , by introducing a notion of a property sequence as a type . in the context of a graph model such as that for rdf , semantic associations amount to specific certain graph signatures . specifically , they refer to sequences ( i . e . directed paths ) here called property sequences , between entities , networks of property sequences ( i . e . undirected paths ) , or subgraphs of isomorphic property sequences . the ability to query about the existence of such relationships is fundamental to tasks in analytical domains such as national security and business intelligence , where tasks often focus on finding complex yet meaningful and obscured relationships between entities . however , support for such queries is lacking in contemporary query systems , including those for rdf . this paper discusses how querying for semantic associations might be enabled on the semantic web , through the use of an operator . it also discusses two approaches for processing queries on available persistent rdf stores and memory resident rdf data graphs , thereby building on current rdf query languages . categories and subject descriptors h . <digit> . <digit> information systems database <unk> languages general terms languages , theory , management", "tokenized_src": [13154, 3, 10165, 11417, 53, 21, 27632, 10906, 30, 8, 27632, 765, 3, 5, 32100, 48, 1040, 6621, 8, 9347, 13, 27632, 10906, 38, 1561, 3079, 344, 3487, 12311, 3, 5, 175, 3079, 4105, 321, 3, 9, 12841, 13, 12311, 38, 168, 38, 1126, 485, 13, 12311, 3, 390, 30, 3, 9, 806, 9347, 13, 1126, 485, 718, 19, 32, 8886, 159, 51, 3, 5, 34, 4727, 1737, 7, 175, 9347, 7, 21, 8, 3, 52, 26, 89, 331, 825, 3, 6, 57, 3, 13505, 3, 9, 9347, 13, 3, 9, 785, 5932, 38, 3, 9, 686, 3, 5, 16, 8, 2625, 13, 3, 9, 8373, 825, 224, 38, 24, 21, 3, 52, 26, 89, 3, 6, 27632, 10906, 866, 12, 806, 824, 8373, 5483, 7, 3, 5, 3346, 3, 6, 79, 2401, 12, 5932, 7, 41, 3, 23, 3, 5, 3, 15, 3, 5, 6640, 13704, 3, 61, 270, 718, 785, 5932, 7, 3, 6, 344, 12311, 3, 6, 5275, 13, 785, 5932, 7, 41, 3, 23, 3, 5, 3, 15, 3, 5, 73, 22955, 13704, 3, 61, 3, 6, 42, 769, 9413, 7, 13, 19, 32, 8886, 447, 785, 5932, 7, 3, 5, 8, 1418, 12, 11417, 81, 8, 6831, 13, 224, 3079, 19, 4431, 12, 4145, 16, 18355, 3303, 7, 224, 38, 1157, 1034, 11, 268, 6123, 3, 6, 213, 4145, 557, 992, 30, 2342, 1561, 780, 7892, 11, 21634, 26, 3079, 344, 12311, 3, 5, 983, 3, 6, 380, 21, 224, 13154, 19, 16914, 16, 4092, 11417, 1002, 3, 6, 379, 273, 21, 3, 52, 26, 89, 3, 5, 48, 1040, 17212, 7, 149, 11417, 53, 21, 27632, 10906, 429, 36, 9367, 30, 8, 27632, 765, 3, 6, 190, 8, 169, 13, 46, 7221, 3, 5, 34, 92, 17212, 7, 192, 6315, 21, 3026, 13154, 30, 347, 15803, 3, 52, 26, 89, 3253, 11, 2594, 8141, 3, 52, 26, 89, 331, 8373, 7, 3, 6, 3, 12550, 740, 30, 750, 3, 52, 26, 89, 11417, 8024, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1002, 3501, 2, 8024, 879, 1353, 8024, 3, 6, 4516, 3, 6, 758, 1], "trg": "semantic associations;semantic association;semantic web;relationship;isomorphism;rdf;property sequence;query processing;ai;analysis;complex data relationships;graph traversals;automation;rooted directed path;semantic web querying", "tokenized_trg": [27632, 10906, 32100, 27632, 6028, 32100, 27632, 765, 32100, 1675, 32100, 19, 32, 8886, 159, 51, 32100, 3, 52, 26, 89, 32100, 785, 5932, 32100, 11417, 3026, 32100, 3, 9, 23, 32100, 1693, 32100, 1561, 331, 3079, 32100, 8373, 5187, 5405, 32100, 11747, 32100, 3, 19471, 6640, 2071, 32100, 27632, 765, 11417, 53, 1]}
{"src": "energy management schemes for memory resident database systems . <sep> with the tremendous growth of system memories , memory resident databases are increasingly becoming important in various domains . newer memories provide a structured way of storing data in multiple chips , with each chip having a bank of memory modules . current memory resident databases are yet to take full advantage of the banked storage system , which offers a lot of room for performance and energy optimizations . in this paper , we identify the implications of a banked memory environment in supporting memory resident databases , and propose hardware ( memory directed ) and software ( query directed ) schemes to reduce the energy consumption of queries executed on these databases . our results show that high level query directed schemes ( hosted in the query optimizer ) better utilize the low power modes in reducing the energy consumption than the respective hardware schemes ( hosted in the memory controller ) , due to their complete knowledge of query access patterns . we extend this further and propose a query restructuring scheme and a multi query optimization . queries are restructured and regrouped based on their table access patterns to maximize the likelihood that data accesses are clustered . this helps increase the inter access idle times of memory modules , which in turn enables a more effective control of their energy behavior . this heuristic is eventually integrated with our hardware optimizations to achieve maximum savings . our experimental results show that the memory energy reduces by <digit> % if query restructuring method is applied along with basic energy optimizations over the unoptimized version . the system wide performance impact of each scheme is also studied simultaneously . categories and subject descriptors h . <digit> . <digit> database management physical design access methods h . <digit> . <digit> information storage and retrieval information storage b . <digit> . <digit> memory structures semiconductor memories dram general terms design , performance", "tokenized_src": [827, 758, 15171, 21, 2594, 8141, 3501, 1002, 3, 5, 32100, 28, 8, 9425, 1170, 13, 358, 5655, 3, 6, 2594, 8141, 16961, 33, 5684, 2852, 359, 16, 796, 3303, 7, 3, 5, 126, 49, 5655, 370, 3, 9, 14039, 194, 13, 3, 17445, 331, 16, 1317, 8852, 3, 6, 28, 284, 6591, 578, 3, 9, 2137, 13, 2594, 10561, 3, 5, 750, 2594, 8141, 16961, 33, 780, 12, 240, 423, 2337, 13, 8, 2137, 15, 26, 1606, 358, 3, 6, 84, 704, 3, 9, 418, 13, 562, 21, 821, 11, 827, 11295, 7, 3, 5, 16, 48, 1040, 3, 6, 62, 2862, 8, 12418, 13, 3, 9, 2137, 15, 26, 2594, 1164, 16, 3956, 2594, 8141, 16961, 3, 6, 11, 4230, 4214, 41, 2594, 6640, 3, 61, 11, 889, 41, 11417, 6640, 3, 61, 15171, 12, 1428, 8, 827, 5962, 13, 13154, 13763, 30, 175, 16961, 3, 5, 69, 772, 504, 24, 306, 593, 11417, 6640, 15171, 41, 6523, 16, 8, 11417, 13436, 52, 3, 61, 394, 5849, 8, 731, 579, 12632, 16, 3, 5503, 8, 827, 5962, 145, 8, 6477, 4214, 15171, 41, 6523, 16, 8, 2594, 8612, 3, 61, 3, 6, 788, 12, 70, 743, 1103, 13, 11417, 592, 4264, 3, 5, 62, 4285, 48, 856, 11, 4230, 3, 9, 11417, 28298, 5336, 11, 3, 9, 1249, 11417, 11295, 3, 5, 13154, 33, 3, 60, 16180, 26, 11, 3, 60, 31801, 3, 390, 30, 70, 953, 592, 4264, 12, 11072, 8, 17902, 24, 331, 592, 15, 7, 33, 9068, 15, 26, 3, 5, 48, 1691, 993, 8, 1413, 592, 26592, 648, 13, 2594, 10561, 3, 6, 84, 16, 919, 3, 7161, 3, 9, 72, 1231, 610, 13, 70, 827, 3889, 3, 5, 48, 3, 88, 450, 3040, 19, 3725, 4580, 28, 69, 4214, 11295, 7, 12, 1984, 2411, 5051, 3, 5, 69, 11082, 772, 504, 24, 8, 2594, 827, 1428, 7, 57, 32101, 3, 1454, 3, 99, 11417, 28298, 1573, 19, 2930, 590, 28, 1857, 827, 11295, 7, 147, 8, 73, 12331, 51, 1601, 988, 3, 5, 8, 358, 1148, 821, 1113, 13, 284, 5336, 19, 92, 7463, 11609, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 1722, 408, 592, 2254, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 1606, 3, 115, 3, 5, 32101, 3, 5, 32101, 2594, 5278, 23795, 5655, 3, 26, 2375, 879, 1353, 408, 3, 6, 821, 1], "trg": "energy;memory resident databases;database;energy optimization;banked memory;query directed scheme;low power modes;query restructuring;multi query optimization;dram;hardware energy scheme;query directed energy management;power consumption", "tokenized_trg": [827, 32100, 2594, 8141, 16961, 32100, 3501, 32100, 827, 11295, 32100, 2137, 15, 26, 2594, 32100, 11417, 6640, 5336, 32100, 731, 579, 12632, 32100, 11417, 28298, 32100, 1249, 11417, 11295, 32100, 3, 26, 2375, 32100, 4214, 827, 5336, 32100, 11417, 6640, 827, 758, 32100, 579, 5962, 1]}
{"src": "enforcing security and safety models with an information flow analysis tool . <sep> existing security models require that information of a given security level be prevented from leaking into lower security information . high security applications must be demonstrably free of such leaks , but such demonstration may require substantial manual analysis . other authors have argued that the natural way to enforce these models automatically is with information flow analysis , but have not shown this to be practicable for general purpose programming languages in current use . modern safety critical systems can contain software components with differing safety integrity levels , potentially operating in the same address space . this case poses problems similar to systems with differing security levels failure to show separation of data may require the entire system to be validated at the higher integrity level . in this paper we show how the information flow model enforced by the spark examiner provides support for enforcing these security and safety models . we describe an extension to the spark variable annotations which allows the specification of a security or safety level for each state variable , and an extension to the spark analysis which automatically enforces a given information flow policy on a spark program . categories and subject descriptors d2 . <digit> software engineering software program verification f3 . <digit> logics and meanings of programs specifying and verifying and reasoning about programs general terms design , measurement , security , verification", "tokenized_src": [3, 35, 1161, 75, 53, 1034, 11, 1455, 2250, 28, 46, 251, 2537, 1693, 1464, 3, 5, 32100, 1895, 1034, 2250, 1457, 24, 251, 13, 3, 9, 787, 1034, 593, 36, 19653, 45, 3, 26177, 139, 1364, 1034, 251, 3, 5, 306, 1034, 1564, 398, 36, 13191, 3834, 339, 13, 224, 7653, 7, 3, 6, 68, 224, 10686, 164, 1457, 7354, 3354, 1693, 3, 5, 119, 5921, 43, 3, 15585, 24, 8, 793, 194, 12, 13321, 175, 2250, 3269, 19, 28, 251, 2537, 1693, 3, 6, 68, 43, 59, 2008, 48, 12, 36, 6735, 179, 21, 879, 1730, 6020, 8024, 16, 750, 169, 3, 5, 941, 1455, 2404, 1002, 54, 3480, 889, 3379, 28, 7641, 53, 1455, 9322, 1425, 3, 6, 6149, 2699, 16, 8, 337, 1115, 628, 3, 5, 48, 495, 15968, 982, 1126, 12, 1002, 28, 7641, 53, 1034, 1425, 3338, 12, 504, 13608, 13, 331, 164, 1457, 8, 1297, 358, 12, 36, 16742, 26, 44, 8, 1146, 9322, 593, 3, 5, 16, 48, 1040, 62, 504, 149, 8, 251, 2537, 825, 13321, 26, 57, 8, 13233, 5443, 52, 795, 380, 21, 3, 35, 1161, 75, 53, 175, 1034, 11, 1455, 2250, 3, 5, 62, 5530, 46, 4924, 12, 8, 13233, 7660, 30729, 7, 84, 1250, 8, 16726, 13, 3, 9, 1034, 42, 1455, 593, 21, 284, 538, 7660, 3, 6, 11, 46, 4924, 12, 8, 13233, 1693, 84, 3269, 13321, 7, 3, 9, 787, 251, 2537, 1291, 30, 3, 9, 13233, 478, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 357, 3, 5, 32101, 889, 3867, 889, 478, 17549, 3, 89, 519, 3, 5, 32101, 9769, 7, 11, 2530, 7, 13, 1356, 11610, 53, 11, 10446, 53, 11, 20893, 81, 1356, 879, 1353, 408, 3, 6, 9753, 3, 6, 1034, 3, 6, 17549, 1], "trg": "security;safety;information flow;information flow;security level;integrity;spark;subprogram;bell lapadula;spark ada;dolev yao", "tokenized_trg": [1034, 32100, 1455, 32100, 251, 2537, 32100, 251, 2537, 32100, 1034, 593, 32100, 9322, 32100, 13233, 32100, 769, 1409, 5096, 32100, 12815, 50, 5612, 83, 9, 32100, 13233, 3, 9, 26, 9, 32100, 103, 10912, 3, 63, 9, 32, 1]}
{"src": "entropy and self organization in multi agent systems . <sep> emergent self organization in multi agent systems appears to contradict the second law of thermodynamics . this paradox has been explained in terms of a coupling between the macro level that hosts self organization ( and an apparent reduction in entropy ) , and the micro level ( where random processes greatly increase entropy ) . metaphorically , the micro level serves as an entropy sink , permitting overall system entropy to increase while sequestering this increase from the interactions where self organization is desired . we make this metaphor precise by constructing a simple example of pheromone based coordination , defining a way to measure the shannon entropy at the macro ( agent ) and micro ( pheromone ) levels , and exhibiting an entropy based view of the coordination .", "tokenized_src": [3, 35, 12395, 63, 11, 1044, 1470, 16, 1249, 3102, 1002, 3, 5, 32100, 13591, 29, 17, 1044, 1470, 16, 1249, 3102, 1002, 3475, 12, 21454, 8, 511, 973, 13, 14438, 16928, 7, 3, 5, 48, 23517, 65, 118, 5243, 16, 1353, 13, 3, 9, 4897, 697, 344, 8, 11663, 593, 24, 9855, 1044, 1470, 41, 11, 46, 10320, 4709, 16, 3, 35, 12395, 63, 3, 61, 3, 6, 11, 8, 2179, 593, 41, 213, 6504, 2842, 6891, 993, 3, 35, 12395, 63, 3, 61, 3, 5, 21253, 6402, 3, 6, 8, 2179, 593, 4657, 38, 46, 3, 35, 12395, 63, 5067, 3, 6, 27039, 1879, 358, 3, 35, 12395, 63, 12, 993, 298, 142, 10952, 49, 53, 48, 993, 45, 8, 9944, 213, 1044, 1470, 19, 5327, 3, 5, 62, 143, 48, 21253, 9272, 57, 3, 24246, 3, 9, 650, 677, 13, 3, 102, 88, 3522, 782, 3, 390, 13954, 3, 6, 3, 16123, 3, 9, 194, 12, 3613, 8, 6660, 17805, 3, 35, 12395, 63, 44, 8, 11663, 41, 3102, 3, 61, 11, 2179, 41, 3, 102, 88, 3522, 782, 3, 61, 1425, 3, 6, 11, 3, 30436, 46, 3, 35, 12395, 63, 3, 390, 903, 13, 8, 13954, 3, 5, 1], "trg": "entropy;entropy;self organization;self organization;multi agent system;thermodynamic;pheromones;pheromones;coordination;autonomy", "tokenized_trg": [3, 35, 12395, 63, 32100, 3, 35, 12395, 63, 32100, 1044, 1470, 32100, 1044, 1470, 32100, 1249, 3102, 358, 32100, 14438, 16928, 32100, 3, 102, 88, 3522, 782, 7, 32100, 3, 102, 88, 3522, 782, 7, 32100, 13954, 32100, 29007, 1]}
{"src": "entropy based sensor selection heuristic for target localization . <sep> we propose an entropy based sensor selection heuristic for localization . given <digit> ) a prior probability distribution of the target location , and <digit> ) the locations and the sensing models of a set of candidate sensors for selection , the heuristic selects an informative sensor such that the fusion of the selected sensor observation with the prior target location distribution would yield on average the greatest or nearly the greatest reduction in the entropy of the target location distribution . the heuristic greedily selects one sensor in each step without retrieving any actual sensor observations . the heuristic is also computationally much simpler than the mutual information based approaches . the effectiveness of the heuristic is evaluated using localization simulations in which gaussian sensing models are assumed for simplicity . the heuristic is more effective when the optimal candidate sensor is more informative . categories and subject descriptors h . <digit> . <digit> models and principles systems and information theory information theory c . <digit> . <digit> computer communication networks distributed systems distributed applications general terms algorithms , management , theory", "tokenized_src": [3, 35, 12395, 63, 3, 390, 7824, 1801, 3, 88, 450, 3040, 21, 2387, 415, 1707, 3, 5, 32100, 62, 4230, 46, 3, 35, 12395, 63, 3, 390, 7824, 1801, 3, 88, 450, 3040, 21, 415, 1707, 3, 5, 787, 32101, 3, 61, 3, 9, 1884, 15834, 3438, 13, 8, 2387, 1128, 3, 6, 11, 32101, 3, 61, 8, 3248, 11, 8, 3952, 53, 2250, 13, 3, 9, 356, 13, 4775, 12237, 21, 1801, 3, 6, 8, 3, 88, 450, 3040, 1738, 7, 46, 11152, 7824, 224, 24, 8, 3, 7316, 13, 8, 2639, 7824, 12556, 28, 8, 1884, 2387, 1128, 3438, 133, 6339, 30, 1348, 8, 4016, 42, 2111, 8, 4016, 4709, 16, 8, 3, 35, 12395, 63, 13, 8, 2387, 1128, 3438, 3, 5, 8, 3, 88, 450, 3040, 30337, 9203, 1738, 7, 80, 7824, 16, 284, 1147, 406, 24515, 53, 136, 1805, 7824, 14181, 3, 5, 8, 3, 88, 450, 3040, 19, 92, 25850, 120, 231, 15673, 145, 8, 8543, 251, 3, 390, 6315, 3, 5, 8, 9570, 13, 8, 3, 88, 450, 3040, 19, 14434, 338, 415, 1707, 11108, 7, 16, 84, 3, 20038, 7, 10488, 3952, 53, 2250, 33, 14176, 21, 16538, 3, 5, 8, 3, 88, 450, 3040, 19, 72, 1231, 116, 8, 6624, 4775, 7824, 19, 72, 11152, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 2250, 11, 5559, 1002, 11, 251, 4516, 251, 4516, 3, 75, 3, 5, 32101, 3, 5, 32101, 1218, 1901, 5275, 8308, 1002, 8308, 1564, 879, 1353, 16783, 3, 6, 758, 3, 6, 4516, 1], "trg": "entropy;sensor selection;heuristic;target localization;localization;mutual information;shannon entropy;information fusion;information directed resource management;wireless sensor networks;target tracking", "tokenized_trg": [3, 35, 12395, 63, 32100, 7824, 1801, 32100, 3, 88, 450, 3040, 32100, 2387, 415, 1707, 32100, 415, 1707, 32100, 8543, 251, 32100, 6660, 17805, 3, 35, 12395, 63, 32100, 251, 3, 7316, 32100, 251, 6640, 3487, 758, 32100, 5419, 7824, 5275, 32100, 2387, 6418, 1]}
{"src": "estimating the global pagerank of web communities . <sep> localized search engines are small scale systems that index a particular community on the web . they offer several benefits over their large scale counterparts in that they are relatively inexpensive to build , and can provide more precise and complete search capability over their relevant domains . one disadvantage such systems have over large scale search engines is the lack of global pagerank values . such information is needed to assess the value of pages in the localized search domain within the context of the web as a whole . in this paper , we present well motivated algorithms to estimate the global pagerank values of a local domain . the algorithms are all highly scalable in that , given a local domain of size n , they use o ( n ) resources that include computation time , bandwidth , and storage . we test our methods across a variety of localized domains , including site specific domains and topic specific domains . we demonstrate that by crawling as few as n or 2n additional pages , our methods can give excellent global pagerank estimates . categories and subject descriptors h . <digit> . <digit> information storage and retrieval information search and retrieval g . <digit> . <digit> numerical analysis numerical linear algebra g . <digit> probability and statistics markov processes general terms pagerank , markov chain , stochastic complementation", "tokenized_src": [3, 30739, 8, 1252, 543, 6254, 13, 765, 2597, 3, 5, 32100, 415, 1601, 960, 7277, 33, 422, 2643, 1002, 24, 5538, 3, 9, 1090, 573, 30, 8, 765, 3, 5, 79, 462, 633, 1393, 147, 70, 508, 2643, 15473, 7, 16, 24, 79, 33, 4352, 13938, 12, 918, 3, 6, 11, 54, 370, 72, 9272, 11, 743, 960, 9004, 147, 70, 2193, 3303, 7, 3, 5, 80, 18093, 224, 1002, 43, 147, 508, 2643, 960, 7277, 19, 8, 2136, 13, 1252, 543, 6254, 2620, 3, 5, 224, 251, 19, 906, 12, 6570, 8, 701, 13, 1688, 16, 8, 415, 1601, 960, 3303, 441, 8, 2625, 13, 8, 765, 38, 3, 9, 829, 3, 5, 16, 48, 1040, 3, 6, 62, 915, 168, 11361, 16783, 12, 7037, 8, 1252, 543, 6254, 2620, 13, 3, 9, 415, 3303, 3, 5, 8, 16783, 33, 66, 1385, 3, 24079, 16, 24, 3, 6, 787, 3, 9, 415, 3303, 13, 812, 3, 29, 3, 6, 79, 169, 3, 32, 41, 3, 29, 3, 61, 1438, 24, 560, 29761, 97, 3, 6, 19703, 3, 6, 11, 1606, 3, 5, 62, 794, 69, 2254, 640, 3, 9, 1196, 13, 415, 1601, 3303, 7, 3, 6, 379, 353, 806, 3303, 7, 11, 2859, 806, 3303, 7, 3, 5, 62, 5970, 24, 57, 18639, 53, 38, 360, 38, 3, 29, 42, 204, 29, 1151, 1688, 3, 6, 69, 2254, 54, 428, 1287, 1252, 543, 6254, 10014, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 3, 122, 3, 5, 32101, 3, 5, 32101, 25194, 1693, 25194, 13080, 27502, 3, 122, 3, 5, 32101, 15834, 11, 7475, 3157, 9789, 2842, 879, 1353, 543, 6254, 3, 6, 3157, 9789, 3741, 3, 6, 13564, 107, 10057, 10090, 257, 1], "trg": "global pagerank;localized search engines;algorithms;site specific domain;crawling;node selection;experimentation", "tokenized_trg": [1252, 543, 6254, 32100, 415, 1601, 960, 7277, 32100, 16783, 32100, 353, 806, 3303, 32100, 18639, 53, 32100, 150, 221, 1801, 32100, 5016, 257, 1]}
{"src": "evaluating similarity measures a large scale study in the orkut social network . <sep> online information services have grown too large for users to navigate without the help of automated tools such as collaborative filtering , which makes recommendations to users based on their collective past behavior . while many similarity measures have been proposed and individually evaluated , they have not been evaluated relative to each other in a large real world environment . we present an extensive empirical comparison of six distinct measures of similarity for recommending online communities to members of the orkut social network . we determine the usefulness of the different recommendations by actually measuring users ' propensity to visit and join recommended communities . we also examine how the ordering of recommendations influenced user selection , as well as interesting social issues that arise in recommending communities within a real social network . categories and subject descriptors h . <digit> . <digit> database management database applications data mining h . <digit> . <digit> information storage and retrieval online information services i . <digit> computing methodologies pattern recognition general terms algorithms , measurement , human factors", "tokenized_src": [3, 17768, 1126, 485, 3629, 3, 9, 508, 2643, 810, 16, 8, 42, 2729, 17, 569, 1229, 3, 5, 32100, 367, 251, 364, 43, 4503, 396, 508, 21, 1105, 12, 7939, 406, 8, 199, 13, 10069, 1339, 224, 38, 9642, 4191, 53, 3, 6, 84, 656, 5719, 12, 1105, 3, 390, 30, 70, 6018, 657, 3889, 3, 5, 298, 186, 1126, 485, 3629, 43, 118, 4382, 11, 12011, 14434, 3, 6, 79, 43, 59, 118, 14434, 5237, 12, 284, 119, 16, 3, 9, 508, 490, 296, 1164, 3, 5, 62, 915, 46, 3616, 23941, 4993, 13, 1296, 6746, 3629, 13, 1126, 485, 21, 3, 29288, 367, 2597, 12, 724, 13, 8, 42, 2729, 17, 569, 1229, 3, 5, 62, 2082, 8, 1934, 655, 13, 8, 315, 5719, 57, 700, 11297, 1105, 3, 31, 813, 3801, 485, 12, 719, 11, 1715, 3024, 2597, 3, 5, 62, 92, 5443, 149, 8, 12320, 13, 5719, 3, 12913, 1139, 1801, 3, 6, 38, 168, 38, 1477, 569, 807, 24, 7931, 16, 3, 29288, 2597, 441, 3, 9, 490, 569, 1229, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 3501, 758, 3501, 1564, 331, 5558, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 367, 251, 364, 3, 23, 3, 5, 32101, 10937, 25984, 3275, 5786, 879, 1353, 16783, 3, 6, 9753, 3, 6, 936, 2580, 1], "trg": "similarity measure;social network;social networks;collaborative filtering;online communities;community;data mining;recommender system", "tokenized_trg": [1126, 485, 3613, 32100, 569, 1229, 32100, 569, 5275, 32100, 9642, 4191, 53, 32100, 367, 2597, 32100, 573, 32100, 331, 5558, 32100, 1568, 49, 358, 1]}
{"src": "evaluation and evolution of a browse and search interface relation browser . <sep> we present in this paper the design and an evaluation of a novel interface called the relation browser ( rb ) for searching and browsing large information collections . rb provides visualized category overviews of an information space and allows dynamic filtering and exploration of the result set by tightly coupling the browsing and searching functions . a user study was conducted to compare the effectiveness , efficiency and user satisfaction of completing various types of searching and browsing using the rb interface and a traditional form fillin interface for a video library . an exploration set of tasks was also included to examine the effectiveness of and user satisfaction with the rb when applied to a large federal statistics website . the comparison study strongly supported that rb was more effective , efficient , and satisfying for completing data exploration tasks . based on the results , efforts to automatically populate the underlying database using machine learning techniques are underway . preliminary implementations for two large scale federal statistical websites have been installed on government servers for internal evaluation . categories and subject descriptors h . <digit> . <digit> information interfaces and presentation ( e . g . hci ) user interface interaction style , graphical user interfaces ( gui ) h . <digit> . <digit> information storage and retrieval information search and retrieval query formulation , search process , selection process h . <digit> . <digit> information storage and retrieval digital libraries , user issues , systems issues general terms design , human factors , experimentation , performance", "tokenized_src": [5002, 11, 9009, 13, 3, 9, 9708, 11, 960, 3459, 4689, 3509, 3, 5, 32100, 62, 915, 16, 48, 1040, 8, 408, 11, 46, 5002, 13, 3, 9, 3714, 3459, 718, 8, 4689, 3509, 41, 3, 52, 115, 3, 61, 21, 4549, 11, 14139, 508, 251, 8274, 3, 5, 3, 52, 115, 795, 25086, 26, 3295, 8650, 7, 13, 46, 251, 628, 11, 1250, 4896, 4191, 53, 11, 9740, 13, 8, 741, 356, 57, 20994, 4897, 697, 8, 14139, 11, 4549, 3621, 3, 5, 3, 9, 1139, 810, 47, 4468, 12, 4048, 8, 9570, 3, 6, 3949, 11, 1139, 5044, 13, 3, 8828, 796, 1308, 13, 4549, 11, 14139, 338, 8, 3, 52, 115, 3459, 11, 3, 9, 1435, 607, 14, 77, 3459, 21, 3, 9, 671, 3595, 3, 5, 46, 9740, 356, 13, 4145, 47, 92, 1285, 12, 5443, 8, 9570, 13, 11, 1139, 5044, 28, 8, 3, 52, 115, 116, 2930, 12, 3, 9, 508, 2822, 7475, 475, 3, 5, 8, 4993, 810, 7157, 3510, 24, 3, 52, 115, 47, 72, 1231, 3, 6, 2918, 3, 6, 11, 16156, 21, 3, 8828, 331, 9740, 4145, 3, 5, 3, 390, 30, 8, 772, 3, 6, 2231, 12, 3269, 8364, 342, 8, 3, 10067, 3501, 338, 1437, 1036, 2097, 33, 18953, 3, 5, 17413, 4432, 7, 21, 192, 508, 2643, 2822, 11775, 3395, 43, 118, 3029, 30, 789, 8379, 21, 3224, 5002, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 3459, 7, 11, 3831, 41, 3, 15, 3, 5, 3, 122, 3, 5, 3, 107, 75, 23, 3, 61, 1139, 3459, 6565, 869, 3, 6, 3, 16982, 1139, 3459, 7, 41, 3, 7938, 3, 61, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 251, 960, 11, 24515, 138, 11417, 20029, 3, 6, 960, 433, 3, 6, 1801, 433, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 1125, 12256, 3, 6, 1139, 807, 3, 6, 1002, 807, 879, 1353, 408, 3, 6, 936, 2580, 3, 6, 5016, 257, 3, 6, 821, 1], "trg": "browsing;browse and search interface;browse;searching;search;relation browser;rb;visualization;category overview;user study;effectiveness;efficiency;user satisfaction;satisfaction;user interface;user interface;information storage and retrieval;information search;human factor;interaction patterns with interface;facets;interface design;interactive system;dynamic query;visual display;faceted category structure;information browsing;modeling user interaction", "tokenized_trg": [14139, 32100, 9708, 11, 960, 3459, 32100, 9708, 32100, 4549, 32100, 960, 32100, 4689, 3509, 32100, 3, 52, 115, 32100, 21744, 32100, 3295, 8650, 32100, 1139, 810, 32100, 9570, 32100, 3949, 32100, 1139, 5044, 32100, 5044, 32100, 1139, 3459, 32100, 1139, 3459, 32100, 251, 1606, 11, 24515, 138, 32100, 251, 960, 32100, 936, 2945, 32100, 6565, 4264, 28, 3459, 32100, 3, 27841, 32100, 3459, 408, 32100, 6076, 358, 32100, 4896, 11417, 32100, 3176, 1831, 32100, 3, 28842, 3295, 1809, 32100, 251, 14139, 32100, 15309, 1139, 6565, 1]}
{"src": "event threading within news topics . <sep> with the overwhelming volume of online news available today , there is an increasing need for automatic techniques to analyze and present news to the user in a meaningful and efficient manner . previous research focused only on organizing news stories by their topics into a flat hierarchy . we believe viewing a news topic as a flat collection of stories is too restrictive and inefficient for a user to understand the topic quickly . in this work , we attempt to capture the rich structure of events and their dependencies in a news topic through our event models . we call the process of recognizing events and their dependencies event threading . we believe our perspective of modeling the structure of a topic is more effective in capturing its semantics than a flat list of on topic stories . we formally define the novel problem , suggest evaluation metrics and present a few techniques for solving the problem . besides the standard word based features , our approaches take into account novel features such as temporal locality of stories for event recognition and time ordering for capturing dependencies . our experiments on a manually labeled data sets show that our models <unk> tively identify the events and capture dependencies among them . categories and subject descriptors h . <digit> . <digit> information search and retrieval clustering general terms algorithms , experimentation , measurement", "tokenized_src": [605, 4546, 53, 441, 1506, 4064, 3, 5, 32100, 28, 8, 11316, 2908, 13, 367, 1506, 347, 469, 3, 6, 132, 19, 46, 3094, 174, 21, 6569, 2097, 12, 8341, 11, 915, 1506, 12, 8, 1139, 16, 3, 9, 7892, 11, 2918, 3107, 3, 5, 1767, 585, 2937, 163, 30, 14308, 1506, 1937, 57, 70, 4064, 139, 3, 9, 2667, 25515, 3, 5, 62, 857, 7426, 3, 9, 1506, 2859, 38, 3, 9, 2667, 1232, 13, 1937, 19, 396, 28219, 11, 16, 16995, 21, 3, 9, 1139, 12, 734, 8, 2859, 1224, 3, 5, 16, 48, 161, 3, 6, 62, 3332, 12, 4105, 8, 2354, 1809, 13, 984, 11, 70, 6002, 11573, 16, 3, 9, 1506, 2859, 190, 69, 605, 2250, 3, 5, 62, 580, 8, 433, 13, 3, 22873, 984, 11, 70, 6002, 11573, 605, 4546, 53, 3, 5, 62, 857, 69, 3503, 13, 15309, 8, 1809, 13, 3, 9, 2859, 19, 72, 1231, 16, 3, 18147, 165, 27632, 7, 145, 3, 9, 2667, 570, 13, 30, 2859, 1937, 3, 5, 62, 3, 19448, 6634, 8, 3714, 682, 3, 6, 3130, 5002, 15905, 11, 915, 3, 9, 360, 2097, 21, 11795, 8, 682, 3, 5, 3, 15262, 8, 1068, 1448, 3, 390, 753, 3, 6, 69, 6315, 240, 139, 905, 3714, 753, 224, 38, 10301, 8563, 415, 485, 13, 1937, 21, 605, 5786, 11, 97, 12320, 21, 3, 18147, 6002, 11573, 3, 5, 69, 12341, 30, 3, 9, 12616, 3783, 15, 26, 331, 3369, 504, 24, 69, 2250, 2, 3, 17, 13830, 2862, 8, 984, 11, 4105, 6002, 11573, 859, 135, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 960, 11, 24515, 138, 9068, 53, 879, 1353, 16783, 3, 6, 5016, 257, 3, 6, 9753, 1], "trg": "event threading;event;threading;dependency;information searching;clustering;agglomerative clustering with time decay;temporal localization of news stories;intelligent information retrieval;information browsing and organization;meaningful and efficient analysis and presentation of news;nearest parent model;topic detection and tracking;complete link model;dependency modeling;news topic modeling", "tokenized_trg": [605, 4546, 53, 32100, 605, 32100, 4546, 53, 32100, 27804, 32100, 251, 4549, 32100, 9068, 53, 32100, 3, 9, 122, 24422, 1528, 9068, 53, 28, 97, 18907, 32100, 10301, 8563, 415, 1707, 13, 1506, 1937, 32100, 7951, 251, 24515, 138, 32100, 251, 14139, 11, 1470, 32100, 7892, 11, 2918, 1693, 11, 3831, 13, 1506, 32100, 13012, 4208, 825, 32100, 2859, 10664, 11, 6418, 32100, 743, 1309, 825, 32100, 27804, 15309, 32100, 1506, 2859, 15309, 1]}
{"src": "evolutionary learning with kernels a generic solution for large margin problems . <sep> in this paper we embed evolutionary computation into statistical learning theory . first , we outline the connection between large margin optimization and statistical learning and see why this paradigm is successful for many pattern recognition problems . we then embed evolutionary computation into the most prominent representative of this class of learning methods , namely into support vector machines ( svm ) . in contrast to former applications of evolutionary algorithms to svms we do not only optimize the method or kernel parameters . we rather use both evolution strategies and particle swarm optimization in order to directly solve the posed constrained optimization problem . transforming the problem into the wolfe dual reduces the total runtime and allows the usage of kernel functions . exploiting the knowledge about this optimization problem leads to a hybrid mutation which further decreases convergence time while classification accuracy is preserved . we will show that evolutionary svms are at least as accurate as their quadratic programming counterparts on six real world benchmark data sets . the evolutionary svm variants frequently outperform their quadratic programming competitors . additionally , the proposed algorithm is more generic than existing traditional solutions since it will also work for non positive semidefinite kernel functions and for several , possibly competing , performance criteria . track learning classifier systems and other genetics based machine learning categories and subject descriptors learning general terms algorithms , theory , experimentation", "tokenized_src": [27168, 1036, 28, 20563, 7, 3, 9, 8165, 1127, 21, 508, 6346, 982, 3, 5, 32100, 16, 48, 1040, 62, 25078, 27168, 29761, 139, 11775, 1036, 4516, 3, 5, 166, 3, 6, 62, 11052, 8, 2135, 344, 508, 6346, 11295, 11, 11775, 1036, 11, 217, 572, 48, 20491, 19, 1574, 21, 186, 3275, 5786, 982, 3, 5, 62, 258, 25078, 27168, 29761, 139, 8, 167, 8304, 6978, 13, 48, 853, 13, 1036, 2254, 3, 6, 3, 17332, 139, 380, 12938, 4096, 41, 3, 7, 208, 51, 3, 61, 3, 5, 16, 4656, 12, 1798, 1564, 13, 27168, 16783, 12, 3, 7, 208, 51, 7, 62, 103, 59, 163, 13436, 8, 1573, 42, 20563, 8755, 3, 5, 62, 1066, 169, 321, 9009, 3266, 11, 24317, 3, 7, 14522, 11295, 16, 455, 12, 1461, 4602, 8, 3, 12151, 975, 22418, 11295, 682, 3, 5, 3, 21139, 8, 682, 139, 8, 3, 19747, 15, 7013, 1428, 7, 8, 792, 661, 715, 11, 1250, 8, 4742, 13, 20563, 3621, 3, 5, 9248, 53, 8, 1103, 81, 48, 11295, 682, 3433, 12, 3, 9, 9279, 17324, 84, 856, 6313, 7, 31098, 97, 298, 13774, 7452, 19, 18570, 3, 5, 62, 56, 504, 24, 27168, 3, 7, 208, 51, 7, 33, 44, 709, 38, 4034, 38, 70, 16429, 52, 6049, 6020, 15473, 7, 30, 1296, 490, 296, 15705, 331, 3369, 3, 5, 8, 27168, 3, 7, 208, 51, 6826, 7, 4344, 91, 883, 2032, 70, 16429, 52, 6049, 6020, 9216, 3, 5, 11700, 3, 6, 8, 4382, 12628, 19, 72, 8165, 145, 1895, 1435, 1275, 437, 34, 56, 92, 161, 21, 529, 1465, 4772, 14339, 20563, 3621, 11, 21, 633, 3, 6, 3673, 12166, 3, 6, 821, 6683, 3, 5, 1463, 1036, 853, 7903, 1002, 11, 119, 6472, 7, 3, 390, 1437, 1036, 5897, 11, 1426, 20, 11815, 127, 7, 1036, 879, 1353, 16783, 3, 6, 4516, 3, 6, 5016, 257, 1], "trg": "kernels;large margin;evolutionary computation;statistical learning theory;support vector machines;svm;evolution strategies;particle swarms;hybrid mutation;machine learning;kernel methods", "tokenized_trg": [20563, 7, 32100, 508, 6346, 32100, 27168, 29761, 32100, 11775, 1036, 4516, 32100, 380, 12938, 4096, 32100, 3, 7, 208, 51, 32100, 9009, 3266, 32100, 24317, 3, 7, 14522, 7, 32100, 9279, 17324, 32100, 1437, 1036, 32100, 20563, 2254, 1]}
{"src": "a flexible and extensible object middleware corba and beyond . <sep> this paper presents a corba compliant middleware architecture that is more flexible and extensible compared to standard corba . the portable design of this architecture is easily integrated in any standard corba middleware for this purpose , mainly the handling of object references ( iors ) has to be changed . to encapsulate those changes , we introduce the concept of a generic reference manager with portable profile managers . profile managers are pluggable and in extreme can be downloaded on demand . to illustrate the use of this approach , we present a profile manager implementation for fragmented objects and another one for bridging corba to the jini world . the first profile manager supports truly distributed objects , which allow seamless integration of partitioning , scalability , fault tolerance , end to end quality of service , and many more implementation aspects into a distributed object without losing distribution and location transparency . the second profile manager illustrates how our architecture enables fully transparent access from corba applications to services on non corba platforms categories and subject descriptors d . <digit> . <digit> programming techniques object oriented programming d . <digit> . <digit> software engineering distribution , maintenance , and enhancement extensibility , portability d . <digit> . <digit> software engineering interoperability distributed objects general terms design , management , standardization", "tokenized_src": [3, 9, 4136, 11, 28659, 2296, 3735, 2214, 3404, 4301, 115, 9, 11, 1909, 3, 5, 32100, 48, 1040, 6621, 3, 9, 4301, 115, 9, 2890, 9333, 2214, 3404, 4648, 24, 19, 72, 4136, 11, 28659, 2296, 3, 2172, 12, 1068, 4301, 115, 9, 3, 5, 8, 6262, 408, 13, 48, 4648, 19, 1153, 4580, 16, 136, 1068, 4301, 115, 9, 2214, 3404, 21, 48, 1730, 3, 6, 3, 4894, 8, 5834, 13, 3735, 9811, 41, 3, 23, 127, 7, 3, 61, 65, 12, 36, 2130, 3, 5, 12, 3, 35, 30080, 342, 273, 1112, 3, 6, 62, 4277, 8, 2077, 13, 3, 9, 8165, 2848, 2743, 28, 6262, 3278, 5903, 3, 5, 3278, 5903, 33, 6635, 122, 179, 11, 16, 5272, 54, 36, 11081, 30, 2173, 3, 5, 12, 11485, 8, 169, 13, 48, 1295, 3, 6, 62, 915, 3, 9, 3278, 2743, 4432, 21, 12071, 15, 26, 4820, 11, 430, 80, 21, 3, 2160, 12720, 4301, 115, 9, 12, 8, 3, 354, 77, 23, 296, 3, 5, 8, 166, 3278, 2743, 4951, 1892, 8308, 4820, 3, 6, 84, 995, 15870, 5660, 13, 16540, 53, 3, 6, 3, 7, 1489, 2020, 3, 6, 7828, 17313, 3, 6, 414, 12, 414, 463, 13, 313, 3, 6, 11, 186, 72, 4432, 3149, 139, 3, 9, 8308, 3735, 406, 5489, 3438, 11, 1128, 13567, 3, 5, 8, 511, 3278, 2743, 11485, 7, 149, 69, 4648, 3, 7161, 1540, 7237, 592, 45, 4301, 115, 9, 1564, 12, 364, 30, 529, 4301, 115, 9, 5357, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 6020, 2097, 3735, 3, 9442, 6020, 3, 26, 3, 5, 32101, 3, 5, 32101, 889, 3867, 3438, 3, 6, 2453, 3, 6, 11, 15220, 28659, 115, 14277, 3, 6, 2147, 2020, 3, 26, 3, 5, 32101, 3, 5, 32101, 889, 3867, 1413, 32, 883, 2020, 8308, 4820, 879, 1353, 408, 3, 6, 758, 3, 6, 1068, 1707, 1], "trg": "flexible and extensible object middleware;flexibility;extensibility;extensibility;extensions;middleware;corba;middleware architecture;middleware architecture;integration;object references;ior;encapsulation;reference manager;profile manager;profile manager;implementation;distributed objects;object oriented;interoperability;fault tolerant corba;middleware systems;remote object;ubiquitous computing;iiop;extensible and reconfigurable middleware;middleware platform;distiributed applications;middleware interoperability;software architecture for middleware", "tokenized_trg": [4136, 11, 28659, 2296, 3735, 2214, 3404, 32100, 6461, 32100, 28659, 115, 14277, 32100, 28659, 115, 14277, 32100, 15176, 32100, 2214, 3404, 32100, 4301, 115, 9, 32100, 2214, 3404, 4648, 32100, 2214, 3404, 4648, 32100, 5660, 32100, 3735, 9811, 32100, 3, 23, 127, 32100, 3, 35, 30080, 257, 32100, 2848, 2743, 32100, 3278, 2743, 32100, 3278, 2743, 32100, 4432, 32100, 8308, 4820, 32100, 3735, 3, 9442, 32100, 1413, 32, 883, 2020, 32100, 7828, 3, 23267, 4301, 115, 9, 32100, 2214, 3404, 1002, 32100, 4322, 3735, 32100, 29840, 10937, 32100, 3, 23, 23, 32, 102, 32100, 28659, 2296, 11, 18695, 9178, 179, 2214, 3404, 32100, 2214, 3404, 1585, 32100, 1028, 20408, 29261, 1564, 32100, 2214, 3404, 1413, 32, 883, 2020, 32100, 889, 4648, 21, 2214, 3404, 1]}
{"src": "fan out measuring human control of multiple robots . <sep> a goal of human robot interaction is to allow one user to operate multiple robots simultaneously . in such a scenario the robots provide leverage to the user ' s attention . the number of such robots that can be operated is called the fan out of a human robot team . robots that have high neglect tolerance and lower interaction time will achieve higher fan out . we define an equation that relates fan out to a robot ' s activity time and its interaction time . we describe how to measure activity time and fan out . we then use the fan out equation to compute interaction effort . we can use this interaction effort as a measure of the effectiveness of a human robot interaction design . we describe experiments that validate the fan out equation and its use as a metric for improving human robot interaction . acm classification keywords h5 . <digit> user interfaces , i2 . <digit> robotics", "tokenized_src": [1819, 91, 11297, 936, 610, 13, 1317, 7567, 7, 3, 5, 32100, 3, 9, 1288, 13, 936, 7567, 6565, 19, 12, 995, 80, 1139, 12, 4368, 1317, 7567, 7, 11609, 3, 5, 16, 224, 3, 9, 8616, 8, 7567, 7, 370, 11531, 12, 8, 1139, 3, 31, 3, 7, 1388, 3, 5, 8, 381, 13, 224, 7567, 7, 24, 54, 36, 7747, 19, 718, 8, 1819, 91, 13, 3, 9, 936, 7567, 372, 3, 5, 7567, 7, 24, 43, 306, 18339, 17313, 11, 1364, 6565, 97, 56, 1984, 1146, 1819, 91, 3, 5, 62, 6634, 46, 13850, 24, 3, 21679, 1819, 91, 12, 3, 9, 7567, 3, 31, 3, 7, 1756, 97, 11, 165, 6565, 97, 3, 5, 62, 5530, 149, 12, 3613, 1756, 97, 11, 1819, 91, 3, 5, 62, 258, 169, 8, 1819, 91, 13850, 12, 29216, 6565, 1941, 3, 5, 62, 54, 169, 48, 6565, 1941, 38, 3, 9, 3613, 13, 8, 9570, 13, 3, 9, 936, 7567, 6565, 408, 3, 5, 62, 5530, 12341, 24, 16742, 8, 1819, 91, 13850, 11, 165, 169, 38, 3, 9, 3, 7959, 21, 4863, 936, 7567, 6565, 3, 5, 3, 9, 75, 51, 13774, 12545, 3, 107, 755, 3, 5, 32101, 1139, 3459, 7, 3, 6, 3, 23, 357, 3, 5, 32101, 20407, 7, 1], "trg": "fan out;multiple robots;human robot interaction;human robot interaction;interaction time;activity time;fan out equation;interaction effort;user interface;neglect time", "tokenized_trg": [1819, 91, 32100, 1317, 7567, 7, 32100, 936, 7567, 6565, 32100, 936, 7567, 6565, 32100, 6565, 97, 32100, 1756, 97, 32100, 1819, 91, 13850, 32100, 6565, 1941, 32100, 1139, 3459, 32100, 18339, 97, 1]}
{"src": "fast string sorting using order preserving compression . <sep> we give experimental evidence for the benefits of order preserving compression in sorting algorithms . while , in general , any algorithm might benefit from compressed data because of reduced paging requirements , we identified two natural candidates that would further benefit from order preserving compression , namely string oriented sorting algorithms and word ram algorithms for keys of bounded length . the word ram model has some of the fastest known sorting algorithms in practice . these algorithms are designed for keys of bounded length , usually <digit> or <digit> bits , which limits their direct applicability for strings . one possibility is to use an order preserving compression scheme , so that a bounded key length algorithm can be applied . for the case of standard algorithms , we took what is considered to be the among the fastest nonword ram string sorting algorithms , fast <unk> , and measured its performance on compressed data . the fast <unk> algorithm of bentley and sedgewick is optimized to handle text strings . our experiments show that order compression techniques results in savings of approximately <digit> % over the same algorithm on noncompressed data . for the word ram , we modified andersson ' s sorting algorithm to handle variable length keys . the resulting algorithm is faster than the standard unix sort by a factor of <digit> . 5x . last , we used an order preserving scheme that is within a constant additive term of the optimal <unk> , but requires linear time rather than o ( m log m ) , where m is the size of the alphabet . categories and subject descriptors e . <digit> data storage contiguous representations , object representations e . <digit> coding and information theory data compaction and compression f . <digit> . <digit> analysis of algorithms and problem complexity general h . <digit> . <digit> information storage file organization h . <digit> . <digit> information search and retrieval search process general terms algorithms , experimentation , performance additional key words and phrases order preserving compression , sorting , word ram , unit cost ram", "tokenized_src": [1006, 6108, 1843, 53, 338, 455, 3, 22140, 16685, 3, 5, 32100, 62, 428, 11082, 2084, 21, 8, 1393, 13, 455, 3, 22140, 16685, 16, 1843, 53, 16783, 3, 5, 298, 3, 6, 16, 879, 3, 6, 136, 12628, 429, 1656, 45, 25423, 331, 250, 13, 3915, 3, 11057, 53, 1502, 3, 6, 62, 4313, 192, 793, 4341, 24, 133, 856, 1656, 45, 455, 3, 22140, 16685, 3, 6, 3, 17332, 6108, 3, 9442, 1843, 53, 16783, 11, 1448, 3, 2375, 16783, 21, 9060, 13, 3, 115, 14471, 2475, 3, 5, 8, 1448, 3, 2375, 825, 65, 128, 13, 8, 10391, 801, 1843, 53, 16783, 16, 1032, 3, 5, 175, 16783, 33, 876, 21, 9060, 13, 3, 115, 14471, 2475, 3, 6, 1086, 32101, 42, 32101, 14120, 3, 6, 84, 6790, 70, 1223, 1120, 2176, 2020, 21, 18705, 3, 5, 80, 5113, 19, 12, 169, 46, 455, 3, 22140, 16685, 5336, 3, 6, 78, 24, 3, 9, 3, 115, 14471, 843, 2475, 12628, 54, 36, 2930, 3, 5, 21, 8, 495, 13, 1068, 16783, 3, 6, 62, 808, 125, 19, 1702, 12, 36, 8, 859, 8, 10391, 529, 6051, 3, 2375, 6108, 1843, 53, 16783, 3, 6, 1006, 2, 3, 6, 11, 8413, 165, 821, 30, 25423, 331, 3, 5, 8, 1006, 2, 12628, 13, 21222, 1306, 11, 3, 7, 9390, 5981, 19, 18149, 12, 2174, 1499, 18705, 3, 5, 69, 12341, 504, 24, 455, 16685, 2097, 772, 16, 5051, 13, 3241, 32101, 3, 1454, 147, 8, 337, 12628, 30, 529, 287, 8918, 331, 3, 5, 21, 8, 1448, 3, 2375, 3, 6, 62, 8473, 11, 277, 739, 3, 31, 3, 7, 1843, 53, 12628, 12, 2174, 7660, 2475, 9060, 3, 5, 8, 3, 5490, 12628, 19, 3627, 145, 8, 1068, 73, 2407, 1843, 57, 3, 9, 2945, 13, 32101, 3, 5, 305, 226, 3, 5, 336, 3, 6, 62, 261, 46, 455, 3, 22140, 5336, 24, 19, 441, 3, 9, 3917, 20541, 1657, 13, 8, 6624, 2, 3, 6, 68, 2311, 13080, 97, 1066, 145, 3, 32, 41, 3, 51, 4303, 3, 51, 3, 61, 3, 6, 213, 3, 51, 19, 8, 812, 13, 8, 20688, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 15, 3, 5, 32101, 331, 1606, 975, 2880, 13281, 6497, 7, 3, 6, 3735, 6497, 7, 3, 15, 3, 5, 32101, 3, 9886, 11, 251, 4516, 331, 2890, 4787, 11, 16685, 3, 89, 3, 5, 32101, 3, 5, 32101, 1693, 13, 16783, 11, 682, 11641, 879, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 1042, 1470, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 960, 11, 24515, 138, 960, 433, 879, 1353, 16783, 3, 6, 5016, 257, 3, 6, 821, 1151, 843, 1234, 11, 15101, 455, 3, 22140, 16685, 3, 6, 1843, 53, 3, 6, 1448, 3, 2375, 3, 6, 1745, 583, 3, 2375, 1], "trg": "string sorting;sorting;order preserving compression;sorting algorithms;word ram;ram;keys of bounded length;order preserving compression scheme;compression scheme;unit cost;data collection;linear time algorithm;word ram sorting algorithm;random access;compression ratio", "tokenized_trg": [6108, 1843, 53, 32100, 1843, 53, 32100, 455, 3, 22140, 16685, 32100, 1843, 53, 16783, 32100, 1448, 3, 2375, 32100, 3, 2375, 32100, 9060, 13, 3, 115, 14471, 2475, 32100, 455, 3, 22140, 16685, 5336, 32100, 16685, 5336, 32100, 1745, 583, 32100, 331, 1232, 32100, 13080, 97, 12628, 32100, 1448, 3, 2375, 1843, 53, 12628, 32100, 6504, 592, 32100, 16685, 5688, 1]}
{"src": "<unk> a new form of memory optimized for 3d graphics . <sep> <unk> , a new form of dynamic random access memory that greatly accelerates the rendering of z buffered primitives , is presented . two key concepts make this acceleration possible . the first is to convert the read modify write z buffer compare and rgb blend into a single write only operation . the second is to support two levels of rectangularly shaped pixel caches internal to the memory chip . the result is a <digit> megabit part that , for 3d graphics , performs read modify write cycles ten times faster than conventional <digit> ns <unk> . a four way interleaved <digit> mhz <unk> frame buffer can z buffer up to <digit> million pixels per second . working <unk> prototypes have been fabricated . cr categories and subject descriptors i . <digit> . <digit> computer graphics hardware architecture i . <digit> . <digit> computer graphics picture image generation display algorithms i . <digit> . <digit> computer graphics three dimensional graphics and realism .", "tokenized_src": [2, 3, 9, 126, 607, 13, 2594, 18149, 21, 220, 26, 6484, 3, 5, 32100, 2, 3, 6, 3, 9, 126, 607, 13, 4896, 6504, 592, 2594, 24, 6891, 16845, 7, 8, 18968, 13, 3, 172, 17164, 15, 26, 26322, 7, 3, 6, 19, 2569, 3, 5, 192, 843, 6085, 143, 48, 23224, 487, 3, 5, 8, 166, 19, 12, 5755, 8, 608, 11435, 1431, 3, 172, 17164, 4048, 11, 3, 52, 122, 115, 4764, 139, 3, 9, 712, 1431, 163, 2986, 3, 5, 8, 511, 19, 12, 380, 192, 1425, 13, 24675, 120, 3, 6489, 3, 14251, 11800, 7, 3224, 12, 8, 2594, 6591, 3, 5, 8, 741, 19, 3, 9, 32101, 13950, 2360, 294, 24, 3, 6, 21, 220, 26, 6484, 3, 6, 1912, 7, 608, 11435, 1431, 15164, 3, 324, 648, 3627, 145, 7450, 32101, 3, 29, 7, 2, 3, 5, 3, 9, 662, 194, 1413, 109, 9, 162, 26, 32101, 3, 51, 107, 172, 2, 2835, 17164, 54, 3, 172, 17164, 95, 12, 32101, 770, 15386, 399, 511, 3, 5, 464, 2, 14402, 7, 43, 118, 3, 27066, 3, 5, 5764, 5897, 11, 1426, 20, 11815, 127, 7, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 4214, 4648, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 1554, 1023, 3381, 1831, 16783, 3, 23, 3, 5, 32101, 3, 5, 32101, 1218, 6484, 386, 3, 11619, 6484, 11, 3, 60, 6835, 3, 5, 1], "trg": "memory;3d graphics;graphics;dynamic random access memory;acceleration;rendering;z buffer;z buffering;z buffer;pixel caching;pixel cache;caches;caching;frame buffer;dynamic memory;optimisation;3d graphics hardware;dram;rgba blend;video buffers;dynamic memory chips;sram;pixel processing;parallel graphics algorithms;vram;rendering rate;video output bandwidth;pixel processing;z compare;fbram;fbram", "tokenized_trg": [2594, 32100, 220, 26, 6484, 32100, 6484, 32100, 4896, 6504, 592, 2594, 32100, 23224, 32100, 18968, 32100, 3, 172, 17164, 32100, 3, 172, 17164, 53, 32100, 3, 172, 17164, 32100, 3, 14251, 212, 8509, 32100, 3, 14251, 11800, 32100, 11800, 7, 32100, 212, 8509, 32100, 2835, 17164, 32100, 4896, 2594, 32100, 3, 27040, 32100, 220, 26, 6484, 4214, 32100, 3, 26, 2375, 32100, 3, 52, 122, 115, 9, 4764, 32100, 671, 17164, 7, 32100, 4896, 2594, 8852, 32100, 3, 7, 2375, 32100, 3, 14251, 3026, 32100, 8449, 6484, 16783, 32100, 3, 11473, 51, 32100, 18968, 1080, 32100, 671, 3911, 19703, 32100, 3, 14251, 3026, 32100, 3, 172, 4048, 32100, 3, 89, 1939, 51, 32100, 3, 89, 1939, 51, 1]}
{"src": "focused named entity recognition using machine learning . <sep> in this paper we study the problem of finding most topical named entities among all entities in a document , which we refer to as focused named entity recognition . we show that these focused named entities are useful for many natural language processing applications , such as document summarization , search result ranking , and entity detection and tracking . we propose a statistical model for focused named entity recognition by converting it into a classification problem . we then study the impact of various linguistic features and compare a number of classification algorithms . from experiments on an annotated chinese news corpus , we demonstrate that the proposed method can achieve near human level accuracy . categories and subject descriptors i . <digit> . <digit> artificial intelligence natural language processing text analysis h . <digit> . <digit> information storage and retrieval content analysis and indexing linguistic processing general terms algorithms , experimentation", "tokenized_src": [2937, 2650, 10409, 5786, 338, 1437, 1036, 3, 5, 32100, 16, 48, 1040, 62, 810, 8, 682, 13, 2342, 167, 2859, 138, 2650, 12311, 859, 66, 12311, 16, 3, 9, 1708, 3, 6, 84, 62, 2401, 12, 38, 2937, 2650, 10409, 5786, 3, 5, 62, 504, 24, 175, 2937, 2650, 12311, 33, 1934, 21, 186, 793, 1612, 3026, 1564, 3, 6, 224, 38, 1708, 4505, 1635, 1707, 3, 6, 960, 741, 11592, 3, 6, 11, 10409, 10664, 11, 6418, 3, 5, 62, 4230, 3, 9, 11775, 825, 21, 2937, 2650, 10409, 5786, 57, 3, 21049, 34, 139, 3, 9, 13774, 682, 3, 5, 62, 258, 810, 8, 1113, 13, 796, 3, 24703, 753, 11, 4048, 3, 9, 381, 13, 13774, 16783, 3, 5, 45, 12341, 30, 46, 46, 2264, 920, 3, 1436, 1496, 15, 1506, 11736, 302, 3, 6, 62, 5970, 24, 8, 4382, 1573, 54, 1984, 1084, 936, 593, 7452, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 23, 3, 5, 32101, 3, 5, 32101, 7353, 6123, 793, 1612, 3026, 1499, 1693, 3, 107, 3, 5, 32101, 3, 5, 32101, 251, 1606, 11, 24515, 138, 738, 1693, 11, 5538, 53, 3, 24703, 3026, 879, 1353, 16783, 3, 6, 5016, 257, 1], "trg": "focused named entity recognition;named entities;entity recognition;machine learning;natural language processing;natural language processing applications;summarization;ranking;statistical model;linguistic features;features;electronic documents;classification methods;machine learning approach;classification model;text summarization;information retrieval;main topics;naive bayes;automatic summarization;sentence extraction;information retrieval;decision tree;robust risk minimization;topic identification", "tokenized_trg": [2937, 2650, 10409, 5786, 32100, 2650, 12311, 32100, 10409, 5786, 32100, 1437, 1036, 32100, 793, 1612, 3026, 32100, 793, 1612, 3026, 1564, 32100, 4505, 1635, 1707, 32100, 11592, 32100, 11775, 825, 32100, 3, 24703, 753, 32100, 753, 32100, 3031, 2691, 32100, 13774, 2254, 32100, 1437, 1036, 1295, 32100, 13774, 825, 32100, 1499, 4505, 1635, 1707, 32100, 251, 24515, 138, 32100, 711, 4064, 32100, 3, 29, 9, 757, 10210, 15, 7, 32100, 6569, 4505, 1635, 1707, 32100, 7142, 16629, 32100, 251, 24515, 138, 32100, 1357, 2195, 32100, 6268, 1020, 8984, 1707, 32100, 2859, 10356, 1]}
{"src": "formally deriving an stg machine . <sep> starting from p . sestoft semantics for lazy evaluation , we define a new semantics in which normal forms consist of variables pointing to lambdas or constructions . this is in accordance with the more recent changes in the spineless tagless g machine ( stg ) machine , where constructions only appear in closures ( lambdas only appeared in closures already in previous versions ) . we prove the equivalence between the new semantics and sestoft ' s . then , a sequence of stg machines are derived , formally proving the correctness of each derivation . the last machine consists of a few imperative instructions and its distance to a conventional language is minimal . the paper also discusses the differences between the final machine and the actual stg machine implemented in the glasgow haskell compiler . categories and subject descriptors d . <digit> . <digit> programming languages formal definitions and theory semantics , syntax d . <digit> . <digit> programming languages language classifications applicative ( functional ) languages d . <digit> . <digit> programming languages processors code generation , compilers f . <digit> . <digit> logics and meanings of programs semantics of programming languages operational semantics general terms theory , languages , verification", "tokenized_src": [3, 19448, 20, 5927, 53, 46, 3, 7, 17, 122, 1437, 3, 5, 32100, 1684, 45, 3, 102, 3, 5, 3, 7, 222, 858, 17, 27632, 7, 21, 19743, 5002, 3, 6, 62, 6634, 3, 9, 126, 27632, 7, 16, 84, 1389, 2807, 5608, 13, 11445, 3, 15989, 12, 17871, 7664, 42, 1449, 7, 3, 5, 48, 19, 16, 4408, 663, 28, 8, 72, 1100, 1112, 16, 8, 14732, 924, 7860, 924, 3, 122, 1437, 41, 3, 7, 17, 122, 3, 61, 1437, 3, 6, 213, 1449, 7, 163, 2385, 16, 12493, 7, 41, 17871, 7664, 163, 4283, 16, 12493, 7, 641, 16, 1767, 5204, 3, 61, 3, 5, 62, 4410, 8, 3, 15, 1169, 2165, 1433, 344, 8, 126, 27632, 7, 11, 3, 7, 222, 858, 17, 3, 31, 3, 7, 3, 5, 258, 3, 6, 3, 9, 5932, 13, 3, 7, 17, 122, 4096, 33, 3, 9942, 3, 6, 3, 19448, 3, 18949, 8, 2024, 655, 13, 284, 20, 5927, 257, 3, 5, 8, 336, 1437, 3, 6848, 13, 3, 9, 360, 18158, 3909, 11, 165, 2357, 12, 3, 9, 7450, 1612, 19, 6211, 3, 5, 8, 1040, 92, 17212, 7, 8, 5859, 344, 8, 804, 1437, 11, 8, 1805, 3, 7, 17, 122, 1437, 6960, 16, 8, 3, 16985, 839, 210, 65, 5768, 40, 29801, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 26, 3, 5, 32101, 3, 5, 32101, 6020, 8024, 4727, 4903, 7, 11, 4516, 27632, 7, 3, 6, 28230, 3, 26, 3, 5, 32101, 3, 5, 32101, 6020, 8024, 1612, 13774, 7, 1120, 2176, 1528, 41, 5014, 3, 61, 8024, 3, 26, 3, 5, 32101, 3, 5, 32101, 6020, 8024, 7502, 7, 1081, 3381, 3, 6, 29801, 7, 3, 89, 3, 5, 32101, 3, 5, 32101, 9769, 7, 11, 2530, 7, 13, 1356, 27632, 7, 13, 6020, 8024, 7763, 27632, 7, 879, 1353, 4516, 3, 6, 8024, 3, 6, 17549, 1], "trg": "stg machine;lazy evaluation;closures;haskell compiler;operational semantics;operational semantics;functional programming;compiler verification;abstract machines;translation scheme;abstract machine;stepwise derivation", "tokenized_trg": [3, 7, 17, 122, 1437, 32100, 19743, 5002, 32100, 12493, 7, 32100, 65, 5768, 40, 29801, 32100, 7763, 27632, 7, 32100, 7763, 27632, 7, 32100, 5014, 6020, 32100, 29801, 17549, 32100, 9838, 4096, 32100, 7314, 5336, 32100, 9838, 1437, 32100, 1147, 10684, 20, 5927, 257, 1]}
{"src": "building bridges for web query classification . <sep> web query classification ( qc ) aims to classify web users ' queries , which are often short and ambiguous , into a set of target categories . qc has many applications including page ranking in web search , targeted advertisement in response to queries , and personalization . in this paper , we present a novel approach for qc that outperforms the winning solution of the acm kddcup <digit> competition , whose objective is to classify <digit> , <digit> real user queries . in our approach , we first build a bridging classifier on an intermediate taxonomy in an offline mode . this classifier is then used in an online mode to map user queries to the target categories via the above intermediate taxonomy . a major innovation is that by leveraging the similarity distribution over the intermediate taxonomy , we do not need to retrain a new classifier for each new set of target categories , and therefore the bridging classifier needs to be trained only once . in addition , we introduce category selection as a new method for narrowing down the scope of the intermediate taxonomy based on which we classify the queries . category selection can improve both efficiency and effectiveness of the online classification . by combining our algorithm with the winning solution of kddcup <digit> , we made an improvement by <digit> . <digit> % and <digit> . <digit> % in terms of precision and f1 respectively compared with the best results of kddcup <digit> . categories and subject descriptors h . <digit> . m information storage and retrieval miscellaneous i . <digit> . <digit> pattern recognition design methodology classifier design and evaluation general terms algorithms , experimentation", "tokenized_src": [740, 4716, 7, 21, 765, 11417, 13774, 3, 5, 32100, 765, 11417, 13774, 41, 3, 1824, 75, 3, 61, 3, 8345, 12, 853, 4921, 765, 1105, 3, 31, 13154, 3, 6, 84, 33, 557, 710, 11, 3, 24621, 1162, 3, 6, 139, 3, 9, 356, 13, 2387, 5897, 3, 5, 3, 1824, 75, 65, 186, 1564, 379, 543, 11592, 16, 765, 960, 3, 6, 7774, 21592, 16, 1773, 12, 13154, 3, 6, 11, 525, 1707, 3, 5, 16, 48, 1040, 3, 6, 62, 915, 3, 9, 3714, 1295, 21, 3, 1824, 75, 24, 91, 883, 2032, 7, 8, 3447, 1127, 13, 8, 3, 9, 75, 51, 3, 157, 26, 26, 4658, 32101, 2259, 3, 6, 3, 2544, 5997, 19, 12, 853, 4921, 32101, 3, 6, 32101, 490, 1139, 13154, 3, 5, 16, 69, 1295, 3, 6, 62, 166, 918, 3, 9, 3, 2160, 12720, 853, 7903, 30, 46, 18957, 1104, 32, 3114, 63, 16, 46, 13461, 2175, 3, 5, 48, 853, 7903, 19, 258, 261, 16, 46, 367, 2175, 12, 2828, 1139, 13154, 12, 8, 2387, 5897, 1009, 8, 756, 18957, 1104, 32, 3114, 63, 3, 5, 3, 9, 779, 4337, 19, 24, 57, 3, 26072, 8, 1126, 485, 3438, 147, 8, 18957, 1104, 32, 3114, 63, 3, 6, 62, 103, 59, 174, 12, 3, 60, 9719, 3, 9, 126, 853, 7903, 21, 284, 126, 356, 13, 2387, 5897, 3, 6, 11, 2459, 8, 3, 2160, 12720, 853, 7903, 523, 12, 36, 4252, 163, 728, 3, 5, 16, 811, 3, 6, 62, 4277, 3295, 1801, 38, 3, 9, 126, 1573, 21, 5658, 53, 323, 8, 7401, 13, 8, 18957, 1104, 32, 3114, 63, 3, 390, 30, 84, 62, 853, 4921, 8, 13154, 3, 5, 3295, 1801, 54, 1172, 321, 3949, 11, 9570, 13, 8, 367, 13774, 3, 5, 57, 3, 13275, 69, 12628, 28, 8, 3447, 1127, 13, 3, 157, 26, 26, 4658, 32101, 3, 6, 62, 263, 46, 4179, 57, 32101, 3, 5, 32101, 3, 1454, 11, 32101, 3, 5, 32101, 3, 1454, 16, 1353, 13, 11723, 11, 3, 89, 536, 6898, 3, 2172, 28, 8, 200, 772, 13, 3, 157, 26, 26, 4658, 32101, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 3, 51, 251, 1606, 11, 24515, 138, 1817, 7125, 8102, 1162, 3, 23, 3, 5, 32101, 3, 5, 32101, 3275, 5786, 408, 15663, 853, 7903, 408, 11, 5002, 879, 1353, 16783, 3, 6, 5016, 257, 1], "trg": "web query classification;query classification;target categories;kddcup <digit>;bridging classifier;bridging classifier;taxonomy;similarity distribution;category selection;category selection;mapping functions;ensemble classifier;matching approaches;intermediate categories;search engine;query enrichment", "tokenized_trg": [765, 11417, 13774, 32100, 11417, 13774, 32100, 2387, 5897, 32100, 3, 157, 26, 26, 4658, 32101, 32100, 3, 2160, 12720, 853, 7903, 32100, 3, 2160, 12720, 853, 7903, 32100, 1104, 32, 3114, 63, 32100, 1126, 485, 3438, 32100, 3295, 1801, 32100, 3295, 1801, 32100, 14670, 3621, 32100, 8784, 853, 7903, 32100, 8150, 6315, 32100, 18957, 5897, 32100, 960, 1948, 32100, 11417, 12812, 297, 1]}
{"src": "geographically focused collaborative crawling . <sep> a collaborative crawler is a group of crawling nodes , in which each crawling node is responsible for a specific portion of the web . we study the problem of collecting geographically aware pages using collaborative crawling strategies . we first propose several collaborative crawling strategies for the geographically focused crawling , whose goal is to collect web pages about specified geographic locations , by considering features like url address of page , content of page , extended anchor text of link , and others . later , we propose various evaluation criteria to qualify the performance of such crawling strategies . finally , we experimentally study our crawling strategies by crawling the real web data showing that some of our crawling strategies greatly outperform the simple url hash based partition collaborative crawling , in which the crawling assignments are determined according to the hash value computation over urls . more precisely , features like url address of page and extended anchor text of link are shown to yield the best overall performance for the geographically focused crawling . categories and subject descriptors h . <digit> . m information systems miscellaneous d . <digit> . <digit> soft ware engineering metrics performance measures general terms measurement , performance , experimentation", "tokenized_src": [20187, 120, 2937, 9642, 18639, 53, 3, 5, 32100, 3, 9, 9642, 18639, 49, 19, 3, 9, 563, 13, 18639, 53, 150, 1395, 3, 6, 16, 84, 284, 18639, 53, 150, 221, 19, 1966, 21, 3, 9, 806, 4149, 13, 8, 765, 3, 5, 62, 810, 8, 682, 13, 10858, 20187, 120, 2718, 1688, 338, 9642, 18639, 53, 3266, 3, 5, 62, 166, 4230, 633, 9642, 18639, 53, 3266, 21, 8, 20187, 120, 2937, 18639, 53, 3, 6, 3, 2544, 1288, 19, 12, 2868, 765, 1688, 81, 7173, 20929, 3248, 3, 6, 57, 4014, 753, 114, 3, 16137, 1115, 13, 543, 3, 6, 738, 13, 543, 3, 6, 4760, 12865, 1499, 13, 1309, 3, 6, 11, 717, 3, 5, 865, 3, 6, 62, 4230, 796, 5002, 6683, 12, 9448, 8, 821, 13, 224, 18639, 53, 3266, 3, 5, 2031, 3, 6, 62, 11082, 120, 810, 69, 18639, 53, 3266, 57, 18639, 53, 8, 490, 765, 331, 2924, 24, 128, 13, 69, 18639, 53, 3266, 6891, 91, 883, 2032, 8, 650, 3, 16137, 65, 107, 3, 390, 16540, 9642, 18639, 53, 3, 6, 16, 84, 8, 18639, 53, 14023, 33, 4187, 1315, 12, 8, 65, 107, 701, 29761, 147, 3, 16137, 7, 3, 5, 72, 11185, 3, 6, 753, 114, 3, 16137, 1115, 13, 543, 11, 4760, 12865, 1499, 13, 1309, 33, 2008, 12, 6339, 8, 200, 1879, 821, 21, 8, 20187, 120, 2937, 18639, 53, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 107, 3, 5, 32101, 3, 5, 3, 51, 251, 1002, 1817, 7125, 8102, 1162, 3, 26, 3, 5, 32101, 3, 5, 32101, 1835, 3, 3404, 3867, 15905, 821, 3629, 879, 1353, 9753, 3, 6, 821, 3, 6, 5016, 257, 1], "trg": "collaborative crawling;collaborative crawling;collaborative crawler;crawling strategies;crawling strategies;geographically focused crawling;geographically focused crawling;anchor text;evaluation criteria;geographic locality;geo focus;geographical nodes;ip address based;geo coverage;full content based;search engine;normalization and disambiguation of city names;quality issue;url based;search localization;scalability;pattern matching;problems of aliasing and ambiguity;geographic entities;hash based collaboration;focused crawler;geographic locality;extracted url", "tokenized_trg": [9642, 18639, 53, 32100, 9642, 18639, 53, 32100, 9642, 18639, 49, 32100, 18639, 53, 3266, 32100, 18639, 53, 3266, 32100, 20187, 120, 2937, 18639, 53, 32100, 20187, 120, 2937, 18639, 53, 32100, 12865, 1499, 32100, 5002, 6683, 32100, 20929, 415, 485, 32100, 9502, 992, 32100, 20187, 150, 1395, 32100, 3, 23, 102, 1115, 3, 390, 32100, 9502, 2591, 32100, 423, 738, 3, 390, 32100, 960, 1948, 32100, 1389, 1707, 11, 1028, 24621, 257, 13, 690, 3056, 32100, 463, 962, 32100, 3, 16137, 3, 390, 32100, 960, 415, 1707, 32100, 3, 7, 1489, 2020, 32100, 3275, 8150, 32100, 982, 13, 3, 5434, 7, 53, 11, 3, 24621, 485, 32100, 20929, 12311, 32100, 65, 107, 3, 390, 3561, 32100, 2937, 18639, 49, 32100, 20929, 415, 485, 32100, 21527, 3, 16137, 1]}
{"src": "graalbench a 3d graphics benchmark suite for mobile phones . <sep> in this paper we consider implementations of embedded 3d graphics and provide evidence indicating that 3d benchmarks employed for desktop computers are not suitable for mobile environments . consequently , we present graalbench , a set of 3d graphics workloads representative for contemporary and emerging mobile devices . in addition , we present detailed simulation results for a typical rasterization pipeline . the results show that the proposed benchmarks use only a part of the resources offered by current 3d graphics libraries . for instance , while each benchmark uses the texturing unit for more than <digit> % of the generated fragments , the alpha unit is employed for less than <digit> % of the fragments . the fog unit was used for <digit> % of the fragments by one benchmark , but the other benchmarks did not use it at all . our experiments on the proposed suite suggest that the texturing , depth and blending units should be implemented in hardware , while , for instance , the dithering unit may be omitted from a hardware implementation . finally , we discuss the architectural implications of the obtained results for hardware implementations . categories and subject descriptors c . <digit> special purpose and application based systems real time and embedded systems general terms performance , measurement", "tokenized_src": [3, 3484, 138, 346, 5457, 3, 9, 220, 26, 6484, 15705, 3132, 21, 1156, 7219, 3, 5, 32100, 16, 48, 1040, 62, 1099, 4432, 7, 13, 13612, 220, 26, 6484, 11, 370, 2084, 3, 15716, 24, 220, 26, 15705, 7, 8152, 21, 6555, 7827, 33, 59, 3255, 21, 1156, 8258, 3, 5, 21612, 120, 3, 6, 62, 915, 3, 3484, 138, 346, 5457, 3, 6, 3, 9, 356, 13, 220, 26, 6484, 22453, 7, 6978, 21, 4092, 11, 7821, 1156, 1904, 3, 5, 16, 811, 3, 6, 62, 915, 3117, 11108, 772, 21, 3, 9, 4541, 3, 20484, 49, 1707, 12045, 3, 5, 8, 772, 504, 24, 8, 4382, 15705, 7, 169, 163, 3, 9, 294, 13, 8, 1438, 1860, 57, 750, 220, 26, 6484, 12256, 3, 5, 21, 3421, 3, 6, 298, 284, 15705, 2284, 8, 1499, 7920, 1745, 21, 72, 145, 32101, 3, 1454, 13, 8, 6126, 12071, 7, 3, 6, 8, 491, 6977, 1745, 19, 8152, 21, 705, 145, 32101, 3, 1454, 13, 8, 12071, 7, 3, 5, 8, 20735, 1745, 47, 261, 21, 32101, 3, 1454, 13, 8, 12071, 7, 57, 80, 15705, 3, 6, 68, 8, 119, 15705, 7, 410, 59, 169, 34, 44, 66, 3, 5, 69, 12341, 30, 8, 4382, 3132, 3130, 24, 8, 1499, 7920, 3, 6, 4963, 11, 3, 24854, 3173, 225, 36, 6960, 16, 4214, 3, 6, 298, 3, 6, 21, 3421, 3, 6, 8, 3, 26, 9732, 53, 1745, 164, 36, 3, 32, 16030, 45, 3, 9, 4214, 4432, 3, 5, 2031, 3, 6, 62, 2497, 8, 10900, 12418, 13, 8, 5105, 772, 21, 4214, 4432, 7, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 534, 1730, 11, 917, 3, 390, 1002, 490, 97, 11, 13612, 1002, 879, 1353, 821, 3, 6, 9753, 1], "trg": "graalbench;graalbench;3d graphics benchmarks;3d graphics;3d graphics benchmarking;benchmark;mobile phones;embedded 3d graphics;mobile environments;workload;mobile devices;rasterization;pipeline;unit;architecture;real time;embedded systems;performance;measurement;embedded 3d graphics architectures;3d graphics applications;bottlenecks;transform and lighting;opengl;statistics;triangles;accelerators;workload characterization;opengl;api;mechanism", "tokenized_trg": [3, 3484, 138, 346, 5457, 32100, 3, 3484, 138, 346, 5457, 32100, 220, 26, 6484, 15705, 7, 32100, 220, 26, 6484, 32100, 220, 26, 6484, 15705, 53, 32100, 15705, 32100, 1156, 7219, 32100, 13612, 220, 26, 6484, 32100, 1156, 8258, 32100, 22453, 32100, 1156, 1904, 32100, 3, 20484, 49, 1707, 32100, 12045, 32100, 1745, 32100, 4648, 32100, 490, 97, 32100, 13612, 1002, 32100, 821, 32100, 9753, 32100, 13612, 220, 26, 6484, 4648, 7, 32100, 220, 26, 6484, 1564, 32100, 4782, 14694, 7, 32100, 3343, 11, 3598, 32100, 539, 122, 40, 32100, 7475, 32100, 19938, 7, 32100, 30202, 7, 32100, 22453, 3, 28561, 32100, 539, 122, 40, 32100, 3, 13306, 32100, 8557, 1]}
{"src": "handoff trigger table for integrated 3g wlan networks . <sep> vertical handoff is a switching process between heterogeneous wireless networks in a hybrid 3g wlan network . vertical handoffs <unk> to 3g network often fail due to the abrupt degrade of the wlan signal strength in the transition areas . in this paper , a handoff trigger table is introduced to improve the performance of vertical handoff . based on this table , a proactive handoff scheme is proposed . simulation results show that with the proposed scheme , the vertical handoff decisions will be more efficient so that dropping probability can be decreased dramatically . categories and subject descriptors c . <digit> performance of systems design studies c . <digit> . <digit> network architecture and design wireless communications integrated 3g wlan networks general terms performance", "tokenized_src": [609, 1647, 7294, 953, 21, 4580, 220, 122, 3, 210, 1618, 5275, 3, 5, 32100, 5857, 609, 1647, 19, 3, 9, 14569, 433, 344, 26481, 729, 15, 1162, 5419, 5275, 16, 3, 9, 9279, 220, 122, 3, 210, 1618, 1229, 3, 5, 5857, 609, 1647, 7, 2, 12, 220, 122, 1229, 557, 5124, 788, 12, 8, 25119, 20, 6801, 13, 8, 3, 210, 1618, 3240, 2793, 16, 8, 3508, 844, 3, 5, 16, 48, 1040, 3, 6, 3, 9, 609, 1647, 7294, 953, 19, 3665, 12, 1172, 8, 821, 13, 5857, 609, 1647, 3, 5, 3, 390, 30, 48, 953, 3, 6, 3, 9, 20561, 609, 1647, 5336, 19, 4382, 3, 5, 11108, 772, 504, 24, 28, 8, 4382, 5336, 3, 6, 8, 5857, 609, 1647, 3055, 56, 36, 72, 2918, 78, 24, 14087, 15834, 54, 36, 13665, 13464, 3, 5, 5897, 11, 1426, 20, 11815, 127, 7, 3, 75, 3, 5, 32101, 821, 13, 1002, 408, 2116, 3, 75, 3, 5, 32101, 3, 5, 32101, 1229, 4648, 11, 408, 5419, 5030, 4580, 220, 122, 3, 210, 1618, 5275, 879, 1353, 821, 1], "trg": "handoff trigger table;3g;wlan;vertical handoff;wireless communications;wireles networks;cellular network;integrated networks", "tokenized_trg": [609, 1647, 7294, 953, 32100, 220, 122, 32100, 3, 210, 1618, 32100, 5857, 609, 1647, 32100, 5419, 5030, 32100, 4107, 965, 5275, 32100, 3, 10791, 1229, 32100, 4580, 5275, 1]}
